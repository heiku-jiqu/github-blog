import{S as Ft,i as Gt,s as Nt,k as i,l as c,m as h,h as t,n as gt,b as s,A as xe,H as Bt,q as l,r as a,B as o,a as m,v as Rt,c as u,w as Vt,x as Jt,f as Kt,t as Lt,y as Mt}from"./index-3d0fa062.js";function qt(E,p,w){const d=E.slice();return d[1]=p[w],d}function At(E){let p,w=E[1]+"",d;return{c(){p=i("section"),d=l(w),this.h()},l(r){p=c(r,"SECTION",{class:!0});var v=h(p);d=a(v,w),v.forEach(t),this.h()},h(){gt(p,"class","item svelte-vq2zon")},m(r,v){s(r,p,v),o(p,d)},p:xe,d(r){r&&t(p)}}}function Qt(E){let p,w=E[0],d=[];for(let r=0;r<w.length;r+=1)d[r]=At(qt(E,w,r));return{c(){p=i("div");for(let r=0;r<d.length;r+=1)d[r].c();this.h()},l(r){p=c(r,"DIV",{class:!0});var v=h(p);for(let f=0;f<d.length;f+=1)d[f].l(v);v.forEach(t),this.h()},h(){gt(p,"class","container svelte-vq2zon")},m(r,v){s(r,p,v);for(let f=0;f<d.length;f+=1)d[f].m(p,null)},p(r,[v]){if(v&1){w=r[0];let f;for(f=0;f<w.length;f+=1){const D=qt(r,w,f);d[f]?d[f].p(D,v):(d[f]=At(D),d[f].c(),d[f].m(p,null))}for(;f<d.length;f+=1)d[f].d(1);d.length=w.length}},i:xe,o:xe,d(r){r&&t(p),Bt(d,r)}}}function Ut(E){return[[1,2,3,4,5,6,7]]}class Xt extends Ft{constructor(p){super(),Gt(this,p,Ut,Qt,Nt,{})}}function Yt(E){let p,w,d,r,v,f,D,Ce,N,Te,be,ee,S,Oe,te,z,oe,H,ke,le,T,ze,g,De,Se,ae,b,He,B,Pe,Ie,ne,P,$e,se,I,je,re,O,qe,R,Ae,We,ie,x,Fe,V,Ge,Ne,J,ge,Be,ce,$,Re,he,j,Ve,pe,C,Je,K,Ke,Le,L,Me,Qe,de,q,Ue,fe,_,Xe,M,Ye,Ze,Q,et,tt,U,ot,lt,X,at,nt,Y,st,rt,me,A,it,ue,k,ct,Z,ht,pt,ve;return z=new Xt({}),{c(){p=i("h1"),w=l(Wt),d=m(),r=i("p"),v=l(`There are times when we want to arrange items that scrolls horizontally.
We can achieve this using `),f=i("code"),D=l("grid-auto-flow"),Ce=l(" and "),N=i("code"),Te=l("overflow-x"),be=l(" CSS property in the parent component."),ee=m(),S=i("p"),Oe=l("Example component:"),te=m(),Rt(z.$$.fragment),oe=m(),H=i("h1"),ke=l("Horizontal grid arrangement"),le=m(),T=i("p"),ze=l("First, set "),g=i("code"),De=l("grid-auto-flow: columns;"),Se=l(" in the parent component. This will make the child elements \u201Cstack horizontally\u201D instead of vertically."),ae=m(),b=i("p"),He=l("Then set "),B=i("code"),Pe=l("grid-auto-columns: 27%"),Ie=l(" to set the width of each grid column. Choosing an odd number is good as it gives visual cue that there are more items to scroll."),ne=m(),P=i("h1"),$e=l("Horizontal scrolling"),se=m(),I=i("p"),je=l("If you have created more items than the parent component can fit, you will notice that the grid currently just populates child items more and more to the right, causing the whole window to be expanded."),re=m(),O=i("p"),qe=l("In order to make the items fit into a scrollable component, we just need to add "),R=i("code"),Ae=l("overflow-x: auto"),We=l(` to the parent component.
This tells the parent component to \u201Cclip\u201D (cut off) the extra child items, and add a horizontal scroll to see the rest of the content.`),ie=m(),x=i("p"),Fe=l("The "),V=i("code"),Ge=l("auto"),Ne=l(` keyword actually means that the parent component will automatically include/exclude the scroll bar depending on whether child items exceed the parent component.
To always have the scroll bar, use `),J=i("code"),ge=l("overflow-x: scroll"),Be=l(" instead!"),ce=m(),$=i("h1"),Re=l("Scroll snapping"),he=m(),j=i("p"),Ve=l("To further enhance the horizontal scrolling, we can add sroll snapping so that the first item visible will always not be cut off."),pe=m(),C=i("p"),Je=l("To do this, we need to add "),K=i("code"),Ke=l("scroll-snap-type"),Le=l(" and "),L=i("code"),Me=l("scroll-snap-align"),Qe=l(" to parent and child components respectively."),de=m(),q=i("h2"),Ue=l("Activate scroll snapping"),fe=m(),_=i("p"),Xe=l("In the parent component, add "),M=i("code"),Ye=l("scroll-snap-type: x mandatory"),Ze=l(`.
The `),Q=i("code"),et=l("x"),tt=l(" keyword species that you are activating snap in the x axis, and "),U=i("code"),ot=l("mandatory"),lt=l(" specifies that you are enforing the component to "),X=i("strong"),at=l("always"),nt=l(" snap child components (the alternative is using "),Y=i("code"),st=l("proximity"),rt=l(" keyword)."),me=m(),A=i("h2"),it=l("Set where to snap to"),ue=m(),k=i("p"),ct=l("In the child component, add "),Z=i("code"),ht=l("scroll-snap-align: start"),pt=l(" so that items are always snapped to the start of the first item.")},l(e){p=c(e,"H1",{});var n=h(p);w=a(n,Wt),n.forEach(t),d=u(e),r=c(e,"P",{});var W=h(r);v=a(W,`There are times when we want to arrange items that scrolls horizontally.
We can achieve this using `),f=c(W,"CODE",{});var dt=h(f);D=a(dt,"grid-auto-flow"),dt.forEach(t),Ce=a(W," and "),N=c(W,"CODE",{});var ft=h(N);Te=a(ft,"overflow-x"),ft.forEach(t),be=a(W," CSS property in the parent component."),W.forEach(t),ee=u(e),S=c(e,"P",{});var mt=h(S);Oe=a(mt,"Example component:"),mt.forEach(t),te=u(e),Vt(z.$$.fragment,e),oe=u(e),H=c(e,"H1",{});var ut=h(H);ke=a(ut,"Horizontal grid arrangement"),ut.forEach(t),le=u(e),T=c(e,"P",{});var _e=h(T);ze=a(_e,"First, set "),g=c(_e,"CODE",{});var vt=h(g);De=a(vt,"grid-auto-flow: columns;"),vt.forEach(t),Se=a(_e," in the parent component. This will make the child elements \u201Cstack horizontally\u201D instead of vertically."),_e.forEach(t),ae=u(e),b=c(e,"P",{});var we=h(b);He=a(we,"Then set "),B=c(we,"CODE",{});var _t=h(B);Pe=a(_t,"grid-auto-columns: 27%"),_t.forEach(t),Ie=a(we," to set the width of each grid column. Choosing an odd number is good as it gives visual cue that there are more items to scroll."),we.forEach(t),ne=u(e),P=c(e,"H1",{});var wt=h(P);$e=a(wt,"Horizontal scrolling"),wt.forEach(t),se=u(e),I=c(e,"P",{});var yt=h(I);je=a(yt,"If you have created more items than the parent component can fit, you will notice that the grid currently just populates child items more and more to the right, causing the whole window to be expanded."),yt.forEach(t),re=u(e),O=c(e,"P",{});var ye=h(O);qe=a(ye,"In order to make the items fit into a scrollable component, we just need to add "),R=c(ye,"CODE",{});var Et=h(R);Ae=a(Et,"overflow-x: auto"),Et.forEach(t),We=a(ye,` to the parent component.
This tells the parent component to \u201Cclip\u201D (cut off) the extra child items, and add a horizontal scroll to see the rest of the content.`),ye.forEach(t),ie=u(e),x=c(e,"P",{});var F=h(x);Fe=a(F,"The "),V=c(F,"CODE",{});var xt=h(V);Ge=a(xt,"auto"),xt.forEach(t),Ne=a(F,` keyword actually means that the parent component will automatically include/exclude the scroll bar depending on whether child items exceed the parent component.
To always have the scroll bar, use `),J=c(F,"CODE",{});var Ct=h(J);ge=a(Ct,"overflow-x: scroll"),Ct.forEach(t),Be=a(F," instead!"),F.forEach(t),ce=u(e),$=c(e,"H1",{});var Tt=h($);Re=a(Tt,"Scroll snapping"),Tt.forEach(t),he=u(e),j=c(e,"P",{});var bt=h(j);Ve=a(bt,"To further enhance the horizontal scrolling, we can add sroll snapping so that the first item visible will always not be cut off."),bt.forEach(t),pe=u(e),C=c(e,"P",{});var G=h(C);Je=a(G,"To do this, we need to add "),K=c(G,"CODE",{});var Ot=h(K);Ke=a(Ot,"scroll-snap-type"),Ot.forEach(t),Le=a(G," and "),L=c(G,"CODE",{});var kt=h(L);Me=a(kt,"scroll-snap-align"),kt.forEach(t),Qe=a(G," to parent and child components respectively."),G.forEach(t),de=u(e),q=c(e,"H2",{});var zt=h(q);Ue=a(zt,"Activate scroll snapping"),zt.forEach(t),fe=u(e),_=c(e,"P",{});var y=h(_);Xe=a(y,"In the parent component, add "),M=c(y,"CODE",{});var Dt=h(M);Ye=a(Dt,"scroll-snap-type: x mandatory"),Dt.forEach(t),Ze=a(y,`.
The `),Q=c(y,"CODE",{});var St=h(Q);et=a(St,"x"),St.forEach(t),tt=a(y," keyword species that you are activating snap in the x axis, and "),U=c(y,"CODE",{});var Ht=h(U);ot=a(Ht,"mandatory"),Ht.forEach(t),lt=a(y," specifies that you are enforing the component to "),X=c(y,"STRONG",{});var Pt=h(X);at=a(Pt,"always"),Pt.forEach(t),nt=a(y," snap child components (the alternative is using "),Y=c(y,"CODE",{});var It=h(Y);st=a(It,"proximity"),It.forEach(t),rt=a(y," keyword)."),y.forEach(t),me=u(e),A=c(e,"H2",{});var $t=h(A);it=a($t,"Set where to snap to"),$t.forEach(t),ue=u(e),k=c(e,"P",{});var Ee=h(k);ct=a(Ee,"In the child component, add "),Z=c(Ee,"CODE",{});var jt=h(Z);ht=a(jt,"scroll-snap-align: start"),jt.forEach(t),pt=a(Ee," so that items are always snapped to the start of the first item."),Ee.forEach(t)},m(e,n){s(e,p,n),o(p,w),s(e,d,n),s(e,r,n),o(r,v),o(r,f),o(f,D),o(r,Ce),o(r,N),o(N,Te),o(r,be),s(e,ee,n),s(e,S,n),o(S,Oe),s(e,te,n),Jt(z,e,n),s(e,oe,n),s(e,H,n),o(H,ke),s(e,le,n),s(e,T,n),o(T,ze),o(T,g),o(g,De),o(T,Se),s(e,ae,n),s(e,b,n),o(b,He),o(b,B),o(B,Pe),o(b,Ie),s(e,ne,n),s(e,P,n),o(P,$e),s(e,se,n),s(e,I,n),o(I,je),s(e,re,n),s(e,O,n),o(O,qe),o(O,R),o(R,Ae),o(O,We),s(e,ie,n),s(e,x,n),o(x,Fe),o(x,V),o(V,Ge),o(x,Ne),o(x,J),o(J,ge),o(x,Be),s(e,ce,n),s(e,$,n),o($,Re),s(e,he,n),s(e,j,n),o(j,Ve),s(e,pe,n),s(e,C,n),o(C,Je),o(C,K),o(K,Ke),o(C,Le),o(C,L),o(L,Me),o(C,Qe),s(e,de,n),s(e,q,n),o(q,Ue),s(e,fe,n),s(e,_,n),o(_,Xe),o(_,M),o(M,Ye),o(_,Ze),o(_,Q),o(Q,et),o(_,tt),o(_,U),o(U,ot),o(_,lt),o(_,X),o(X,at),o(_,nt),o(_,Y),o(Y,st),o(_,rt),s(e,me,n),s(e,A,n),o(A,it),s(e,ue,n),s(e,k,n),o(k,ct),o(k,Z),o(Z,ht),o(k,pt),ve=!0},p:xe,i(e){ve||(Kt(z.$$.fragment,e),ve=!0)},o(e){Lt(z.$$.fragment,e),ve=!1},d(e){e&&t(p),e&&t(d),e&&t(r),e&&t(ee),e&&t(S),e&&t(te),Mt(z,e),e&&t(oe),e&&t(H),e&&t(le),e&&t(T),e&&t(ae),e&&t(b),e&&t(ne),e&&t(P),e&&t(se),e&&t(I),e&&t(re),e&&t(O),e&&t(ie),e&&t(x),e&&t(ce),e&&t($),e&&t(he),e&&t(j),e&&t(pe),e&&t(C),e&&t(de),e&&t(q),e&&t(fe),e&&t(_),e&&t(me),e&&t(A),e&&t(ue),e&&t(k)}}}const Zt={title:"CSS Horizontal Scrolling Items With Grid",date:"2022-09-09"},{title:Wt,date:to}=Zt;class oo extends Ft{constructor(p){super(),Gt(this,p,null,Yt,Nt,{})}}export{oo as default,Zt as metadata};
