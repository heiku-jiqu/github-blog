import{S as A5,i as M5,s as x5,k as a,q as l,a as f,l as r,m as i,r as s,h as o,c as d,n as p,b as c,B as t,A as i3}from"./index-4cbca6b4.js";function U5(Gk){let me,rf,$r,Ut,nf,jr,Yt,cf,Xr,Gt,ff,Qr,Kt,df,Zr,Wt,pf,Jr,Vt,uf,gr,ve,M,Ef,Ll,mf,vf,Nl,hf,_f,Hl,kf,Df,wf,je,Of,Sl,bf,yf,ei,Ft,Cf,ti,Bt,If,oi,Xe,Al,Pf,Rf,li,qt,Tf,si,he,Lf,Ml,Nf,Hf,ai,zt,Sf,ri,$t,Af,ii,jt,Mf,ni,_e,xf,xl,Uf,Yf,ci,Xt,Gf,fi,C,Kf,Ul,Wf,Vf,Yl,Ff,Bf,Gl,qf,zf,di,Qt,$f,pi,ke,jf,Kl,Xf,Qf,ui,Zt,Zf,Ei,Jt,Jf,mi,De,gf,Wl,ed,td,vi,gt,od,hi,_i,ki,eo,ld,Di,to,sd,wi,oo,ad,Oi,we,rd,Vl,id,nd,bi,Qe,Kk=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">FROM</span> apache/spark</span>

<span class="token comment"># to specify a tag</span>
<span class="token instruction"><span class="token keyword">FROM</span> apache/spark:3.3.1</span></code>`,yi,lo,cd,Ci,so,fd,Ii,Ze,Wk=`<code class="language-dockerfile"><span class="token comment"># Shell form (defaults to /bin/sh -c on Linux or cmd /S /C on Windows)</span>
<span class="token instruction"><span class="token keyword">RUN</span> &lt;command></span>

<span class="token comment"># Exec form</span>
<span class="token instruction"><span class="token keyword">RUN</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>]</span></code>`,Pi,ao,dd,Ri,ro,pd,Ti,Je,Vk=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # exec form</span>
<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # default parameters to ENTRYPOINT</span>
<span class="token instruction"><span class="token keyword">CMD</span> command param1 param2 # shell form</span></code>`,Li,io,ud,Ni,no,Ed,Hi,ge,Fk=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ENTRYPOINT</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # exec form</span>
<span class="token instruction"><span class="token keyword">ENTRYPOINT</span> command param1 param2 # shell form</span></code>`,Si,co,md,Ai,fo,vd,Mi,et,Bk=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">COPY</span> &lt;src>... &lt;dest></span>
<span class="token instruction"><span class="token keyword">COPY</span> [<span class="token string">"&lt;src>"</span>,... <span class="token string">"&lt;dest>"</span>] # used when there are spaces in path</span></code>`,xi,W,hd,Fl,_d,kd,Bl,Dd,wd,Ui,Oe,Od,ql,bd,yd,Yi,po,Cd,Gi,uo,Id,Ki,tt,qk=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ADD</span> &lt;src>... &lt;dest></span>
<span class="token instruction"><span class="token keyword">ADD</span> [<span class="token string">"&lt;src>"</span>,... <span class="token string">"&lt;dest>"</span>] # used when there are spaces in path</span></code>`,Wi,be,Pd,zl,Rd,Td,Vi,V,$l,Ld,Nd,ot,Hd,jl,Sd,Ad,Md,Xl,xd,Fi,lt,Ql,Ud,Yd,Bi,F,Gd,Zl,Kd,Wd,Jl,Vd,Fd,qi,ye,Bd,gl,qd,zd,zi,Eo,$d,$i,mo,jd,ji,st,zk='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ENV</span> &lt;key>=&lt;value></span></code>',Xi,vo,Xd,Qi,ho,Qd,Zi,at,$k='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">EXPOSE</span> &lt;port> [&lt;port>/&lt;protocol>]</span></code>',Ji,x,es,Zd,Jd,ts,gd,ep,os,tp,op,gi,_o,lp,en,ko,sp,tn,rt,jk=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">VOLUME</span> &lt;path/to/container/dir> &lt;path/to/container/dir2> # space separated paths</span>
<span class="token instruction"><span class="token keyword">VOLUME</span> [<span class="token string">"&lt;/path/to/dir1>"</span>, <span class="token string">"&lt;/path/to/dir2>"</span>] #json array</span></code>`,on,Ce,ap,ls,rp,ip,ln,Do,np,sn,v,cp,ss,fp,dp,as,pp,up,rs,Ep,mp,is,vp,hp,ns,_p,kp,an,it,Xk=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">WORKDIR</span> /path/to/workdir # absolute paths, i.e. starts with /</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> path/to/child/dir # relative path, i.e. does not start with /</span></code>`,rn,Ie,Dp,cs,wp,Op,nn,B,bp,fs,yp,Cp,ds,Ip,Pp,cn,wo,nt,Rp,ps,Tp,Lp,fn,q,Np,us,Hp,Sp,Es,Ap,Mp,dn,Oo,xp,pn,z,Up,ms,Yp,Gp,vs,Kp,Wp,un,ct,Qk='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ARG</span> &lt;name>[=&lt;default value>]</span></code>',En,U,hs,Vp,Fp,_s,Bp,qp,ks,zp,$p,mn,bo,jp,vn,yo,Xp,hn,ft,Zk='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ONBUILD</span> &lt;INSTRUCTION></span></code>',_n,Co,Qp,kn,dt,Jk=`<code class="language-dockerfile"><span class="token comment"># copy host files to /contents in the container</span>
<span class="token instruction"><span class="token keyword">ONBUILD</span> <span class="token keyword">ADD</span> . /contents</span>

<span class="token comment"># tar all files in the /contents directory in the container to archive.tar in the container</span>
<span class="token instruction"><span class="token keyword">ONBUILD</span> <span class="token keyword">RUN</span> tar -cfv archive.tar /contents</span></code>`,Dn,$,Zp,Ds,Jp,gp,ws,eu,tu,wn,pt,Os,ou,lu,On,Io,su,bn,Po,au,yn,ut,gk='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">STOPSIGNAL</span> signal</span></code>',Cn,j,Ro,ru,bs,iu,nu,ce,cu,ys,fu,du,Cs,pu,uu,Eu,Et,mu,Is,vu,hu,In,To,_u,Pn,Lo,ku,Rn,mt,e5=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">HEALTHCHECK</span> [OPTIONS] CMD command</span>
<span class="token instruction"><span class="token keyword">HEALTHCHECK</span> <span class="token keyword">NONE</span> # disable any healthcheck from base image</span></code>`,Tn,vt,Ps,Du,wu,Ln,I,Pe,Rs,Ou,bu,Ts,yu,Cu,Iu,Re,Ls,Pu,Ru,Ns,Tu,Lu,Nu,Te,Hs,Hu,Su,Ss,Au,Mu,xu,Le,As,Uu,Yu,Ms,Gu,Ku,Nn,h,Wu,xs,Vu,Fu,Us,Bu,qu,Ys,zu,$u,Gs,ju,Xu,Ks,Qu,Zu,Hn,X,Ju,Ws,gu,eE,Vs,tE,oE,Sn,Q,lE,Fs,sE,aE,Bs,rE,iE,An,No,nE,Mn,Z,cE,qs,fE,dE,zs,pE,uE,xn,ht,t5='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">SHELL</span> [<span class="token string">"executable"</span>, <span class="token string">"parameters"</span>]</span></code>',Un,Ho,EE,Yn,So,mE,Gn,_t,o5=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">USER</span> &lt;user></span>
<span class="token instruction"><span class="token keyword">USER</span> &lt;UID></span></code>`,Kn,Ao,vE,Wn,Mo,hE,Vn,Ne,_E,$s,kE,DE,Fn,kt,l5='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">LABEL</span> &lt;key>=&lt;value> &lt;key>=&lt;value> ...</span></code>',Bn,xo,wE,qn,He,OE,js,bE,yE,zn,J,CE,Xs,IE,PE,Qs,RE,TE,$n,Se,g,Zs,LE,NE,Js,HE,SE,gs,AE,ME,xE,_,ea,UE,YE,ta,GE,KE,oa,WE,VE,la,FE,BE,sa,qE,zE,jn,u,$E,aa,jE,XE,ra,QE,ZE,ia,JE,gE,na,em,tm,ca,om,lm,fa,sm,am,da,rm,im,pa,nm,cm,ua,fm,dm,Ea,pm,um,ma,Em,mm,Xn,Dt,s5=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">FROM</span> example</span>
<span class="token instruction"><span class="token keyword">ENV</span> var=/bar</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token variable">$&#123;var&#125;</span> # WORKDIR /bar</span>
<span class="token instruction"><span class="token keyword">ADD</span> . <span class="token variable">$FOO</span>     # ADD . /bar</span></code>`,Qn,Uo,va,vm,Zn,P,hm,ha,_m,km,_a,Dm,wm,ka,Om,bm,Jn,Yo,ym,gn,ec,tc,Go,Cm,oc,Ko,Im,lc,Wo,Pm,sc,wt,a5='<code class="language-undefined">docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]</code>',ac,ee,Da,Rm,Tm,wa,k,Oa,Lm,Nm,ba,Hm,Sm,ya,Am,Mm,Ca,xm,Um,Ia,Ym,Gm,Km,Vo,Wm,Pa,Vm,rc,Ot,Ra,Fm,Bm,ic,D,Ta,qm,zm,La,$m,jm,Na,Xm,Qm,Ha,Zm,Jm,Sa,gm,nc,Fo,e1,cc,m,Bo,Aa,t1,o1,l1,Y,Ma,s1,a1,xa,r1,i1,Ua,n1,c1,Ya,f1,d1,R,Ga,p1,u1,Ka,E1,m1,Wa,v1,h1,Va,_1,k1,D1,T,Fa,w1,O1,Ba,b1,y1,qa,C1,I1,za,P1,R1,T1,Ae,$a,L1,N1,ja,H1,S1,A1,qo,Xa,M1,x1,U1,L,Qa,Y1,G1,Za,K1,W1,Ja,V1,F1,bt,B1,q1,fc,Me,ga,z1,$1,fe,j1,yt,X1,Q1,Ct,Z1,J1,dc,zo,g1,pc,$o,ev,uc,jo,tv,Ec,Xo,ov,mc,Qo,lv,vc,Zo,sv,hc,te,av,er,rv,iv,tr,nv,cv,_c,It,r5='<code class="language-undefined">docker logs [OPTIONS] CONTAINER</code>',kc,Jo,fv,Dc,w,xe,or,dv,pv,lr,uv,Ev,mv,Ue,sr,vv,hv,ar,_v,kv,Dv,oe,rr,wv,Ov,ir,bv,yv,nr,Cv,Iv,Pv,N,cr,Rv,Tv,fr,Lv,Nv,dr,Hv,Sv,pr,Av,Mv,xv,Ye,ur,Uv,Yv,Er,Gv,Kv,wc,go,Wv,Oc,el,Vv,bc,Pt,i5='<code class="language-undefined">docker inspect [OPTIONS] NAME|ID</code>',yc,tl,Fv,Cc,ol,Bv,Ic,Rt,n5='<code class="language-undefined">docker ps [OPTIONS]</code>',Pc,ll,qv,Rc,O,Ge,mr,zv,$v,vr,jv,Xv,Qv,le,hr,Zv,Jv,_r,gv,eh,kr,th,oh,lh,sl,Dr,sh,ah,rh,se,wr,ih,nh,Or,ch,fh,br,dh,ph,uh,y,yr,Eh,mh,Cr,vh,hh,Ir,_h,kh,Pr,Dh,wh,Tt,Ke,Rr,Oh,bh,Tr,yh,Ch,Ih,al,Lr,Ph,Rh,Tc,rl,Th,Lc,il,Lh,Nc,Lt,c5='<code class="language-undefined">docker stats [OPTIONS] [CONTAINER...]</code>',Hc,nl,Nh,Sc,H,We,Nr,Hh,Sh,Hr,Ah,Mh,xh,cl,Sr,Uh,Yh,Gh,fl,Ar,Kh,Wh,Vh,dl,Mr,Fh,Bh,Ac,Mc,xc,pl,qh,Uc,Yc,Gc,ul,zh;return{c(){me=a("h1"),rf=l(Yk),$r=f(),Ut=a("p"),nf=l("Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),jr=f(),Yt=a("p"),cf=l(`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),Xr=f(),Gt=a("h2"),ff=l("key concepts"),Qr=f(),Kt=a("h3"),df=l("Docker images"),Zr=f(),Wt=a("p"),pf=l(`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),Jr=f(),Vt=a("p"),uf=l("Images are often build on top of one another"),gr=f(),ve=a("ul"),M=a("li"),Ef=l("e.g. you start with "),Ll=a("code"),mf=l("ubuntu"),vf=l(" image, install "),Nl=a("code"),hf=l("python"),_f=l(" in that ubuntu image, install "),Hl=a("code"),kf=l("pytorch"),Df=l(" package, install pretrained models."),wf=f(),je=a("li"),Of=l("or you can start with a published "),Sl=a("code"),bf=l("python"),yf=l(" image, and install your packages there."),ei=f(),Ft=a("p"),Cf=l("Published images are available for download in Docker registries."),ti=f(),Bt=a("h4"),If=l("Dockerfile"),oi=f(),Xe=a("p"),Al=a("code"),Pf=l("Dockerfile"),Rf=l("s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),li=f(),qt=a("h3"),Tf=l("Docker containers"),si=f(),he=a("p"),Lf=l(`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),Ml=a("code"),Nf=l("nodejs"),Hf=l(" image, but one exposes port 8888 and another exposes port 8899."),ai=f(),zt=a("h3"),Sf=l("Docker registries"),ri=f(),$t=a("p"),Af=l("Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),ii=f(),jt=a("h3"),Mf=l("Docker daemon"),ni=f(),_e=a("p"),xf=l("This is the underlying "),xl=a("code"),Uf=l("dockerd"),Yf=l(" process that helps you build images and run containers. It will listen for Docker API requests"),ci=f(),Xt=a("h3"),Gf=l("Docker client"),fi=f(),C=a("p"),Kf=l("The docker client "),Ul=a("code"),Wf=l("docker"),Vf=l(" is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),Yl=a("code"),Ff=l("docker"),Bf=l(" command sends Docker API requests to "),Gl=a("code"),qf=l("dockerd"),zf=l("."),di=f(),Qt=a("h3"),$f=l("Docker compose"),pi=f(),ke=a("p"),jf=l("Docker compose is a tool that helps with running "),Kl=a("em"),Xf=l("multi-container"),Qf=l(" Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),ui=f(),Zt=a("p"),Zf=l("For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),Ei=f(),Jt=a("h4"),Jf=l("Difference between Kubernetes"),mi=f(),De=a("p"),gf=l("Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),Wl=a("em"),ed=l("single-node"),td=l(", whereas Kubernetes is a full multi-node container manager."),vi=f(),gt=a("p"),od=l("Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),hi=f(),_i=a("hr"),ki=f(),eo=a("h2"),ld=l("Dockerfile"),Di=f(),to=a("h3"),sd=l("Commands"),wi=f(),oo=a("h4"),ad=l("FROM"),Oi=f(),we=a("p"),rd=l("All dockerfile starts with the "),Vl=a("code"),id=l("FROM"),nd=l(" command. It pulls the base image from Dockerhub to start to build your image."),bi=f(),Qe=a("pre"),yi=f(),lo=a("h4"),cd=l("RUN"),Ci=f(),so=a("p"),fd=l("Runs a command or executable. It has two forms"),Ii=f(),Ze=a("pre"),Pi=f(),ao=a("h4"),dd=l("CMD"),Ri=f(),ro=a("p"),pd=l("Provides defaults for an executing container. The arguments will be appended to ENTRYPOINT."),Ti=f(),Je=a("pre"),Li=f(),io=a("h4"),ud=l("ENTRYPOINT"),Ni=f(),no=a("p"),Ed=l(`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),Hi=f(),ge=a("pre"),Si=f(),co=a("h4"),md=l("COPY"),Ai=f(),fo=a("p"),vd=l("Copies file from your native host into the container image."),Mi=f(),et=a("pre"),xi=f(),W=a("p"),hd=l("Multiple "),Fl=a("code"),_d=l("<src>"),kd=l(" can be specified, and the last argument will be treated as the "),Bl=a("code"),Dd=l("<dest>"),wd=l("."),Ui=f(),Oe=a("p"),Od=l("All "),ql=a("code"),bd=l("<src>"),yd=l(" relative paths must be inside context of the build!"),Yi=f(),po=a("h4"),Cd=l("ADD"),Gi=f(),uo=a("p"),Id=l("Copies file from your native host into the container image."),Ki=f(),tt=a("pre"),Wi=f(),be=a("p"),Pd=l("Compared to COPY, "),zl=a("code"),Rd=l("ADD"),Td=l(" has added utilities like:"),Vi=f(),V=a("ul"),$l=a("li"),Ld=l("being able to download files from URLs then copying them into the image"),Nd=f(),ot=a("li"),Hd=l("extracting contents of "),jl=a("code"),Sd=l(".tar"),Ad=l(" files before copying into image"),Md=f(),Xl=a("li"),xd=l("adding contents from a git repo"),Fi=f(),lt=a("p"),Ql=a("strong"),Ud=l("tip: use COPY as default, unless you need the additional features of ADD."),Yd=l(" This is to prevent unwanted side effects!"),Bi=f(),F=a("p"),Gd=l("Multiple "),Zl=a("code"),Kd=l("<src>"),Wd=l(" can be specified, and the last argument will be treated as the "),Jl=a("code"),Vd=l("<dest>"),Fd=l("."),qi=f(),ye=a("p"),Bd=l("All "),gl=a("code"),qd=l("<src>"),zd=l(" relative paths must be inside context of the build!"),zi=f(),Eo=a("h4"),$d=l("ENV"),$i=f(),mo=a("p"),jd=l("Sets an environment variable"),ji=f(),st=a("pre"),Xi=f(),vo=a("h4"),Xd=l("EXPOSE"),Qi=f(),ho=a("p"),Qd=l("Instructs Docker that container should listen on specified network ports at runtime."),Zi=f(),at=a("pre"),Ji=f(),x=a("p"),es=a("strong"),Zd=l("Ports are not automatically published"),Jd=l(`, and this command is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),ts=a("code"),gd=l("-P"),ep=l(" flag (which maps exposed ports in container to random ports in native host machine), or "),os=a("code"),tp=l("-p"),op=l(" to explicitly map ports from containers to your localhost."),gi=f(),_o=a("h4"),lp=l("VOLUME"),en=f(),ko=a("p"),sp=l(`Marks the directory(s) within the container as an external drive from native host or other containers.
This allows files to be accessed from outside the containers.`),tn=f(),rt=a("pre"),on=f(),Ce=a("p"),ap=l("Note that where this (container) directory maps to in your native host is "),ls=a("strong"),rp=l("specified when you build or run the container"),ip=l("."),ln=f(),Do=a("h4"),np=l("WORKDIR"),sn=f(),v=a("p"),cp=l("Sets working directory for any "),ss=a("code"),fp=l("RUN"),dp=l(", "),as=a("code"),pp=l("CMD"),up=l(", "),rs=a("code"),Ep=l("ENTRYPOINT"),mp=l(", "),is=a("code"),vp=l("COPY"),hp=l(", "),ns=a("code"),_p=l("ADD"),kp=l(" instructions that follows."),an=f(),it=a("pre"),rn=f(),Ie=a("p"),Dp=l("Multiple "),cs=a("code"),wp=l("WORKDIR"),Op=l(" can be used in a dockerfile."),nn=f(),B=a("p"),bp=l("If not specified, default directory is "),fs=a("code"),yp=l("/"),Cp=l(`.
But if you are pulling from an image, chances are `),ds=a("code"),Ip=l("WORKDIR"),Pp=l(" already been set in your base image and it will be brought over."),cn=f(),wo=a("p"),nt=a("strong"),Rp=l("tip: explicitly set "),ps=a("code"),Tp=l("WORKDIR"),Lp=l(" to prevent unintended operations in unknown dirs"),fn=f(),q=a("p"),Np=l("It is also possible to resolve env variables previously set by "),us=a("code"),Hp=l("ENV"),Sp=l(", e.g. "),Es=a("code"),Ap=l("WORKDIR $DIRPATH_ENV_VAR"),Mp=l("."),dn=f(),Oo=a("h4"),xp=l("ARG"),pn=f(),z=a("p"),Up=l("Defines a variable that users can pass values into during "),ms=a("code"),Yp=l("docker build"),Gp=l(" by using "),vs=a("code"),Kp=l("--build-arg <argname>=<value>"),Wp=l(" flag."),un=f(),ct=a("pre"),En=f(),U=a("p"),hs=a("code"),Vp=l("ENV"),Fp=l(" variables will overwrite "),_s=a("code"),Bp=l("ARG"),qp=l(" variables if they are the same name (at the point where the "),ks=a("code"),zp=l("ENV"),$p=l(" variable is defined)."),mn=f(),bo=a("h4"),jp=l("ONBUILD"),vn=f(),yo=a("p"),Xp=l("Adds a trigger to the image that will execute dockerfile instructions when the current image is used as the base for another build."),hn=f(),ft=a("pre"),_n=f(),Co=a("p"),Qp=l("This command is usful when when you are building a base image that will be distributed to other people, and instructions that depend on other people\u2019s files needs to be run. Example, you could add:"),kn=f(),dt=a("pre"),Dn=f(),$=a("p"),Zp=l("The instructions specified are triggered "),Ds=a("em"),Jp=l("immediately"),gp=l(" after the "),ws=a("code"),eu=l("FROM"),tu=l(" instruction in the child image."),wn=f(),pt=a("p"),Os=a("code"),ou=l("ONBUILD"),lu=l(" triggers are not inherited by children images."),On=f(),Io=a("h4"),su=l("STOPSIGNAL"),bn=f(),Po=a("p"),au=l("Sets the system call signal that will cause the container to exit."),yn=f(),ut=a("pre"),Cn=f(),j=a("ul"),Ro=a("li"),ru=l("Default is "),bs=a("code"),iu=l("SIGTERM"),nu=f(),ce=a("li"),cu=l("Can be in "),ys=a("code"),fu=l("SIG<NAME>"),du=l(" format (e.g. "),Cs=a("code"),pu=l("SIGKILL"),uu=l(")"),Eu=f(),Et=a("li"),mu=l("Can be an unassigned number in kernel\u2019s syscall table (e.g. "),Is=a("code"),vu=l("9"),hu=l(")"),In=f(),To=a("h4"),_u=l("HEALTHCHECK"),Pn=f(),Lo=a("p"),ku=l("Specifies a command to be run inside the container to check container\u2019s health."),Rn=f(),mt=a("pre"),Tn=f(),vt=a("p"),Ps=a("code"),Du=l("OPTIONS"),wu=l(" include:"),Ln=f(),I=a("ul"),Pe=a("li"),Rs=a("code"),Ou=l("--interval=DURATION"),bu=l(" (default "),Ts=a("code"),yu=l("30s"),Cu=l(")"),Iu=f(),Re=a("li"),Ls=a("code"),Pu=l("--timeout=DURATION"),Ru=l(" (default "),Ns=a("code"),Tu=l("30s"),Lu=l(")"),Nu=f(),Te=a("li"),Hs=a("code"),Hu=l("--retries=N"),Su=l(" (default "),Ss=a("code"),Au=l("3"),Mu=l(")"),xu=f(),Le=a("li"),As=a("code"),Uu=l("--start-period=DURATION"),Yu=l(" (default "),Ms=a("code"),Gu=l("0s"),Ku=l(")"),Nn=f(),h=a("p"),Wu=l("A container that has "),xs=a("code"),Vu=l("HEALTHCHECK"),Fu=l(" specified will have a "),Us=a("em"),Bu=l("health status"),qu=l(" that can take 3 possible states: "),Ys=a("code"),zu=l("starting"),$u=l(" | "),Gs=a("code"),ju=l("healthy"),Xu=l(" | "),Ks=a("code"),Qu=l("unhealthy"),Zu=l("."),Hn=f(),X=a("p"),Ju=l("Whenever a health check passes, health status changes to "),Ws=a("code"),gu=l("healthy"),eE=l(". After a number of consecutive failures, health status changes to "),Vs=a("code"),tE=l("unhealthy"),oE=l("."),Sn=f(),Q=a("p"),lE=l(`Health checks are run after every interval.
Health checks are considered failed when commands runs for longer than timeout.
When consecutive failures reaches max retries, or command exits with non zero status code `),Fs=a("code"),sE=l("0"),aE=l(", "),Bs=a("em"),rE=l("health status"),iE=l(" will change to unhealthy."),An=f(),No=a("h4"),nE=l("SHELL"),Mn=f(),Z=a("p"),cE=l("Specifies the default shell used for shell form of commands. Default is set to "),qs=a("code"),fE=l('["/bin/sh", "-c"]'),dE=l(" for Linux containers and "),zs=a("code"),pE=l('["cmd", "/S", "/C"]'),uE=l(" for Windows containers."),xn=f(),ht=a("pre"),Un=f(),Ho=a("h4"),EE=l("USER"),Yn=f(),So=a("p"),mE=l("Sets the username/UID to use for the remainder of the Docker build stage."),Gn=f(),_t=a("pre"),Kn=f(),Ao=a("p"),vE=l(`This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),Wn=f(),Mo=a("h4"),hE=l("LABEL"),Vn=f(),Ne=a("p"),_E=l("Adds metadata to an image and are inherited by child images. You can view an image\u2019s labels using "),$s=a("code"),kE=l("docker image inspect"),DE=l("."),Fn=f(),kt=a("pre"),Bn=f(),xo=a("h3"),wE=l("Environment Replacement"),qn=f(),He=a("p"),OE=l("Some Dockerfile instructions are able to read environment variables created by "),js=a("code"),bE=l("ENV"),yE=l(" commands, and replace them with the values that those environment variables hold."),zn=f(),J=a("p"),CE=l("The syntax is "),Xs=a("code"),IE=l("$variable_name"),PE=l(" or "),Qs=a("code"),RE=l("${variable_name}"),TE=l(" within a Dockerfile."),$n=f(),Se=a("ul"),g=a("li"),Zs=a("code"),LE=l("${variable:-word}"),NE=l(" to set "),Js=a("code"),HE=l("word"),SE=l(" as default value when "),gs=a("code"),AE=l("variable"),ME=l(" is not set"),xE=f(),_=a("li"),ea=a("code"),UE=l("${variable:+word}"),YE=l(" to set "),ta=a("code"),GE=l("word"),KE=l(" as "),oa=a("code"),WE=l("variable"),VE=l(" when "),la=a("code"),FE=l("variable"),BE=l(" has already been set, otherwise "),sa=a("code"),qE=l("variable"),zE=l(" will be empty string."),jn=f(),u=a("p"),$E=l("Dockerfile instructions that support environment variables are: "),aa=a("code"),jE=l("ADD"),XE=l(", "),ra=a("code"),QE=l("COPY"),ZE=l(", "),ia=a("code"),JE=l("ENV"),gE=l(", "),na=a("code"),em=l("EXPOSE"),tm=l(", "),ca=a("code"),om=l("FROM"),lm=l(", "),fa=a("code"),sm=l("LABEL"),am=l(", "),da=a("code"),rm=l("STOPSIGNAL"),im=l(", "),pa=a("code"),nm=l("USER"),cm=l(", "),ua=a("code"),fm=l("VOLUME"),dm=l(", "),Ea=a("code"),pm=l("WORKDIR"),um=l(", "),ma=a("code"),Em=l("ONBUILD"),mm=l("."),Xn=f(),Dt=a("pre"),Qn=f(),Uo=a("h3"),va=a("code"),vm=l(".dockerignore"),Zn=f(),P=a("p"),hm=l("Similar to "),ha=a("code"),_m=l(".gitignore"),km=l(", this file contains a list of files and directories that docker should "),_a=a("strong"),Dm=l("exclude"),wm=l(" from the "),ka=a("em"),Om=l("context"),bm=l(" of a docker build."),Jn=f(),Yo=a("p"),ym=l("This is useful for preventing sending of large or sensitive files to docker daemon."),gn=f(),ec=a("hr"),tc=f(),Go=a("h2"),Cm=l("useful docker CLI commands"),oc=f(),Ko=a("h3"),Im=l("docker run"),lc=f(),Wo=a("p"),Pm=l("Runs your images as isolated containers."),sc=f(),wt=a("pre"),ac=f(),ee=a("details"),Da=a("summary"),Rm=l("details"),Tm=f(),wa=a("p"),k=a("em"),Oa=a("code"),Lm=l("docker run"),Nm=l("\u2019s "),ba=a("code"),Hm=l("[OPTIONS]"),Sm=l(" are specified "),ya=a("strong"),Am=l("before"),Mm=l(" the image name, whilst arguments ("),Ca=a("code"),xm=l("[ARG...]"),Um=l(") for the command to be executed within the container is "),Ia=a("strong"),Ym=l("AFTER"),Gm=l(" the image name and command."),Km=f(),Vo=a("p"),Wm=l("for example: "),Pa=a("code"),Vm=l("docker run -ti ubuntu-image touch /path/to/file"),rc=f(),Ot=a("p"),Ra=a("code"),Fm=l("docker run"),Bm=l(" is able to set many runtime options and override default settings defined by images, these include:"),ic=f(),D=a("ul"),Ta=a("li"),qm=l("running container in foreground or detached mode"),zm=f(),La=a("li"),$m=l("name of container"),jm=f(),Na=a("li"),Xm=l("network settings"),Qm=f(),Ha=a("li"),Zm=l("volume settings"),Jm=f(),Sa=a("li"),gm=l("cpu / memory limits"),nc=f(),Fo=a("p"),e1=l("Common options to specify:"),cc=f(),m=a("ul"),Bo=a("li"),Aa=a("code"),t1=l("--name"),o1=l(" : assign a name to container (defaults to randomly generated words)"),l1=f(),Y=a("li"),Ma=a("code"),s1=l("--detach"),a1=l(" / "),xa=a("code"),r1=l("-d"),i1=l(" : run in detached mode so the terminal of the machine does not continouously stream container\u2019s "),Ua=a("code"),n1=l("STDOUT"),c1=l(" / "),Ya=a("code"),f1=l("STDERR"),d1=f(),R=a("li"),Ga=a("code"),p1=l("--interactive"),u1=l(" / "),Ka=a("code"),E1=l("-i"),m1=l(" : keep "),Wa=a("code"),v1=l("STDIN"),h1=l(" open even if not attached (usually used with "),Va=a("code"),_1=l("-t"),k1=l(")"),D1=f(),T=a("li"),Fa=a("code"),w1=l("--tty"),O1=l(" / "),Ba=a("code"),b1=l("-t"),y1=l(" : allocate pseudo-TTY to connect to container\u2019s "),qa=a("code"),C1=l("STDIN"),I1=l(" (usually used with "),za=a("code"),P1=l("-i"),R1=l(")"),T1=f(),Ae=a("li"),$a=a("code"),L1=l("--expose"),N1=l(" / "),ja=a("code"),H1=l("-p"),S1=l(" : expose container\u2019s ports to other containers and/or the host machine."),A1=f(),qo=a("li"),Xa=a("code"),M1=l("--mount"),x1=l(" : mount volumes or directories to container"),U1=f(),L=a("li"),Qa=a("code"),Y1=l("--volume"),G1=l(" / "),Za=a("code"),K1=l("-v"),W1=l(" : mount volumes or directories to container (use of "),Ja=a("code"),V1=l("--mount"),F1=l(" is recommended, "),bt=a("a"),B1=l("see differences here"),q1=l(")"),fc=f(),Me=a("details"),ga=a("summary"),z1=l("note on docker run documentation"),$1=f(),fe=a("p"),j1=l("there are two pages for docker run, a "),yt=a("a"),X1=l("generic one"),Q1=l(" that lists all commands and "),Ct=a("a"),Z1=l("another one"),J1=l(" that provides more explanation"),dc=f(),zo=a("h3"),g1=l("docker build"),pc=f(),$o=a("h3"),ev=l("docker image"),uc=f(),jo=a("h3"),tv=l("docker container"),Ec=f(),Xo=a("h3"),ov=l("docker network"),mc=f(),Qo=a("h3"),lv=l("docker volume"),vc=f(),Zo=a("h3"),sv=l("docker logs"),hc=f(),te=a("p"),av=l("Retrieves container\u2019s logs (to "),er=a("code"),rv=l("STDOUT"),iv=l(" and "),tr=a("code"),nv=l("STDERR"),cv=l(") to your CLI."),_c=f(),It=a("pre"),kc=f(),Jo=a("p"),fv=l("Common options to specify:"),Dc=f(),w=a("ul"),xe=a("li"),or=a("code"),dv=l("--follow"),pv=l(" / "),lr=a("code"),uv=l("-f"),Ev=l(" : continuously streams the log output"),mv=f(),Ue=a("li"),sr=a("code"),vv=l("--timestamps"),hv=l(" / "),ar=a("code"),_v=l("-t"),kv=l(" : show timestamps of logs"),Dv=f(),oe=a("li"),rr=a("code"),wv=l("--tail"),Ov=l(" / "),ir=a("code"),bv=l("-n"),yv=l(" : number of lines to show from end of the log (defaults to "),nr=a("code"),Cv=l("all"),Iv=l(")"),Pv=f(),N=a("li"),cr=a("code"),Rv=l("--since"),Tv=l(" : show logs "),fr=a("em"),Lv=l("since"),Nv=l(" timestamp ("),dr=a("code"),Hv=l("2013-01-02T13:37:00Z"),Sv=l(") or relative ("),pr=a("code"),Av=l("42m"),Mv=l(")"),xv=f(),Ye=a("li"),ur=a("code"),Uv=l("--until"),Yv=l(" : show logs "),Er=a("em"),Gv=l("before"),Kv=l(" timestamp or relative"),wc=f(),go=a("h3"),Wv=l("docker inspect"),Oc=f(),el=a("p"),Vv=l(`Returns detailed information about docker objects.
Objects can be images, containers, networks, volumes, etc.`),bc=f(),Pt=a("pre"),yc=f(),tl=a("h3"),Fv=l("docker ps"),Cc=f(),ol=a("p"),Bv=l(`List all containers and information about them (such as ID, image name, ports etc.)
Defaults to listing running containers only.`),Ic=f(),Rt=a("pre"),Pc=f(),ll=a("p"),qv=l("Useful options:"),Rc=f(),O=a("ul"),Ge=a("li"),mr=a("code"),zv=l("--all"),$v=l(" / "),vr=a("code"),jv=l("-a"),Xv=l(" : lists all containers, including those that are not running"),Qv=f(),le=a("li"),hr=a("code"),Zv=l("--size"),Jv=l(" / "),_r=a("code"),gv=l("-s"),eh=l(" : include size of the container in output. Shows both size of container (i.e. writable layer), and "),kr=a("code"),th=l("virtual"),oh=l(" size of total disk-space used, i.e. container + image."),lh=f(),sl=a("li"),Dr=a("code"),sh=l("--no-trunc"),ah=l(" : prevent truncation in table output"),rh=f(),se=a("li"),wr=a("code"),ih=l("--filter"),nh=l(" / "),Or=a("code"),ch=l("-f"),fh=l(" : filters the output with key-value pairs. E.g. "),br=a("code"),dh=l('docker ps -f "name=mysparkcontainer"'),ph=l("."),uh=f(),y=a("li"),yr=a("code"),Eh=l("--format"),mh=l(" : formats the output using Go template. Placeholder information include "),Cr=a("code"),vh=l(".ID"),hh=l(", "),Ir=a("code"),_h=l(".Image"),kh=l(", "),Pr=a("code"),Dh=l(".Names"),wh=l(" etc."),Tt=a("ul"),Ke=a("li"),Rr=a("code"),Oh=l('docker ps --format "{{.ID}}: {{.Name}}"'),bh=l(" will print out "),Tr=a("code"),yh=l("abcdef: name1"),Ch=l(" etc."),Ih=f(),al=a("li"),Lr=a("code"),Ph=l('docker ps --format "table {{.ID}}\\t{{.Name}}"'),Rh=l(" will print the output in a table with header row."),Tc=f(),rl=a("h3"),Th=l("docker stats"),Lc=f(),il=a("p"),Lh=l(`Display live info about containers\u2019 resource usage (kind of like Window\u2019s task manager).
Defaults to only showing running containers.`),Nc=f(),Lt=a("pre"),Hc=f(),nl=a("p"),Nh=l("Useful options:"),Sc=f(),H=a("ul"),We=a("li"),Nr=a("code"),Hh=l("--all"),Sh=l(" / "),Hr=a("code"),Ah=l("-a"),Mh=l(" : lists all containers, including those that are not running"),xh=f(),cl=a("li"),Sr=a("code"),Uh=l("--no-trunc"),Yh=l(" : Prevent truncation in table output"),Gh=f(),fl=a("li"),Ar=a("code"),Kh=l("--no-stream"),Wh=l(" : get only a \u2018snapshot\u2019 of the current stats"),Vh=f(),dl=a("li"),Mr=a("code"),Fh=l("--format"),Bh=l(" : formats the output using Go template."),Ac=f(),Mc=a("hr"),xc=f(),pl=a("h2"),qh=l("networking"),Uc=f(),Yc=a("hr"),Gc=f(),ul=a("h2"),zh=l("disks"),this.h()},l(e){me=r(e,"H1",{});var n=i(me);rf=s(n,Yk),n.forEach(o),$r=d(e),Ut=r(e,"P",{});var n3=i(Ut);nf=s(n3,"Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),n3.forEach(o),jr=d(e),Yt=r(e,"P",{});var c3=i(Yt);cf=s(c3,`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),c3.forEach(o),Xr=d(e),Gt=r(e,"H2",{});var f3=i(Gt);ff=s(f3,"key concepts"),f3.forEach(o),Qr=d(e),Kt=r(e,"H3",{});var d3=i(Kt);df=s(d3,"Docker images"),d3.forEach(o),Zr=d(e),Wt=r(e,"P",{});var p3=i(Wt);pf=s(p3,`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),p3.forEach(o),Jr=d(e),Vt=r(e,"P",{});var u3=i(Vt);uf=s(u3,"Images are often build on top of one another"),u3.forEach(o),gr=d(e),ve=r(e,"UL",{});var Kc=i(ve);M=r(Kc,"LI",{});var Ve=i(M);Ef=s(Ve,"e.g. you start with "),Ll=r(Ve,"CODE",{});var E3=i(Ll);mf=s(E3,"ubuntu"),E3.forEach(o),vf=s(Ve," image, install "),Nl=r(Ve,"CODE",{});var m3=i(Nl);hf=s(m3,"python"),m3.forEach(o),_f=s(Ve," in that ubuntu image, install "),Hl=r(Ve,"CODE",{});var v3=i(Hl);kf=s(v3,"pytorch"),v3.forEach(o),Df=s(Ve," package, install pretrained models."),Ve.forEach(o),wf=d(Kc),je=r(Kc,"LI",{});var Wc=i(je);Of=s(Wc,"or you can start with a published "),Sl=r(Wc,"CODE",{});var h3=i(Sl);bf=s(h3,"python"),h3.forEach(o),yf=s(Wc," image, and install your packages there."),Wc.forEach(o),Kc.forEach(o),ei=d(e),Ft=r(e,"P",{});var _3=i(Ft);Cf=s(_3,"Published images are available for download in Docker registries."),_3.forEach(o),ti=d(e),Bt=r(e,"H4",{});var k3=i(Bt);If=s(k3,"Dockerfile"),k3.forEach(o),oi=d(e),Xe=r(e,"P",{});var $h=i(Xe);Al=r($h,"CODE",{});var D3=i(Al);Pf=s(D3,"Dockerfile"),D3.forEach(o),Rf=s($h,"s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),$h.forEach(o),li=d(e),qt=r(e,"H3",{});var w3=i(qt);Tf=s(w3,"Docker containers"),w3.forEach(o),si=d(e),he=r(e,"P",{});var Vc=i(he);Lf=s(Vc,`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),Ml=r(Vc,"CODE",{});var O3=i(Ml);Nf=s(O3,"nodejs"),O3.forEach(o),Hf=s(Vc," image, but one exposes port 8888 and another exposes port 8899."),Vc.forEach(o),ai=d(e),zt=r(e,"H3",{});var b3=i(zt);Sf=s(b3,"Docker registries"),b3.forEach(o),ri=d(e),$t=r(e,"P",{});var y3=i($t);Af=s(y3,"Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),y3.forEach(o),ii=d(e),jt=r(e,"H3",{});var C3=i(jt);Mf=s(C3,"Docker daemon"),C3.forEach(o),ni=d(e),_e=r(e,"P",{});var Fc=i(_e);xf=s(Fc,"This is the underlying "),xl=r(Fc,"CODE",{});var I3=i(xl);Uf=s(I3,"dockerd"),I3.forEach(o),Yf=s(Fc," process that helps you build images and run containers. It will listen for Docker API requests"),Fc.forEach(o),ci=d(e),Xt=r(e,"H3",{});var P3=i(Xt);Gf=s(P3,"Docker client"),P3.forEach(o),fi=d(e),C=r(e,"P",{});var Fe=i(C);Kf=s(Fe,"The docker client "),Ul=r(Fe,"CODE",{});var R3=i(Ul);Wf=s(R3,"docker"),R3.forEach(o),Vf=s(Fe," is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),Yl=r(Fe,"CODE",{});var T3=i(Yl);Ff=s(T3,"docker"),T3.forEach(o),Bf=s(Fe," command sends Docker API requests to "),Gl=r(Fe,"CODE",{});var L3=i(Gl);qf=s(L3,"dockerd"),L3.forEach(o),zf=s(Fe,"."),Fe.forEach(o),di=d(e),Qt=r(e,"H3",{});var N3=i(Qt);$f=s(N3,"Docker compose"),N3.forEach(o),pi=d(e),ke=r(e,"P",{});var Bc=i(ke);jf=s(Bc,"Docker compose is a tool that helps with running "),Kl=r(Bc,"EM",{});var H3=i(Kl);Xf=s(H3,"multi-container"),H3.forEach(o),Qf=s(Bc," Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),Bc.forEach(o),ui=d(e),Zt=r(e,"P",{});var S3=i(Zt);Zf=s(S3,"For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),S3.forEach(o),Ei=d(e),Jt=r(e,"H4",{});var A3=i(Jt);Jf=s(A3,"Difference between Kubernetes"),A3.forEach(o),mi=d(e),De=r(e,"P",{});var qc=i(De);gf=s(qc,"Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),Wl=r(qc,"EM",{});var M3=i(Wl);ed=s(M3,"single-node"),M3.forEach(o),td=s(qc,", whereas Kubernetes is a full multi-node container manager."),qc.forEach(o),vi=d(e),gt=r(e,"P",{});var x3=i(gt);od=s(x3,"Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),x3.forEach(o),hi=d(e),_i=r(e,"HR",{}),ki=d(e),eo=r(e,"H2",{});var U3=i(eo);ld=s(U3,"Dockerfile"),U3.forEach(o),Di=d(e),to=r(e,"H3",{});var Y3=i(to);sd=s(Y3,"Commands"),Y3.forEach(o),wi=d(e),oo=r(e,"H4",{});var G3=i(oo);ad=s(G3,"FROM"),G3.forEach(o),Oi=d(e),we=r(e,"P",{});var zc=i(we);rd=s(zc,"All dockerfile starts with the "),Vl=r(zc,"CODE",{});var K3=i(Vl);id=s(K3,"FROM"),K3.forEach(o),nd=s(zc," command. It pulls the base image from Dockerhub to start to build your image."),zc.forEach(o),bi=d(e),Qe=r(e,"PRE",{class:!0});var f5=i(Qe);f5.forEach(o),yi=d(e),lo=r(e,"H4",{});var W3=i(lo);cd=s(W3,"RUN"),W3.forEach(o),Ci=d(e),so=r(e,"P",{});var V3=i(so);fd=s(V3,"Runs a command or executable. It has two forms"),V3.forEach(o),Ii=d(e),Ze=r(e,"PRE",{class:!0});var d5=i(Ze);d5.forEach(o),Pi=d(e),ao=r(e,"H4",{});var F3=i(ao);dd=s(F3,"CMD"),F3.forEach(o),Ri=d(e),ro=r(e,"P",{});var B3=i(ro);pd=s(B3,"Provides defaults for an executing container. The arguments will be appended to ENTRYPOINT."),B3.forEach(o),Ti=d(e),Je=r(e,"PRE",{class:!0});var p5=i(Je);p5.forEach(o),Li=d(e),io=r(e,"H4",{});var q3=i(io);ud=s(q3,"ENTRYPOINT"),q3.forEach(o),Ni=d(e),no=r(e,"P",{});var z3=i(no);Ed=s(z3,`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),z3.forEach(o),Hi=d(e),ge=r(e,"PRE",{class:!0});var u5=i(ge);u5.forEach(o),Si=d(e),co=r(e,"H4",{});var $3=i(co);md=s($3,"COPY"),$3.forEach(o),Ai=d(e),fo=r(e,"P",{});var j3=i(fo);vd=s(j3,"Copies file from your native host into the container image."),j3.forEach(o),Mi=d(e),et=r(e,"PRE",{class:!0});var E5=i(et);E5.forEach(o),xi=d(e),W=r(e,"P",{});var El=i(W);hd=s(El,"Multiple "),Fl=r(El,"CODE",{});var X3=i(Fl);_d=s(X3,"<src>"),X3.forEach(o),kd=s(El," can be specified, and the last argument will be treated as the "),Bl=r(El,"CODE",{});var Q3=i(Bl);Dd=s(Q3,"<dest>"),Q3.forEach(o),wd=s(El,"."),El.forEach(o),Ui=d(e),Oe=r(e,"P",{});var $c=i(Oe);Od=s($c,"All "),ql=r($c,"CODE",{});var Z3=i(ql);bd=s(Z3,"<src>"),Z3.forEach(o),yd=s($c," relative paths must be inside context of the build!"),$c.forEach(o),Yi=d(e),po=r(e,"H4",{});var J3=i(po);Cd=s(J3,"ADD"),J3.forEach(o),Gi=d(e),uo=r(e,"P",{});var g3=i(uo);Id=s(g3,"Copies file from your native host into the container image."),g3.forEach(o),Ki=d(e),tt=r(e,"PRE",{class:!0});var m5=i(tt);m5.forEach(o),Wi=d(e),be=r(e,"P",{});var jc=i(be);Pd=s(jc,"Compared to COPY, "),zl=r(jc,"CODE",{});var e2=i(zl);Rd=s(e2,"ADD"),e2.forEach(o),Td=s(jc," has added utilities like:"),jc.forEach(o),Vi=d(e),V=r(e,"UL",{});var ml=i(V);$l=r(ml,"LI",{});var t2=i($l);Ld=s(t2,"being able to download files from URLs then copying them into the image"),t2.forEach(o),Nd=d(ml),ot=r(ml,"LI",{});var Xc=i(ot);Hd=s(Xc,"extracting contents of "),jl=r(Xc,"CODE",{});var o2=i(jl);Sd=s(o2,".tar"),o2.forEach(o),Ad=s(Xc," files before copying into image"),Xc.forEach(o),Md=d(ml),Xl=r(ml,"LI",{});var l2=i(Xl);xd=s(l2,"adding contents from a git repo"),l2.forEach(o),ml.forEach(o),Fi=d(e),lt=r(e,"P",{});var jh=i(lt);Ql=r(jh,"STRONG",{});var s2=i(Ql);Ud=s(s2,"tip: use COPY as default, unless you need the additional features of ADD."),s2.forEach(o),Yd=s(jh," This is to prevent unwanted side effects!"),jh.forEach(o),Bi=d(e),F=r(e,"P",{});var vl=i(F);Gd=s(vl,"Multiple "),Zl=r(vl,"CODE",{});var a2=i(Zl);Kd=s(a2,"<src>"),a2.forEach(o),Wd=s(vl," can be specified, and the last argument will be treated as the "),Jl=r(vl,"CODE",{});var r2=i(Jl);Vd=s(r2,"<dest>"),r2.forEach(o),Fd=s(vl,"."),vl.forEach(o),qi=d(e),ye=r(e,"P",{});var Qc=i(ye);Bd=s(Qc,"All "),gl=r(Qc,"CODE",{});var i2=i(gl);qd=s(i2,"<src>"),i2.forEach(o),zd=s(Qc," relative paths must be inside context of the build!"),Qc.forEach(o),zi=d(e),Eo=r(e,"H4",{});var n2=i(Eo);$d=s(n2,"ENV"),n2.forEach(o),$i=d(e),mo=r(e,"P",{});var c2=i(mo);jd=s(c2,"Sets an environment variable"),c2.forEach(o),ji=d(e),st=r(e,"PRE",{class:!0});var v5=i(st);v5.forEach(o),Xi=d(e),vo=r(e,"H4",{});var f2=i(vo);Xd=s(f2,"EXPOSE"),f2.forEach(o),Qi=d(e),ho=r(e,"P",{});var d2=i(ho);Qd=s(d2,"Instructs Docker that container should listen on specified network ports at runtime."),d2.forEach(o),Zi=d(e),at=r(e,"PRE",{class:!0});var h5=i(at);h5.forEach(o),Ji=d(e),x=r(e,"P",{});var Nt=i(x);es=r(Nt,"STRONG",{});var p2=i(es);Zd=s(p2,"Ports are not automatically published"),p2.forEach(o),Jd=s(Nt,`, and this command is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),ts=r(Nt,"CODE",{});var u2=i(ts);gd=s(u2,"-P"),u2.forEach(o),ep=s(Nt," flag (which maps exposed ports in container to random ports in native host machine), or "),os=r(Nt,"CODE",{});var E2=i(os);tp=s(E2,"-p"),E2.forEach(o),op=s(Nt," to explicitly map ports from containers to your localhost."),Nt.forEach(o),gi=d(e),_o=r(e,"H4",{});var m2=i(_o);lp=s(m2,"VOLUME"),m2.forEach(o),en=d(e),ko=r(e,"P",{});var v2=i(ko);sp=s(v2,`Marks the directory(s) within the container as an external drive from native host or other containers.
This allows files to be accessed from outside the containers.`),v2.forEach(o),tn=d(e),rt=r(e,"PRE",{class:!0});var _5=i(rt);_5.forEach(o),on=d(e),Ce=r(e,"P",{});var Zc=i(Ce);ap=s(Zc,"Note that where this (container) directory maps to in your native host is "),ls=r(Zc,"STRONG",{});var h2=i(ls);rp=s(h2,"specified when you build or run the container"),h2.forEach(o),ip=s(Zc,"."),Zc.forEach(o),ln=d(e),Do=r(e,"H4",{});var _2=i(Do);np=s(_2,"WORKDIR"),_2.forEach(o),sn=d(e),v=r(e,"P",{});var S=i(v);cp=s(S,"Sets working directory for any "),ss=r(S,"CODE",{});var k2=i(ss);fp=s(k2,"RUN"),k2.forEach(o),dp=s(S,", "),as=r(S,"CODE",{});var D2=i(as);pp=s(D2,"CMD"),D2.forEach(o),up=s(S,", "),rs=r(S,"CODE",{});var w2=i(rs);Ep=s(w2,"ENTRYPOINT"),w2.forEach(o),mp=s(S,", "),is=r(S,"CODE",{});var O2=i(is);vp=s(O2,"COPY"),O2.forEach(o),hp=s(S,", "),ns=r(S,"CODE",{});var b2=i(ns);_p=s(b2,"ADD"),b2.forEach(o),kp=s(S," instructions that follows."),S.forEach(o),an=d(e),it=r(e,"PRE",{class:!0});var k5=i(it);k5.forEach(o),rn=d(e),Ie=r(e,"P",{});var Jc=i(Ie);Dp=s(Jc,"Multiple "),cs=r(Jc,"CODE",{});var y2=i(cs);wp=s(y2,"WORKDIR"),y2.forEach(o),Op=s(Jc," can be used in a dockerfile."),Jc.forEach(o),nn=d(e),B=r(e,"P",{});var hl=i(B);bp=s(hl,"If not specified, default directory is "),fs=r(hl,"CODE",{});var C2=i(fs);yp=s(C2,"/"),C2.forEach(o),Cp=s(hl,`.
But if you are pulling from an image, chances are `),ds=r(hl,"CODE",{});var I2=i(ds);Ip=s(I2,"WORKDIR"),I2.forEach(o),Pp=s(hl," already been set in your base image and it will be brought over."),hl.forEach(o),cn=d(e),wo=r(e,"P",{});var P2=i(wo);nt=r(P2,"STRONG",{});var gc=i(nt);Rp=s(gc,"tip: explicitly set "),ps=r(gc,"CODE",{});var R2=i(ps);Tp=s(R2,"WORKDIR"),R2.forEach(o),Lp=s(gc," to prevent unintended operations in unknown dirs"),gc.forEach(o),P2.forEach(o),fn=d(e),q=r(e,"P",{});var _l=i(q);Np=s(_l,"It is also possible to resolve env variables previously set by "),us=r(_l,"CODE",{});var T2=i(us);Hp=s(T2,"ENV"),T2.forEach(o),Sp=s(_l,", e.g. "),Es=r(_l,"CODE",{});var L2=i(Es);Ap=s(L2,"WORKDIR $DIRPATH_ENV_VAR"),L2.forEach(o),Mp=s(_l,"."),_l.forEach(o),dn=d(e),Oo=r(e,"H4",{});var N2=i(Oo);xp=s(N2,"ARG"),N2.forEach(o),pn=d(e),z=r(e,"P",{});var kl=i(z);Up=s(kl,"Defines a variable that users can pass values into during "),ms=r(kl,"CODE",{});var H2=i(ms);Yp=s(H2,"docker build"),H2.forEach(o),Gp=s(kl," by using "),vs=r(kl,"CODE",{});var S2=i(vs);Kp=s(S2,"--build-arg <argname>=<value>"),S2.forEach(o),Wp=s(kl," flag."),kl.forEach(o),un=d(e),ct=r(e,"PRE",{class:!0});var D5=i(ct);D5.forEach(o),En=d(e),U=r(e,"P",{});var Ht=i(U);hs=r(Ht,"CODE",{});var A2=i(hs);Vp=s(A2,"ENV"),A2.forEach(o),Fp=s(Ht," variables will overwrite "),_s=r(Ht,"CODE",{});var M2=i(_s);Bp=s(M2,"ARG"),M2.forEach(o),qp=s(Ht," variables if they are the same name (at the point where the "),ks=r(Ht,"CODE",{});var x2=i(ks);zp=s(x2,"ENV"),x2.forEach(o),$p=s(Ht," variable is defined)."),Ht.forEach(o),mn=d(e),bo=r(e,"H4",{});var U2=i(bo);jp=s(U2,"ONBUILD"),U2.forEach(o),vn=d(e),yo=r(e,"P",{});var Y2=i(yo);Xp=s(Y2,"Adds a trigger to the image that will execute dockerfile instructions when the current image is used as the base for another build."),Y2.forEach(o),hn=d(e),ft=r(e,"PRE",{class:!0});var w5=i(ft);w5.forEach(o),_n=d(e),Co=r(e,"P",{});var G2=i(Co);Qp=s(G2,"This command is usful when when you are building a base image that will be distributed to other people, and instructions that depend on other people\u2019s files needs to be run. Example, you could add:"),G2.forEach(o),kn=d(e),dt=r(e,"PRE",{class:!0});var O5=i(dt);O5.forEach(o),Dn=d(e),$=r(e,"P",{});var Dl=i($);Zp=s(Dl,"The instructions specified are triggered "),Ds=r(Dl,"EM",{});var K2=i(Ds);Jp=s(K2,"immediately"),K2.forEach(o),gp=s(Dl," after the "),ws=r(Dl,"CODE",{});var W2=i(ws);eu=s(W2,"FROM"),W2.forEach(o),tu=s(Dl," instruction in the child image."),Dl.forEach(o),wn=d(e),pt=r(e,"P",{});var Xh=i(pt);Os=r(Xh,"CODE",{});var V2=i(Os);ou=s(V2,"ONBUILD"),V2.forEach(o),lu=s(Xh," triggers are not inherited by children images."),Xh.forEach(o),On=d(e),Io=r(e,"H4",{});var F2=i(Io);su=s(F2,"STOPSIGNAL"),F2.forEach(o),bn=d(e),Po=r(e,"P",{});var B2=i(Po);au=s(B2,"Sets the system call signal that will cause the container to exit."),B2.forEach(o),yn=d(e),ut=r(e,"PRE",{class:!0});var b5=i(ut);b5.forEach(o),Cn=d(e),j=r(e,"UL",{});var wl=i(j);Ro=r(wl,"LI",{});var Qh=i(Ro);ru=s(Qh,"Default is "),bs=r(Qh,"CODE",{});var q2=i(bs);iu=s(q2,"SIGTERM"),q2.forEach(o),Qh.forEach(o),nu=d(wl),ce=r(wl,"LI",{});var Ol=i(ce);cu=s(Ol,"Can be in "),ys=r(Ol,"CODE",{});var z2=i(ys);fu=s(z2,"SIG<NAME>"),z2.forEach(o),du=s(Ol," format (e.g. "),Cs=r(Ol,"CODE",{});var $2=i(Cs);pu=s($2,"SIGKILL"),$2.forEach(o),uu=s(Ol,")"),Ol.forEach(o),Eu=d(wl),Et=r(wl,"LI",{});var ef=i(Et);mu=s(ef,"Can be an unassigned number in kernel\u2019s syscall table (e.g. "),Is=r(ef,"CODE",{});var j2=i(Is);vu=s(j2,"9"),j2.forEach(o),hu=s(ef,")"),ef.forEach(o),wl.forEach(o),In=d(e),To=r(e,"H4",{});var X2=i(To);_u=s(X2,"HEALTHCHECK"),X2.forEach(o),Pn=d(e),Lo=r(e,"P",{});var Q2=i(Lo);ku=s(Q2,"Specifies a command to be run inside the container to check container\u2019s health."),Q2.forEach(o),Rn=d(e),mt=r(e,"PRE",{class:!0});var y5=i(mt);y5.forEach(o),Tn=d(e),vt=r(e,"P",{});var Zh=i(vt);Ps=r(Zh,"CODE",{});var Z2=i(Ps);Du=s(Z2,"OPTIONS"),Z2.forEach(o),wu=s(Zh," include:"),Zh.forEach(o),Ln=d(e),I=r(e,"UL",{});var Be=i(I);Pe=r(Be,"LI",{});var xr=i(Pe);Rs=r(xr,"CODE",{});var J2=i(Rs);Ou=s(J2,"--interval=DURATION"),J2.forEach(o),bu=s(xr," (default "),Ts=r(xr,"CODE",{});var g2=i(Ts);yu=s(g2,"30s"),g2.forEach(o),Cu=s(xr,")"),xr.forEach(o),Iu=d(Be),Re=r(Be,"LI",{});var Ur=i(Re);Ls=r(Ur,"CODE",{});var e4=i(Ls);Pu=s(e4,"--timeout=DURATION"),e4.forEach(o),Ru=s(Ur," (default "),Ns=r(Ur,"CODE",{});var t4=i(Ns);Tu=s(t4,"30s"),t4.forEach(o),Lu=s(Ur,")"),Ur.forEach(o),Nu=d(Be),Te=r(Be,"LI",{});var Yr=i(Te);Hs=r(Yr,"CODE",{});var o4=i(Hs);Hu=s(o4,"--retries=N"),o4.forEach(o),Su=s(Yr," (default "),Ss=r(Yr,"CODE",{});var l4=i(Ss);Au=s(l4,"3"),l4.forEach(o),Mu=s(Yr,")"),Yr.forEach(o),xu=d(Be),Le=r(Be,"LI",{});var Gr=i(Le);As=r(Gr,"CODE",{});var s4=i(As);Uu=s(s4,"--start-period=DURATION"),s4.forEach(o),Yu=s(Gr," (default "),Ms=r(Gr,"CODE",{});var a4=i(Ms);Gu=s(a4,"0s"),a4.forEach(o),Ku=s(Gr,")"),Gr.forEach(o),Be.forEach(o),Nn=d(e),h=r(e,"P",{});var A=i(h);Wu=s(A,"A container that has "),xs=r(A,"CODE",{});var r4=i(xs);Vu=s(r4,"HEALTHCHECK"),r4.forEach(o),Fu=s(A," specified will have a "),Us=r(A,"EM",{});var i4=i(Us);Bu=s(i4,"health status"),i4.forEach(o),qu=s(A," that can take 3 possible states: "),Ys=r(A,"CODE",{});var n4=i(Ys);zu=s(n4,"starting"),n4.forEach(o),$u=s(A," | "),Gs=r(A,"CODE",{});var c4=i(Gs);ju=s(c4,"healthy"),c4.forEach(o),Xu=s(A," | "),Ks=r(A,"CODE",{});var f4=i(Ks);Qu=s(f4,"unhealthy"),f4.forEach(o),Zu=s(A,"."),A.forEach(o),Hn=d(e),X=r(e,"P",{});var bl=i(X);Ju=s(bl,"Whenever a health check passes, health status changes to "),Ws=r(bl,"CODE",{});var d4=i(Ws);gu=s(d4,"healthy"),d4.forEach(o),eE=s(bl,". After a number of consecutive failures, health status changes to "),Vs=r(bl,"CODE",{});var p4=i(Vs);tE=s(p4,"unhealthy"),p4.forEach(o),oE=s(bl,"."),bl.forEach(o),Sn=d(e),Q=r(e,"P",{});var yl=i(Q);lE=s(yl,`Health checks are run after every interval.
Health checks are considered failed when commands runs for longer than timeout.
When consecutive failures reaches max retries, or command exits with non zero status code `),Fs=r(yl,"CODE",{});var u4=i(Fs);sE=s(u4,"0"),u4.forEach(o),aE=s(yl,", "),Bs=r(yl,"EM",{});var E4=i(Bs);rE=s(E4,"health status"),E4.forEach(o),iE=s(yl," will change to unhealthy."),yl.forEach(o),An=d(e),No=r(e,"H4",{});var m4=i(No);nE=s(m4,"SHELL"),m4.forEach(o),Mn=d(e),Z=r(e,"P",{});var Cl=i(Z);cE=s(Cl,"Specifies the default shell used for shell form of commands. Default is set to "),qs=r(Cl,"CODE",{});var v4=i(qs);fE=s(v4,'["/bin/sh", "-c"]'),v4.forEach(o),dE=s(Cl," for Linux containers and "),zs=r(Cl,"CODE",{});var h4=i(zs);pE=s(h4,'["cmd", "/S", "/C"]'),h4.forEach(o),uE=s(Cl," for Windows containers."),Cl.forEach(o),xn=d(e),ht=r(e,"PRE",{class:!0});var C5=i(ht);C5.forEach(o),Un=d(e),Ho=r(e,"H4",{});var _4=i(Ho);EE=s(_4,"USER"),_4.forEach(o),Yn=d(e),So=r(e,"P",{});var k4=i(So);mE=s(k4,"Sets the username/UID to use for the remainder of the Docker build stage."),k4.forEach(o),Gn=d(e),_t=r(e,"PRE",{class:!0});var I5=i(_t);I5.forEach(o),Kn=d(e),Ao=r(e,"P",{});var D4=i(Ao);vE=s(D4,`This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),D4.forEach(o),Wn=d(e),Mo=r(e,"H4",{});var w4=i(Mo);hE=s(w4,"LABEL"),w4.forEach(o),Vn=d(e),Ne=r(e,"P",{});var tf=i(Ne);_E=s(tf,"Adds metadata to an image and are inherited by child images. You can view an image\u2019s labels using "),$s=r(tf,"CODE",{});var O4=i($s);kE=s(O4,"docker image inspect"),O4.forEach(o),DE=s(tf,"."),tf.forEach(o),Fn=d(e),kt=r(e,"PRE",{class:!0});var P5=i(kt);P5.forEach(o),Bn=d(e),xo=r(e,"H3",{});var b4=i(xo);wE=s(b4,"Environment Replacement"),b4.forEach(o),qn=d(e),He=r(e,"P",{});var of=i(He);OE=s(of,"Some Dockerfile instructions are able to read environment variables created by "),js=r(of,"CODE",{});var y4=i(js);bE=s(y4,"ENV"),y4.forEach(o),yE=s(of," commands, and replace them with the values that those environment variables hold."),of.forEach(o),zn=d(e),J=r(e,"P",{});var Il=i(J);CE=s(Il,"The syntax is "),Xs=r(Il,"CODE",{});var C4=i(Xs);IE=s(C4,"$variable_name"),C4.forEach(o),PE=s(Il," or "),Qs=r(Il,"CODE",{});var I4=i(Qs);RE=s(I4,"${variable_name}"),I4.forEach(o),TE=s(Il," within a Dockerfile."),Il.forEach(o),$n=d(e),Se=r(e,"UL",{});var lf=i(Se);g=r(lf,"LI",{});var St=i(g);Zs=r(St,"CODE",{});var P4=i(Zs);LE=s(P4,"${variable:-word}"),P4.forEach(o),NE=s(St," to set "),Js=r(St,"CODE",{});var R4=i(Js);HE=s(R4,"word"),R4.forEach(o),SE=s(St," as default value when "),gs=r(St,"CODE",{});var T4=i(gs);AE=s(T4,"variable"),T4.forEach(o),ME=s(St," is not set"),St.forEach(o),xE=d(lf),_=r(lf,"LI",{});var G=i(_);ea=r(G,"CODE",{});var L4=i(ea);UE=s(L4,"${variable:+word}"),L4.forEach(o),YE=s(G," to set "),ta=r(G,"CODE",{});var N4=i(ta);GE=s(N4,"word"),N4.forEach(o),KE=s(G," as "),oa=r(G,"CODE",{});var H4=i(oa);WE=s(H4,"variable"),H4.forEach(o),VE=s(G," when "),la=r(G,"CODE",{});var S4=i(la);FE=s(S4,"variable"),S4.forEach(o),BE=s(G," has already been set, otherwise "),sa=r(G,"CODE",{});var A4=i(sa);qE=s(A4,"variable"),A4.forEach(o),zE=s(G," will be empty string."),G.forEach(o),lf.forEach(o),jn=d(e),u=r(e,"P",{});var E=i(u);$E=s(E,"Dockerfile instructions that support environment variables are: "),aa=r(E,"CODE",{});var M4=i(aa);jE=s(M4,"ADD"),M4.forEach(o),XE=s(E,", "),ra=r(E,"CODE",{});var x4=i(ra);QE=s(x4,"COPY"),x4.forEach(o),ZE=s(E,", "),ia=r(E,"CODE",{});var U4=i(ia);JE=s(U4,"ENV"),U4.forEach(o),gE=s(E,", "),na=r(E,"CODE",{});var Y4=i(na);em=s(Y4,"EXPOSE"),Y4.forEach(o),tm=s(E,", "),ca=r(E,"CODE",{});var G4=i(ca);om=s(G4,"FROM"),G4.forEach(o),lm=s(E,", "),fa=r(E,"CODE",{});var K4=i(fa);sm=s(K4,"LABEL"),K4.forEach(o),am=s(E,", "),da=r(E,"CODE",{});var W4=i(da);rm=s(W4,"STOPSIGNAL"),W4.forEach(o),im=s(E,", "),pa=r(E,"CODE",{});var V4=i(pa);nm=s(V4,"USER"),V4.forEach(o),cm=s(E,", "),ua=r(E,"CODE",{});var F4=i(ua);fm=s(F4,"VOLUME"),F4.forEach(o),dm=s(E,", "),Ea=r(E,"CODE",{});var B4=i(Ea);pm=s(B4,"WORKDIR"),B4.forEach(o),um=s(E,", "),ma=r(E,"CODE",{});var q4=i(ma);Em=s(q4,"ONBUILD"),q4.forEach(o),mm=s(E,"."),E.forEach(o),Xn=d(e),Dt=r(e,"PRE",{class:!0});var R5=i(Dt);R5.forEach(o),Qn=d(e),Uo=r(e,"H3",{});var z4=i(Uo);va=r(z4,"CODE",{});var $4=i(va);vm=s($4,".dockerignore"),$4.forEach(o),z4.forEach(o),Zn=d(e),P=r(e,"P",{});var qe=i(P);hm=s(qe,"Similar to "),ha=r(qe,"CODE",{});var j4=i(ha);_m=s(j4,".gitignore"),j4.forEach(o),km=s(qe,", this file contains a list of files and directories that docker should "),_a=r(qe,"STRONG",{});var X4=i(_a);Dm=s(X4,"exclude"),X4.forEach(o),wm=s(qe," from the "),ka=r(qe,"EM",{});var Q4=i(ka);Om=s(Q4,"context"),Q4.forEach(o),bm=s(qe," of a docker build."),qe.forEach(o),Jn=d(e),Yo=r(e,"P",{});var Z4=i(Yo);ym=s(Z4,"This is useful for preventing sending of large or sensitive files to docker daemon."),Z4.forEach(o),gn=d(e),ec=r(e,"HR",{}),tc=d(e),Go=r(e,"H2",{});var J4=i(Go);Cm=s(J4,"useful docker CLI commands"),J4.forEach(o),oc=d(e),Ko=r(e,"H3",{});var g4=i(Ko);Im=s(g4,"docker run"),g4.forEach(o),lc=d(e),Wo=r(e,"P",{});var e_=i(Wo);Pm=s(e_,"Runs your images as isolated containers."),e_.forEach(o),sc=d(e),wt=r(e,"PRE",{class:!0});var T5=i(wt);T5.forEach(o),ac=d(e),ee=r(e,"DETAILS",{});var Pl=i(ee);Da=r(Pl,"SUMMARY",{});var t_=i(Da);Rm=s(t_,"details"),t_.forEach(o),Tm=d(Pl),wa=r(Pl,"P",{});var o_=i(wa);k=r(o_,"EM",{});var K=i(k);Oa=r(K,"CODE",{});var l_=i(Oa);Lm=s(l_,"docker run"),l_.forEach(o),Nm=s(K,"\u2019s "),ba=r(K,"CODE",{});var s_=i(ba);Hm=s(s_,"[OPTIONS]"),s_.forEach(o),Sm=s(K," are specified "),ya=r(K,"STRONG",{});var a_=i(ya);Am=s(a_,"before"),a_.forEach(o),Mm=s(K," the image name, whilst arguments ("),Ca=r(K,"CODE",{});var r_=i(Ca);xm=s(r_,"[ARG...]"),r_.forEach(o),Um=s(K,") for the command to be executed within the container is "),Ia=r(K,"STRONG",{});var i_=i(Ia);Ym=s(i_,"AFTER"),i_.forEach(o),Gm=s(K," the image name and command."),K.forEach(o),o_.forEach(o),Km=d(Pl),Vo=r(Pl,"P",{});var Jh=i(Vo);Wm=s(Jh,"for example: "),Pa=r(Jh,"CODE",{});var n_=i(Pa);Vm=s(n_,"docker run -ti ubuntu-image touch /path/to/file"),n_.forEach(o),Jh.forEach(o),Pl.forEach(o),rc=d(e),Ot=r(e,"P",{});var gh=i(Ot);Ra=r(gh,"CODE",{});var c_=i(Ra);Fm=s(c_,"docker run"),c_.forEach(o),Bm=s(gh," is able to set many runtime options and override default settings defined by images, these include:"),gh.forEach(o),ic=d(e),D=r(e,"UL",{});var ae=i(D);Ta=r(ae,"LI",{});var f_=i(Ta);qm=s(f_,"running container in foreground or detached mode"),f_.forEach(o),zm=d(ae),La=r(ae,"LI",{});var d_=i(La);$m=s(d_,"name of container"),d_.forEach(o),jm=d(ae),Na=r(ae,"LI",{});var p_=i(Na);Xm=s(p_,"network settings"),p_.forEach(o),Qm=d(ae),Ha=r(ae,"LI",{});var u_=i(Ha);Zm=s(u_,"volume settings"),u_.forEach(o),Jm=d(ae),Sa=r(ae,"LI",{});var E_=i(Sa);gm=s(E_,"cpu / memory limits"),E_.forEach(o),ae.forEach(o),nc=d(e),Fo=r(e,"P",{});var m_=i(Fo);e1=s(m_,"Common options to specify:"),m_.forEach(o),cc=d(e),m=r(e,"UL",{});var b=i(m);Bo=r(b,"LI",{});var e3=i(Bo);Aa=r(e3,"CODE",{});var v_=i(Aa);t1=s(v_,"--name"),v_.forEach(o),o1=s(e3," : assign a name to container (defaults to randomly generated words)"),e3.forEach(o),l1=d(b),Y=r(b,"LI",{});var ze=i(Y);Ma=r(ze,"CODE",{});var h_=i(Ma);s1=s(h_,"--detach"),h_.forEach(o),a1=s(ze," / "),xa=r(ze,"CODE",{});var __=i(xa);r1=s(__,"-d"),__.forEach(o),i1=s(ze," : run in detached mode so the terminal of the machine does not continouously stream container\u2019s "),Ua=r(ze,"CODE",{});var k_=i(Ua);n1=s(k_,"STDOUT"),k_.forEach(o),c1=s(ze," / "),Ya=r(ze,"CODE",{});var D_=i(Ya);f1=s(D_,"STDERR"),D_.forEach(o),ze.forEach(o),d1=d(b),R=r(b,"LI",{});var de=i(R);Ga=r(de,"CODE",{});var w_=i(Ga);p1=s(w_,"--interactive"),w_.forEach(o),u1=s(de," / "),Ka=r(de,"CODE",{});var O_=i(Ka);E1=s(O_,"-i"),O_.forEach(o),m1=s(de," : keep "),Wa=r(de,"CODE",{});var b_=i(Wa);v1=s(b_,"STDIN"),b_.forEach(o),h1=s(de," open even if not attached (usually used with "),Va=r(de,"CODE",{});var y_=i(Va);_1=s(y_,"-t"),y_.forEach(o),k1=s(de,")"),de.forEach(o),D1=d(b),T=r(b,"LI",{});var pe=i(T);Fa=r(pe,"CODE",{});var C_=i(Fa);w1=s(C_,"--tty"),C_.forEach(o),O1=s(pe," / "),Ba=r(pe,"CODE",{});var I_=i(Ba);b1=s(I_,"-t"),I_.forEach(o),y1=s(pe," : allocate pseudo-TTY to connect to container\u2019s "),qa=r(pe,"CODE",{});var P_=i(qa);C1=s(P_,"STDIN"),P_.forEach(o),I1=s(pe," (usually used with "),za=r(pe,"CODE",{});var R_=i(za);P1=s(R_,"-i"),R_.forEach(o),R1=s(pe,")"),pe.forEach(o),T1=d(b),Ae=r(b,"LI",{});var Kr=i(Ae);$a=r(Kr,"CODE",{});var T_=i($a);L1=s(T_,"--expose"),T_.forEach(o),N1=s(Kr," / "),ja=r(Kr,"CODE",{});var L_=i(ja);H1=s(L_,"-p"),L_.forEach(o),S1=s(Kr," : expose container\u2019s ports to other containers and/or the host machine."),Kr.forEach(o),A1=d(b),qo=r(b,"LI",{});var t3=i(qo);Xa=r(t3,"CODE",{});var N_=i(Xa);M1=s(N_,"--mount"),N_.forEach(o),x1=s(t3," : mount volumes or directories to container"),t3.forEach(o),U1=d(b),L=r(b,"LI",{});var ue=i(L);Qa=r(ue,"CODE",{});var H_=i(Qa);Y1=s(H_,"--volume"),H_.forEach(o),G1=s(ue," / "),Za=r(ue,"CODE",{});var S_=i(Za);K1=s(S_,"-v"),S_.forEach(o),W1=s(ue," : mount volumes or directories to container (use of "),Ja=r(ue,"CODE",{});var A_=i(Ja);V1=s(A_,"--mount"),A_.forEach(o),F1=s(ue," is recommended, "),bt=r(ue,"A",{href:!0,rel:!0});var M_=i(bt);B1=s(M_,"see differences here"),M_.forEach(o),q1=s(ue,")"),ue.forEach(o),b.forEach(o),fc=d(e),Me=r(e,"DETAILS",{});var sf=i(Me);ga=r(sf,"SUMMARY",{});var x_=i(ga);z1=s(x_,"note on docker run documentation"),x_.forEach(o),$1=d(sf),fe=r(sf,"P",{});var Rl=i(fe);j1=s(Rl,"there are two pages for docker run, a "),yt=r(Rl,"A",{href:!0,rel:!0});var U_=i(yt);X1=s(U_,"generic one"),U_.forEach(o),Q1=s(Rl," that lists all commands and "),Ct=r(Rl,"A",{href:!0,rel:!0});var Y_=i(Ct);Z1=s(Y_,"another one"),Y_.forEach(o),J1=s(Rl," that provides more explanation"),Rl.forEach(o),sf.forEach(o),dc=d(e),zo=r(e,"H3",{});var G_=i(zo);g1=s(G_,"docker build"),G_.forEach(o),pc=d(e),$o=r(e,"H3",{});var K_=i($o);ev=s(K_,"docker image"),K_.forEach(o),uc=d(e),jo=r(e,"H3",{});var W_=i(jo);tv=s(W_,"docker container"),W_.forEach(o),Ec=d(e),Xo=r(e,"H3",{});var V_=i(Xo);ov=s(V_,"docker network"),V_.forEach(o),mc=d(e),Qo=r(e,"H3",{});var F_=i(Qo);lv=s(F_,"docker volume"),F_.forEach(o),vc=d(e),Zo=r(e,"H3",{});var B_=i(Zo);sv=s(B_,"docker logs"),B_.forEach(o),hc=d(e),te=r(e,"P",{});var Tl=i(te);av=s(Tl,"Retrieves container\u2019s logs (to "),er=r(Tl,"CODE",{});var q_=i(er);rv=s(q_,"STDOUT"),q_.forEach(o),iv=s(Tl," and "),tr=r(Tl,"CODE",{});var z_=i(tr);nv=s(z_,"STDERR"),z_.forEach(o),cv=s(Tl,") to your CLI."),Tl.forEach(o),_c=d(e),It=r(e,"PRE",{class:!0});var L5=i(It);L5.forEach(o),kc=d(e),Jo=r(e,"P",{});var $_=i(Jo);fv=s($_,"Common options to specify:"),$_.forEach(o),Dc=d(e),w=r(e,"UL",{});var re=i(w);xe=r(re,"LI",{});var Wr=i(xe);or=r(Wr,"CODE",{});var j_=i(or);dv=s(j_,"--follow"),j_.forEach(o),pv=s(Wr," / "),lr=r(Wr,"CODE",{});var X_=i(lr);uv=s(X_,"-f"),X_.forEach(o),Ev=s(Wr," : continuously streams the log output"),Wr.forEach(o),mv=d(re),Ue=r(re,"LI",{});var Vr=i(Ue);sr=r(Vr,"CODE",{});var Q_=i(sr);vv=s(Q_,"--timestamps"),Q_.forEach(o),hv=s(Vr," / "),ar=r(Vr,"CODE",{});var Z_=i(ar);_v=s(Z_,"-t"),Z_.forEach(o),kv=s(Vr," : show timestamps of logs"),Vr.forEach(o),Dv=d(re),oe=r(re,"LI",{});var At=i(oe);rr=r(At,"CODE",{});var J_=i(rr);wv=s(J_,"--tail"),J_.forEach(o),Ov=s(At," / "),ir=r(At,"CODE",{});var g_=i(ir);bv=s(g_,"-n"),g_.forEach(o),yv=s(At," : number of lines to show from end of the log (defaults to "),nr=r(At,"CODE",{});var ek=i(nr);Cv=s(ek,"all"),ek.forEach(o),Iv=s(At,")"),At.forEach(o),Pv=d(re),N=r(re,"LI",{});var Ee=i(N);cr=r(Ee,"CODE",{});var tk=i(cr);Rv=s(tk,"--since"),tk.forEach(o),Tv=s(Ee," : show logs "),fr=r(Ee,"EM",{});var ok=i(fr);Lv=s(ok,"since"),ok.forEach(o),Nv=s(Ee," timestamp ("),dr=r(Ee,"CODE",{});var lk=i(dr);Hv=s(lk,"2013-01-02T13:37:00Z"),lk.forEach(o),Sv=s(Ee,") or relative ("),pr=r(Ee,"CODE",{});var sk=i(pr);Av=s(sk,"42m"),sk.forEach(o),Mv=s(Ee,")"),Ee.forEach(o),xv=d(re),Ye=r(re,"LI",{});var Fr=i(Ye);ur=r(Fr,"CODE",{});var ak=i(ur);Uv=s(ak,"--until"),ak.forEach(o),Yv=s(Fr," : show logs "),Er=r(Fr,"EM",{});var rk=i(Er);Gv=s(rk,"before"),rk.forEach(o),Kv=s(Fr," timestamp or relative"),Fr.forEach(o),re.forEach(o),wc=d(e),go=r(e,"H3",{});var ik=i(go);Wv=s(ik,"docker inspect"),ik.forEach(o),Oc=d(e),el=r(e,"P",{});var nk=i(el);Vv=s(nk,`Returns detailed information about docker objects.
Objects can be images, containers, networks, volumes, etc.`),nk.forEach(o),bc=d(e),Pt=r(e,"PRE",{class:!0});var N5=i(Pt);N5.forEach(o),yc=d(e),tl=r(e,"H3",{});var ck=i(tl);Fv=s(ck,"docker ps"),ck.forEach(o),Cc=d(e),ol=r(e,"P",{});var fk=i(ol);Bv=s(fk,`List all containers and information about them (such as ID, image name, ports etc.)
Defaults to listing running containers only.`),fk.forEach(o),Ic=d(e),Rt=r(e,"PRE",{class:!0});var H5=i(Rt);H5.forEach(o),Pc=d(e),ll=r(e,"P",{});var dk=i(ll);qv=s(dk,"Useful options:"),dk.forEach(o),Rc=d(e),O=r(e,"UL",{});var ie=i(O);Ge=r(ie,"LI",{});var Br=i(Ge);mr=r(Br,"CODE",{});var pk=i(mr);zv=s(pk,"--all"),pk.forEach(o),$v=s(Br," / "),vr=r(Br,"CODE",{});var uk=i(vr);jv=s(uk,"-a"),uk.forEach(o),Xv=s(Br," : lists all containers, including those that are not running"),Br.forEach(o),Qv=d(ie),le=r(ie,"LI",{});var Mt=i(le);hr=r(Mt,"CODE",{});var Ek=i(hr);Zv=s(Ek,"--size"),Ek.forEach(o),Jv=s(Mt," / "),_r=r(Mt,"CODE",{});var mk=i(_r);gv=s(mk,"-s"),mk.forEach(o),eh=s(Mt," : include size of the container in output. Shows both size of container (i.e. writable layer), and "),kr=r(Mt,"CODE",{});var vk=i(kr);th=s(vk,"virtual"),vk.forEach(o),oh=s(Mt," size of total disk-space used, i.e. container + image."),Mt.forEach(o),lh=d(ie),sl=r(ie,"LI",{});var o3=i(sl);Dr=r(o3,"CODE",{});var hk=i(Dr);sh=s(hk,"--no-trunc"),hk.forEach(o),ah=s(o3," : prevent truncation in table output"),o3.forEach(o),rh=d(ie),se=r(ie,"LI",{});var xt=i(se);wr=r(xt,"CODE",{});var _k=i(wr);ih=s(_k,"--filter"),_k.forEach(o),nh=s(xt," / "),Or=r(xt,"CODE",{});var kk=i(Or);ch=s(kk,"-f"),kk.forEach(o),fh=s(xt," : filters the output with key-value pairs. E.g. "),br=r(xt,"CODE",{});var Dk=i(br);dh=s(Dk,'docker ps -f "name=mysparkcontainer"'),Dk.forEach(o),ph=s(xt,"."),xt.forEach(o),uh=d(ie),y=r(ie,"LI",{});var ne=i(y);yr=r(ne,"CODE",{});var wk=i(yr);Eh=s(wk,"--format"),wk.forEach(o),mh=s(ne," : formats the output using Go template. Placeholder information include "),Cr=r(ne,"CODE",{});var Ok=i(Cr);vh=s(Ok,".ID"),Ok.forEach(o),hh=s(ne,", "),Ir=r(ne,"CODE",{});var bk=i(Ir);_h=s(bk,".Image"),bk.forEach(o),kh=s(ne,", "),Pr=r(ne,"CODE",{});var yk=i(Pr);Dh=s(yk,".Names"),yk.forEach(o),wh=s(ne," etc."),Tt=r(ne,"UL",{});var af=i(Tt);Ke=r(af,"LI",{});var qr=i(Ke);Rr=r(qr,"CODE",{});var Ck=i(Rr);Oh=s(Ck,'docker ps --format "{{.ID}}: {{.Name}}"'),Ck.forEach(o),bh=s(qr," will print out "),Tr=r(qr,"CODE",{});var Ik=i(Tr);yh=s(Ik,"abcdef: name1"),Ik.forEach(o),Ch=s(qr," etc."),qr.forEach(o),Ih=d(af),al=r(af,"LI",{});var l3=i(al);Lr=r(l3,"CODE",{});var Pk=i(Lr);Ph=s(Pk,'docker ps --format "table {{.ID}}\\t{{.Name}}"'),Pk.forEach(o),Rh=s(l3," will print the output in a table with header row."),l3.forEach(o),af.forEach(o),ne.forEach(o),ie.forEach(o),Tc=d(e),rl=r(e,"H3",{});var Rk=i(rl);Th=s(Rk,"docker stats"),Rk.forEach(o),Lc=d(e),il=r(e,"P",{});var Tk=i(il);Lh=s(Tk,`Display live info about containers\u2019 resource usage (kind of like Window\u2019s task manager).
Defaults to only showing running containers.`),Tk.forEach(o),Nc=d(e),Lt=r(e,"PRE",{class:!0});var S5=i(Lt);S5.forEach(o),Hc=d(e),nl=r(e,"P",{});var Lk=i(nl);Nh=s(Lk,"Useful options:"),Lk.forEach(o),Sc=d(e),H=r(e,"UL",{});var $e=i(H);We=r($e,"LI",{});var zr=i(We);Nr=r(zr,"CODE",{});var Nk=i(Nr);Hh=s(Nk,"--all"),Nk.forEach(o),Sh=s(zr," / "),Hr=r(zr,"CODE",{});var Hk=i(Hr);Ah=s(Hk,"-a"),Hk.forEach(o),Mh=s(zr," : lists all containers, including those that are not running"),zr.forEach(o),xh=d($e),cl=r($e,"LI",{});var s3=i(cl);Sr=r(s3,"CODE",{});var Sk=i(Sr);Uh=s(Sk,"--no-trunc"),Sk.forEach(o),Yh=s(s3," : Prevent truncation in table output"),s3.forEach(o),Gh=d($e),fl=r($e,"LI",{});var a3=i(fl);Ar=r(a3,"CODE",{});var Ak=i(Ar);Kh=s(Ak,"--no-stream"),Ak.forEach(o),Wh=s(a3," : get only a \u2018snapshot\u2019 of the current stats"),a3.forEach(o),Vh=d($e),dl=r($e,"LI",{});var r3=i(dl);Mr=r(r3,"CODE",{});var Mk=i(Mr);Fh=s(Mk,"--format"),Mk.forEach(o),Bh=s(r3," : formats the output using Go template."),r3.forEach(o),$e.forEach(o),Ac=d(e),Mc=r(e,"HR",{}),xc=d(e),pl=r(e,"H2",{});var xk=i(pl);qh=s(xk,"networking"),xk.forEach(o),Uc=d(e),Yc=r(e,"HR",{}),Gc=d(e),ul=r(e,"H2",{});var Uk=i(ul);zh=s(Uk,"disks"),Uk.forEach(o),this.h()},h(){p(Qe,"class","language-dockerfile"),p(Ze,"class","language-dockerfile"),p(Je,"class","language-dockerfile"),p(ge,"class","language-dockerfile"),p(et,"class","language-dockerfile"),p(tt,"class","language-dockerfile"),p(st,"class","language-dockerfile"),p(at,"class","language-dockerfile"),p(rt,"class","language-dockerfile"),p(it,"class","language-dockerfile"),p(ct,"class","language-dockerfile"),p(ft,"class","language-dockerfile"),p(dt,"class","language-dockerfile"),p(ut,"class","language-dockerfile"),p(mt,"class","language-dockerfile"),p(ht,"class","language-dockerfile"),p(_t,"class","language-dockerfile"),p(kt,"class","language-dockerfile"),p(Dt,"class","language-dockerfile"),p(wt,"class","language-undefined"),p(bt,"href","https://docs.docker.com/engine/reference/commandline/service_create/#differences-between---mount-and---volume"),p(bt,"rel","nofollow"),p(yt,"href","https://docs.docker.com/engine/reference/commandline/run/"),p(yt,"rel","nofollow"),p(Ct,"href","https://docs.docker.com/engine/reference/run/"),p(Ct,"rel","nofollow"),p(It,"class","language-undefined"),p(Pt,"class","language-undefined"),p(Rt,"class","language-undefined"),p(Lt,"class","language-undefined")},m(e,n){c(e,me,n),t(me,rf),c(e,$r,n),c(e,Ut,n),t(Ut,nf),c(e,jr,n),c(e,Yt,n),t(Yt,cf),c(e,Xr,n),c(e,Gt,n),t(Gt,ff),c(e,Qr,n),c(e,Kt,n),t(Kt,df),c(e,Zr,n),c(e,Wt,n),t(Wt,pf),c(e,Jr,n),c(e,Vt,n),t(Vt,uf),c(e,gr,n),c(e,ve,n),t(ve,M),t(M,Ef),t(M,Ll),t(Ll,mf),t(M,vf),t(M,Nl),t(Nl,hf),t(M,_f),t(M,Hl),t(Hl,kf),t(M,Df),t(ve,wf),t(ve,je),t(je,Of),t(je,Sl),t(Sl,bf),t(je,yf),c(e,ei,n),c(e,Ft,n),t(Ft,Cf),c(e,ti,n),c(e,Bt,n),t(Bt,If),c(e,oi,n),c(e,Xe,n),t(Xe,Al),t(Al,Pf),t(Xe,Rf),c(e,li,n),c(e,qt,n),t(qt,Tf),c(e,si,n),c(e,he,n),t(he,Lf),t(he,Ml),t(Ml,Nf),t(he,Hf),c(e,ai,n),c(e,zt,n),t(zt,Sf),c(e,ri,n),c(e,$t,n),t($t,Af),c(e,ii,n),c(e,jt,n),t(jt,Mf),c(e,ni,n),c(e,_e,n),t(_e,xf),t(_e,xl),t(xl,Uf),t(_e,Yf),c(e,ci,n),c(e,Xt,n),t(Xt,Gf),c(e,fi,n),c(e,C,n),t(C,Kf),t(C,Ul),t(Ul,Wf),t(C,Vf),t(C,Yl),t(Yl,Ff),t(C,Bf),t(C,Gl),t(Gl,qf),t(C,zf),c(e,di,n),c(e,Qt,n),t(Qt,$f),c(e,pi,n),c(e,ke,n),t(ke,jf),t(ke,Kl),t(Kl,Xf),t(ke,Qf),c(e,ui,n),c(e,Zt,n),t(Zt,Zf),c(e,Ei,n),c(e,Jt,n),t(Jt,Jf),c(e,mi,n),c(e,De,n),t(De,gf),t(De,Wl),t(Wl,ed),t(De,td),c(e,vi,n),c(e,gt,n),t(gt,od),c(e,hi,n),c(e,_i,n),c(e,ki,n),c(e,eo,n),t(eo,ld),c(e,Di,n),c(e,to,n),t(to,sd),c(e,wi,n),c(e,oo,n),t(oo,ad),c(e,Oi,n),c(e,we,n),t(we,rd),t(we,Vl),t(Vl,id),t(we,nd),c(e,bi,n),c(e,Qe,n),Qe.innerHTML=Kk,c(e,yi,n),c(e,lo,n),t(lo,cd),c(e,Ci,n),c(e,so,n),t(so,fd),c(e,Ii,n),c(e,Ze,n),Ze.innerHTML=Wk,c(e,Pi,n),c(e,ao,n),t(ao,dd),c(e,Ri,n),c(e,ro,n),t(ro,pd),c(e,Ti,n),c(e,Je,n),Je.innerHTML=Vk,c(e,Li,n),c(e,io,n),t(io,ud),c(e,Ni,n),c(e,no,n),t(no,Ed),c(e,Hi,n),c(e,ge,n),ge.innerHTML=Fk,c(e,Si,n),c(e,co,n),t(co,md),c(e,Ai,n),c(e,fo,n),t(fo,vd),c(e,Mi,n),c(e,et,n),et.innerHTML=Bk,c(e,xi,n),c(e,W,n),t(W,hd),t(W,Fl),t(Fl,_d),t(W,kd),t(W,Bl),t(Bl,Dd),t(W,wd),c(e,Ui,n),c(e,Oe,n),t(Oe,Od),t(Oe,ql),t(ql,bd),t(Oe,yd),c(e,Yi,n),c(e,po,n),t(po,Cd),c(e,Gi,n),c(e,uo,n),t(uo,Id),c(e,Ki,n),c(e,tt,n),tt.innerHTML=qk,c(e,Wi,n),c(e,be,n),t(be,Pd),t(be,zl),t(zl,Rd),t(be,Td),c(e,Vi,n),c(e,V,n),t(V,$l),t($l,Ld),t(V,Nd),t(V,ot),t(ot,Hd),t(ot,jl),t(jl,Sd),t(ot,Ad),t(V,Md),t(V,Xl),t(Xl,xd),c(e,Fi,n),c(e,lt,n),t(lt,Ql),t(Ql,Ud),t(lt,Yd),c(e,Bi,n),c(e,F,n),t(F,Gd),t(F,Zl),t(Zl,Kd),t(F,Wd),t(F,Jl),t(Jl,Vd),t(F,Fd),c(e,qi,n),c(e,ye,n),t(ye,Bd),t(ye,gl),t(gl,qd),t(ye,zd),c(e,zi,n),c(e,Eo,n),t(Eo,$d),c(e,$i,n),c(e,mo,n),t(mo,jd),c(e,ji,n),c(e,st,n),st.innerHTML=zk,c(e,Xi,n),c(e,vo,n),t(vo,Xd),c(e,Qi,n),c(e,ho,n),t(ho,Qd),c(e,Zi,n),c(e,at,n),at.innerHTML=$k,c(e,Ji,n),c(e,x,n),t(x,es),t(es,Zd),t(x,Jd),t(x,ts),t(ts,gd),t(x,ep),t(x,os),t(os,tp),t(x,op),c(e,gi,n),c(e,_o,n),t(_o,lp),c(e,en,n),c(e,ko,n),t(ko,sp),c(e,tn,n),c(e,rt,n),rt.innerHTML=jk,c(e,on,n),c(e,Ce,n),t(Ce,ap),t(Ce,ls),t(ls,rp),t(Ce,ip),c(e,ln,n),c(e,Do,n),t(Do,np),c(e,sn,n),c(e,v,n),t(v,cp),t(v,ss),t(ss,fp),t(v,dp),t(v,as),t(as,pp),t(v,up),t(v,rs),t(rs,Ep),t(v,mp),t(v,is),t(is,vp),t(v,hp),t(v,ns),t(ns,_p),t(v,kp),c(e,an,n),c(e,it,n),it.innerHTML=Xk,c(e,rn,n),c(e,Ie,n),t(Ie,Dp),t(Ie,cs),t(cs,wp),t(Ie,Op),c(e,nn,n),c(e,B,n),t(B,bp),t(B,fs),t(fs,yp),t(B,Cp),t(B,ds),t(ds,Ip),t(B,Pp),c(e,cn,n),c(e,wo,n),t(wo,nt),t(nt,Rp),t(nt,ps),t(ps,Tp),t(nt,Lp),c(e,fn,n),c(e,q,n),t(q,Np),t(q,us),t(us,Hp),t(q,Sp),t(q,Es),t(Es,Ap),t(q,Mp),c(e,dn,n),c(e,Oo,n),t(Oo,xp),c(e,pn,n),c(e,z,n),t(z,Up),t(z,ms),t(ms,Yp),t(z,Gp),t(z,vs),t(vs,Kp),t(z,Wp),c(e,un,n),c(e,ct,n),ct.innerHTML=Qk,c(e,En,n),c(e,U,n),t(U,hs),t(hs,Vp),t(U,Fp),t(U,_s),t(_s,Bp),t(U,qp),t(U,ks),t(ks,zp),t(U,$p),c(e,mn,n),c(e,bo,n),t(bo,jp),c(e,vn,n),c(e,yo,n),t(yo,Xp),c(e,hn,n),c(e,ft,n),ft.innerHTML=Zk,c(e,_n,n),c(e,Co,n),t(Co,Qp),c(e,kn,n),c(e,dt,n),dt.innerHTML=Jk,c(e,Dn,n),c(e,$,n),t($,Zp),t($,Ds),t(Ds,Jp),t($,gp),t($,ws),t(ws,eu),t($,tu),c(e,wn,n),c(e,pt,n),t(pt,Os),t(Os,ou),t(pt,lu),c(e,On,n),c(e,Io,n),t(Io,su),c(e,bn,n),c(e,Po,n),t(Po,au),c(e,yn,n),c(e,ut,n),ut.innerHTML=gk,c(e,Cn,n),c(e,j,n),t(j,Ro),t(Ro,ru),t(Ro,bs),t(bs,iu),t(j,nu),t(j,ce),t(ce,cu),t(ce,ys),t(ys,fu),t(ce,du),t(ce,Cs),t(Cs,pu),t(ce,uu),t(j,Eu),t(j,Et),t(Et,mu),t(Et,Is),t(Is,vu),t(Et,hu),c(e,In,n),c(e,To,n),t(To,_u),c(e,Pn,n),c(e,Lo,n),t(Lo,ku),c(e,Rn,n),c(e,mt,n),mt.innerHTML=e5,c(e,Tn,n),c(e,vt,n),t(vt,Ps),t(Ps,Du),t(vt,wu),c(e,Ln,n),c(e,I,n),t(I,Pe),t(Pe,Rs),t(Rs,Ou),t(Pe,bu),t(Pe,Ts),t(Ts,yu),t(Pe,Cu),t(I,Iu),t(I,Re),t(Re,Ls),t(Ls,Pu),t(Re,Ru),t(Re,Ns),t(Ns,Tu),t(Re,Lu),t(I,Nu),t(I,Te),t(Te,Hs),t(Hs,Hu),t(Te,Su),t(Te,Ss),t(Ss,Au),t(Te,Mu),t(I,xu),t(I,Le),t(Le,As),t(As,Uu),t(Le,Yu),t(Le,Ms),t(Ms,Gu),t(Le,Ku),c(e,Nn,n),c(e,h,n),t(h,Wu),t(h,xs),t(xs,Vu),t(h,Fu),t(h,Us),t(Us,Bu),t(h,qu),t(h,Ys),t(Ys,zu),t(h,$u),t(h,Gs),t(Gs,ju),t(h,Xu),t(h,Ks),t(Ks,Qu),t(h,Zu),c(e,Hn,n),c(e,X,n),t(X,Ju),t(X,Ws),t(Ws,gu),t(X,eE),t(X,Vs),t(Vs,tE),t(X,oE),c(e,Sn,n),c(e,Q,n),t(Q,lE),t(Q,Fs),t(Fs,sE),t(Q,aE),t(Q,Bs),t(Bs,rE),t(Q,iE),c(e,An,n),c(e,No,n),t(No,nE),c(e,Mn,n),c(e,Z,n),t(Z,cE),t(Z,qs),t(qs,fE),t(Z,dE),t(Z,zs),t(zs,pE),t(Z,uE),c(e,xn,n),c(e,ht,n),ht.innerHTML=t5,c(e,Un,n),c(e,Ho,n),t(Ho,EE),c(e,Yn,n),c(e,So,n),t(So,mE),c(e,Gn,n),c(e,_t,n),_t.innerHTML=o5,c(e,Kn,n),c(e,Ao,n),t(Ao,vE),c(e,Wn,n),c(e,Mo,n),t(Mo,hE),c(e,Vn,n),c(e,Ne,n),t(Ne,_E),t(Ne,$s),t($s,kE),t(Ne,DE),c(e,Fn,n),c(e,kt,n),kt.innerHTML=l5,c(e,Bn,n),c(e,xo,n),t(xo,wE),c(e,qn,n),c(e,He,n),t(He,OE),t(He,js),t(js,bE),t(He,yE),c(e,zn,n),c(e,J,n),t(J,CE),t(J,Xs),t(Xs,IE),t(J,PE),t(J,Qs),t(Qs,RE),t(J,TE),c(e,$n,n),c(e,Se,n),t(Se,g),t(g,Zs),t(Zs,LE),t(g,NE),t(g,Js),t(Js,HE),t(g,SE),t(g,gs),t(gs,AE),t(g,ME),t(Se,xE),t(Se,_),t(_,ea),t(ea,UE),t(_,YE),t(_,ta),t(ta,GE),t(_,KE),t(_,oa),t(oa,WE),t(_,VE),t(_,la),t(la,FE),t(_,BE),t(_,sa),t(sa,qE),t(_,zE),c(e,jn,n),c(e,u,n),t(u,$E),t(u,aa),t(aa,jE),t(u,XE),t(u,ra),t(ra,QE),t(u,ZE),t(u,ia),t(ia,JE),t(u,gE),t(u,na),t(na,em),t(u,tm),t(u,ca),t(ca,om),t(u,lm),t(u,fa),t(fa,sm),t(u,am),t(u,da),t(da,rm),t(u,im),t(u,pa),t(pa,nm),t(u,cm),t(u,ua),t(ua,fm),t(u,dm),t(u,Ea),t(Ea,pm),t(u,um),t(u,ma),t(ma,Em),t(u,mm),c(e,Xn,n),c(e,Dt,n),Dt.innerHTML=s5,c(e,Qn,n),c(e,Uo,n),t(Uo,va),t(va,vm),c(e,Zn,n),c(e,P,n),t(P,hm),t(P,ha),t(ha,_m),t(P,km),t(P,_a),t(_a,Dm),t(P,wm),t(P,ka),t(ka,Om),t(P,bm),c(e,Jn,n),c(e,Yo,n),t(Yo,ym),c(e,gn,n),c(e,ec,n),c(e,tc,n),c(e,Go,n),t(Go,Cm),c(e,oc,n),c(e,Ko,n),t(Ko,Im),c(e,lc,n),c(e,Wo,n),t(Wo,Pm),c(e,sc,n),c(e,wt,n),wt.innerHTML=a5,c(e,ac,n),c(e,ee,n),t(ee,Da),t(Da,Rm),t(ee,Tm),t(ee,wa),t(wa,k),t(k,Oa),t(Oa,Lm),t(k,Nm),t(k,ba),t(ba,Hm),t(k,Sm),t(k,ya),t(ya,Am),t(k,Mm),t(k,Ca),t(Ca,xm),t(k,Um),t(k,Ia),t(Ia,Ym),t(k,Gm),t(ee,Km),t(ee,Vo),t(Vo,Wm),t(Vo,Pa),t(Pa,Vm),c(e,rc,n),c(e,Ot,n),t(Ot,Ra),t(Ra,Fm),t(Ot,Bm),c(e,ic,n),c(e,D,n),t(D,Ta),t(Ta,qm),t(D,zm),t(D,La),t(La,$m),t(D,jm),t(D,Na),t(Na,Xm),t(D,Qm),t(D,Ha),t(Ha,Zm),t(D,Jm),t(D,Sa),t(Sa,gm),c(e,nc,n),c(e,Fo,n),t(Fo,e1),c(e,cc,n),c(e,m,n),t(m,Bo),t(Bo,Aa),t(Aa,t1),t(Bo,o1),t(m,l1),t(m,Y),t(Y,Ma),t(Ma,s1),t(Y,a1),t(Y,xa),t(xa,r1),t(Y,i1),t(Y,Ua),t(Ua,n1),t(Y,c1),t(Y,Ya),t(Ya,f1),t(m,d1),t(m,R),t(R,Ga),t(Ga,p1),t(R,u1),t(R,Ka),t(Ka,E1),t(R,m1),t(R,Wa),t(Wa,v1),t(R,h1),t(R,Va),t(Va,_1),t(R,k1),t(m,D1),t(m,T),t(T,Fa),t(Fa,w1),t(T,O1),t(T,Ba),t(Ba,b1),t(T,y1),t(T,qa),t(qa,C1),t(T,I1),t(T,za),t(za,P1),t(T,R1),t(m,T1),t(m,Ae),t(Ae,$a),t($a,L1),t(Ae,N1),t(Ae,ja),t(ja,H1),t(Ae,S1),t(m,A1),t(m,qo),t(qo,Xa),t(Xa,M1),t(qo,x1),t(m,U1),t(m,L),t(L,Qa),t(Qa,Y1),t(L,G1),t(L,Za),t(Za,K1),t(L,W1),t(L,Ja),t(Ja,V1),t(L,F1),t(L,bt),t(bt,B1),t(L,q1),c(e,fc,n),c(e,Me,n),t(Me,ga),t(ga,z1),t(Me,$1),t(Me,fe),t(fe,j1),t(fe,yt),t(yt,X1),t(fe,Q1),t(fe,Ct),t(Ct,Z1),t(fe,J1),c(e,dc,n),c(e,zo,n),t(zo,g1),c(e,pc,n),c(e,$o,n),t($o,ev),c(e,uc,n),c(e,jo,n),t(jo,tv),c(e,Ec,n),c(e,Xo,n),t(Xo,ov),c(e,mc,n),c(e,Qo,n),t(Qo,lv),c(e,vc,n),c(e,Zo,n),t(Zo,sv),c(e,hc,n),c(e,te,n),t(te,av),t(te,er),t(er,rv),t(te,iv),t(te,tr),t(tr,nv),t(te,cv),c(e,_c,n),c(e,It,n),It.innerHTML=r5,c(e,kc,n),c(e,Jo,n),t(Jo,fv),c(e,Dc,n),c(e,w,n),t(w,xe),t(xe,or),t(or,dv),t(xe,pv),t(xe,lr),t(lr,uv),t(xe,Ev),t(w,mv),t(w,Ue),t(Ue,sr),t(sr,vv),t(Ue,hv),t(Ue,ar),t(ar,_v),t(Ue,kv),t(w,Dv),t(w,oe),t(oe,rr),t(rr,wv),t(oe,Ov),t(oe,ir),t(ir,bv),t(oe,yv),t(oe,nr),t(nr,Cv),t(oe,Iv),t(w,Pv),t(w,N),t(N,cr),t(cr,Rv),t(N,Tv),t(N,fr),t(fr,Lv),t(N,Nv),t(N,dr),t(dr,Hv),t(N,Sv),t(N,pr),t(pr,Av),t(N,Mv),t(w,xv),t(w,Ye),t(Ye,ur),t(ur,Uv),t(Ye,Yv),t(Ye,Er),t(Er,Gv),t(Ye,Kv),c(e,wc,n),c(e,go,n),t(go,Wv),c(e,Oc,n),c(e,el,n),t(el,Vv),c(e,bc,n),c(e,Pt,n),Pt.innerHTML=i5,c(e,yc,n),c(e,tl,n),t(tl,Fv),c(e,Cc,n),c(e,ol,n),t(ol,Bv),c(e,Ic,n),c(e,Rt,n),Rt.innerHTML=n5,c(e,Pc,n),c(e,ll,n),t(ll,qv),c(e,Rc,n),c(e,O,n),t(O,Ge),t(Ge,mr),t(mr,zv),t(Ge,$v),t(Ge,vr),t(vr,jv),t(Ge,Xv),t(O,Qv),t(O,le),t(le,hr),t(hr,Zv),t(le,Jv),t(le,_r),t(_r,gv),t(le,eh),t(le,kr),t(kr,th),t(le,oh),t(O,lh),t(O,sl),t(sl,Dr),t(Dr,sh),t(sl,ah),t(O,rh),t(O,se),t(se,wr),t(wr,ih),t(se,nh),t(se,Or),t(Or,ch),t(se,fh),t(se,br),t(br,dh),t(se,ph),t(O,uh),t(O,y),t(y,yr),t(yr,Eh),t(y,mh),t(y,Cr),t(Cr,vh),t(y,hh),t(y,Ir),t(Ir,_h),t(y,kh),t(y,Pr),t(Pr,Dh),t(y,wh),t(y,Tt),t(Tt,Ke),t(Ke,Rr),t(Rr,Oh),t(Ke,bh),t(Ke,Tr),t(Tr,yh),t(Ke,Ch),t(Tt,Ih),t(Tt,al),t(al,Lr),t(Lr,Ph),t(al,Rh),c(e,Tc,n),c(e,rl,n),t(rl,Th),c(e,Lc,n),c(e,il,n),t(il,Lh),c(e,Nc,n),c(e,Lt,n),Lt.innerHTML=c5,c(e,Hc,n),c(e,nl,n),t(nl,Nh),c(e,Sc,n),c(e,H,n),t(H,We),t(We,Nr),t(Nr,Hh),t(We,Sh),t(We,Hr),t(Hr,Ah),t(We,Mh),t(H,xh),t(H,cl),t(cl,Sr),t(Sr,Uh),t(cl,Yh),t(H,Gh),t(H,fl),t(fl,Ar),t(Ar,Kh),t(fl,Wh),t(H,Vh),t(H,dl),t(dl,Mr),t(Mr,Fh),t(dl,Bh),c(e,Ac,n),c(e,Mc,n),c(e,xc,n),c(e,pl,n),t(pl,qh),c(e,Uc,n),c(e,Yc,n),c(e,Gc,n),c(e,ul,n),t(ul,zh)},p:i3,i:i3,o:i3,d(e){e&&o(me),e&&o($r),e&&o(Ut),e&&o(jr),e&&o(Yt),e&&o(Xr),e&&o(Gt),e&&o(Qr),e&&o(Kt),e&&o(Zr),e&&o(Wt),e&&o(Jr),e&&o(Vt),e&&o(gr),e&&o(ve),e&&o(ei),e&&o(Ft),e&&o(ti),e&&o(Bt),e&&o(oi),e&&o(Xe),e&&o(li),e&&o(qt),e&&o(si),e&&o(he),e&&o(ai),e&&o(zt),e&&o(ri),e&&o($t),e&&o(ii),e&&o(jt),e&&o(ni),e&&o(_e),e&&o(ci),e&&o(Xt),e&&o(fi),e&&o(C),e&&o(di),e&&o(Qt),e&&o(pi),e&&o(ke),e&&o(ui),e&&o(Zt),e&&o(Ei),e&&o(Jt),e&&o(mi),e&&o(De),e&&o(vi),e&&o(gt),e&&o(hi),e&&o(_i),e&&o(ki),e&&o(eo),e&&o(Di),e&&o(to),e&&o(wi),e&&o(oo),e&&o(Oi),e&&o(we),e&&o(bi),e&&o(Qe),e&&o(yi),e&&o(lo),e&&o(Ci),e&&o(so),e&&o(Ii),e&&o(Ze),e&&o(Pi),e&&o(ao),e&&o(Ri),e&&o(ro),e&&o(Ti),e&&o(Je),e&&o(Li),e&&o(io),e&&o(Ni),e&&o(no),e&&o(Hi),e&&o(ge),e&&o(Si),e&&o(co),e&&o(Ai),e&&o(fo),e&&o(Mi),e&&o(et),e&&o(xi),e&&o(W),e&&o(Ui),e&&o(Oe),e&&o(Yi),e&&o(po),e&&o(Gi),e&&o(uo),e&&o(Ki),e&&o(tt),e&&o(Wi),e&&o(be),e&&o(Vi),e&&o(V),e&&o(Fi),e&&o(lt),e&&o(Bi),e&&o(F),e&&o(qi),e&&o(ye),e&&o(zi),e&&o(Eo),e&&o($i),e&&o(mo),e&&o(ji),e&&o(st),e&&o(Xi),e&&o(vo),e&&o(Qi),e&&o(ho),e&&o(Zi),e&&o(at),e&&o(Ji),e&&o(x),e&&o(gi),e&&o(_o),e&&o(en),e&&o(ko),e&&o(tn),e&&o(rt),e&&o(on),e&&o(Ce),e&&o(ln),e&&o(Do),e&&o(sn),e&&o(v),e&&o(an),e&&o(it),e&&o(rn),e&&o(Ie),e&&o(nn),e&&o(B),e&&o(cn),e&&o(wo),e&&o(fn),e&&o(q),e&&o(dn),e&&o(Oo),e&&o(pn),e&&o(z),e&&o(un),e&&o(ct),e&&o(En),e&&o(U),e&&o(mn),e&&o(bo),e&&o(vn),e&&o(yo),e&&o(hn),e&&o(ft),e&&o(_n),e&&o(Co),e&&o(kn),e&&o(dt),e&&o(Dn),e&&o($),e&&o(wn),e&&o(pt),e&&o(On),e&&o(Io),e&&o(bn),e&&o(Po),e&&o(yn),e&&o(ut),e&&o(Cn),e&&o(j),e&&o(In),e&&o(To),e&&o(Pn),e&&o(Lo),e&&o(Rn),e&&o(mt),e&&o(Tn),e&&o(vt),e&&o(Ln),e&&o(I),e&&o(Nn),e&&o(h),e&&o(Hn),e&&o(X),e&&o(Sn),e&&o(Q),e&&o(An),e&&o(No),e&&o(Mn),e&&o(Z),e&&o(xn),e&&o(ht),e&&o(Un),e&&o(Ho),e&&o(Yn),e&&o(So),e&&o(Gn),e&&o(_t),e&&o(Kn),e&&o(Ao),e&&o(Wn),e&&o(Mo),e&&o(Vn),e&&o(Ne),e&&o(Fn),e&&o(kt),e&&o(Bn),e&&o(xo),e&&o(qn),e&&o(He),e&&o(zn),e&&o(J),e&&o($n),e&&o(Se),e&&o(jn),e&&o(u),e&&o(Xn),e&&o(Dt),e&&o(Qn),e&&o(Uo),e&&o(Zn),e&&o(P),e&&o(Jn),e&&o(Yo),e&&o(gn),e&&o(ec),e&&o(tc),e&&o(Go),e&&o(oc),e&&o(Ko),e&&o(lc),e&&o(Wo),e&&o(sc),e&&o(wt),e&&o(ac),e&&o(ee),e&&o(rc),e&&o(Ot),e&&o(ic),e&&o(D),e&&o(nc),e&&o(Fo),e&&o(cc),e&&o(m),e&&o(fc),e&&o(Me),e&&o(dc),e&&o(zo),e&&o(pc),e&&o($o),e&&o(uc),e&&o(jo),e&&o(Ec),e&&o(Xo),e&&o(mc),e&&o(Qo),e&&o(vc),e&&o(Zo),e&&o(hc),e&&o(te),e&&o(_c),e&&o(It),e&&o(kc),e&&o(Jo),e&&o(Dc),e&&o(w),e&&o(wc),e&&o(go),e&&o(Oc),e&&o(el),e&&o(bc),e&&o(Pt),e&&o(yc),e&&o(tl),e&&o(Cc),e&&o(ol),e&&o(Ic),e&&o(Rt),e&&o(Pc),e&&o(ll),e&&o(Rc),e&&o(O),e&&o(Tc),e&&o(rl),e&&o(Lc),e&&o(il),e&&o(Nc),e&&o(Lt),e&&o(Hc),e&&o(nl),e&&o(Sc),e&&o(H),e&&o(Ac),e&&o(Mc),e&&o(xc),e&&o(pl),e&&o(Uc),e&&o(Yc),e&&o(Gc),e&&o(ul)}}}const Y5={title:"Docker Intro",date:"2022-12-01"},{title:Yk,date:K5}=Y5;class W5 extends A5{constructor(me){super(),M5(this,me,null,U5,x5,{})}}export{W5 as default,Y5 as metadata};
