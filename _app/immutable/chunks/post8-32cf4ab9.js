import{S as L1,i as N1,s as H1,k as i,q as o,a as f,l as r,m as n,r as s,h as t,c as p,n as E,b as c,B as l,A as wu}from"./index-4cbca6b4.js";function A1(qm){let q,vr,Ns,Be,mr,Hs,qe,hr,As,$e,kr,Ms,je,_r,xs,Xe,Dr,Ss,ze,wr,Us,$,P,br,Dl,yr,Or,wl,Cr,Pr,bl,Rr,Ir,Tr,Ee,Lr,yl,Nr,Hr,Ys,Qe,Ar,Gs,Je,Mr,Ks,ve,Ol,xr,Sr,Vs,Ze,Ur,Ws,j,Yr,Cl,Gr,Kr,Fs,ge,Vr,Bs,et,Wr,qs,tt,Fr,$s,X,Br,Pl,qr,$r,js,lt,jr,Xs,D,Xr,Rl,zr,Qr,Il,Jr,Zr,Tl,gr,en,zs,ot,tn,Qs,z,ln,Ll,on,sn,Js,st,an,Zs,at,rn,gs,Q,nn,Nl,cn,fn,ea,it,pn,ta,rt,dn,la,nt,un,oa,ct,En,sa,J,vn,Hl,mn,hn,aa,me,$m=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">FROM</span> apache/spark</span>

<span class="token comment"># to specify a tag</span>
<span class="token instruction"><span class="token keyword">FROM</span> apache/spark:3.3.1</span></code>`,ia,ft,kn,ra,pt,_n,na,he,jm=`<code class="language-dockerfile"><span class="token comment"># Shell form (defaults to /bin/sh -c on Linux or cmd /S /C on Windows)</span>
<span class="token instruction"><span class="token keyword">RUN</span> &lt;command></span>

<span class="token comment"># Exec form</span>
<span class="token instruction"><span class="token keyword">RUN</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>]</span></code>`,ca,dt,Dn,fa,ut,wn,pa,ke,Xm=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # exec form</span>
<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # default parameters to ENTRYPOINT</span>
<span class="token instruction"><span class="token keyword">CMD</span> command param1 param2 # shell form</span></code>`,da,Et,bn,ua,vt,yn,Ea,_e,zm=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ENTRYPOINT</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # exec form</span>
<span class="token instruction"><span class="token keyword">ENTRYPOINT</span> command param1 param2 # shell form</span></code>`,va,mt,On,ma,ht,Cn,ha,De,Qm=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">COPY</span> &lt;src>... &lt;dest></span>
<span class="token instruction"><span class="token keyword">COPY</span> [<span class="token string">"&lt;src>"</span>,... <span class="token string">"&lt;dest>"</span>] # used when there are spaces in path</span></code>`,ka,L,Pn,Al,Rn,In,Ml,Tn,Ln,_a,Z,Nn,xl,Hn,An,Da,kt,Mn,wa,_t,xn,ba,we,Jm=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ADD</span> &lt;src>... &lt;dest></span>
<span class="token instruction"><span class="token keyword">ADD</span> [<span class="token string">"&lt;src>"</span>,... <span class="token string">"&lt;dest>"</span>] # used when there are spaces in path</span></code>`,ya,g,Sn,Sl,Un,Yn,Oa,N,Ul,Gn,Kn,be,Vn,Yl,Wn,Fn,Bn,Gl,qn,Ca,ye,Kl,$n,jn,Pa,H,Xn,Vl,zn,Qn,Wl,Jn,Zn,Ra,ee,gn,Fl,ec,tc,Ia,Dt,lc,Ta,wt,oc,La,Oe,Zm='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ENV</span> &lt;key>=&lt;value></span></code>',Na,bt,sc,Ha,yt,ac,Aa,Ce,gm='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">EXPOSE</span> &lt;port> [&lt;port>/&lt;protocol>]</span></code>',Ma,R,Bl,ic,rc,ql,nc,cc,$l,fc,pc,xa,Ot,dc,Sa,Ct,uc,Ua,Pe,e1=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">VOLUME</span> &lt;path/to/container/dir> &lt;path/to/container/dir2> # space separated paths</span>
<span class="token instruction"><span class="token keyword">VOLUME</span> [<span class="token string">"&lt;/path/to/dir1>"</span>, <span class="token string">"&lt;/path/to/dir2>"</span>] #json array</span></code>`,Ya,te,Ec,jl,vc,mc,Ga,Pt,hc,Ka,v,kc,Xl,_c,Dc,zl,wc,bc,Ql,yc,Oc,Jl,Cc,Pc,Zl,Rc,Ic,Va,Re,t1=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">WORKDIR</span> /path/to/workdir # absolute paths, i.e. starts with /</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> path/to/child/dir # relative path, i.e. does not start with /</span></code>`,Wa,le,Tc,gl,Lc,Nc,Fa,A,Hc,eo,Ac,Mc,to,xc,Sc,Ba,Rt,Ie,Uc,lo,Yc,Gc,qa,M,Kc,oo,Vc,Wc,so,Fc,Bc,$a,It,qc,ja,x,$c,ao,jc,Xc,io,zc,Qc,Xa,Te,l1='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ARG</span> &lt;name>[=&lt;default value>]</span></code>',za,I,ro,Jc,Zc,no,gc,ef,co,tf,lf,Qa,Tt,of,Ja,Lt,sf,Za,Le,o1='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ONBUILD</span> &lt;INSTRUCTION></span></code>',ga,Nt,af,ei,Ne,s1=`<code class="language-dockerfile"><span class="token comment"># copy host files to /contents in the container</span>
<span class="token instruction"><span class="token keyword">ONBUILD</span> <span class="token keyword">ADD</span> . /contents</span>

<span class="token comment"># tar all files in the /contents directory in the container to archive.tar in the container</span>
<span class="token instruction"><span class="token keyword">ONBUILD</span> <span class="token keyword">RUN</span> tar -cfv archive.tar /contents</span></code>`,ti,S,rf,fo,nf,cf,po,ff,pf,li,He,uo,df,uf,oi,Ht,Ef,si,At,vf,ai,Ae,a1='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">STOPSIGNAL</span> signal</span></code>',ii,U,Mt,mf,Eo,hf,kf,B,_f,vo,Df,wf,mo,bf,yf,Of,Me,Cf,ho,Pf,Rf,ri,xt,If,ni,St,Tf,ci,xe,i1=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">HEALTHCHECK</span> [OPTIONS] CMD command</span>
<span class="token instruction"><span class="token keyword">HEALTHCHECK</span> <span class="token keyword">NONE</span> # disable any healthcheck from base image</span></code>`,fi,Se,ko,Lf,Nf,pi,w,oe,_o,Hf,Af,Do,Mf,xf,Sf,se,wo,Uf,Yf,bo,Gf,Kf,Vf,ae,yo,Wf,Ff,Oo,Bf,qf,$f,ie,Co,jf,Xf,Po,zf,Qf,di,m,Jf,Ro,Zf,gf,Io,ep,tp,To,lp,op,Lo,sp,ap,No,ip,rp,ui,Y,np,Ho,cp,fp,Ao,pp,dp,Ei,G,up,Mo,Ep,vp,xo,mp,hp,vi,Ut,kp,mi,K,_p,So,Dp,wp,Uo,bp,yp,hi,Ue,r1='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">SHELL</span> [<span class="token string">"executable"</span>, <span class="token string">"parameters"</span>]</span></code>',ki,Yt,Op,_i,Gt,Cp,Di,Ye,n1=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">USER</span> &lt;user></span>
<span class="token instruction"><span class="token keyword">USER</span> &lt;UID></span></code>`,wi,Kt,Pp,bi,Vt,Rp,yi,re,Ip,Yo,Tp,Lp,Oi,Ge,c1='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">LABEL</span> &lt;key>=&lt;value> &lt;key>=&lt;value> ...</span></code>',Ci,Wt,Np,Pi,ne,Hp,Go,Ap,Mp,Ri,V,xp,Ko,Sp,Up,Vo,Yp,Gp,Ii,ce,W,Wo,Kp,Vp,Fo,Wp,Fp,Bo,Bp,qp,$p,k,qo,jp,Xp,$o,zp,Qp,jo,Jp,Zp,Xo,gp,ed,zo,td,ld,Ti,d,od,Qo,sd,ad,Jo,id,rd,Zo,nd,cd,go,fd,pd,es,dd,ud,ts,Ed,vd,ls,md,hd,os,kd,_d,ss,Dd,wd,as,bd,yd,is,Od,Cd,Li,Ke,f1=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">FROM</span> example</span>
<span class="token instruction"><span class="token keyword">ENV</span> var=/bar</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token variable">$&#123;var&#125;</span> # WORKDIR /bar</span>
<span class="token instruction"><span class="token keyword">ADD</span> . <span class="token variable">$FOO</span>     # ADD . /bar</span></code>`,Ni,Ft,rs,Pd,Hi,b,Rd,ns,Id,Td,cs,Ld,Nd,fs,Hd,Ad,Ai,Bt,Md,Mi,qt,xd,xi,$t,Sd,Si,jt,Ud,Ui,Xt,ps,Yd,Yi,zt,h,Gd,ds,Kd,Vd,us,Wd,Fd,Es,Bd,qd,vs,$d,jd,ms,Xd,zd,Gi,Qt,Qd,Ki,_,hs,ks,Jd,Zd,_s,Ds,gd,eu,ws,bs,tu,lu,ys,Os,ou,su,Cs,Ps,au,Vi,Jt,iu,Wi,Zt,ru,Fi,gt,nu,Bi,el,cu,qi,tl,fu,$i,ll,pu,ji,ol,du,Xi,sl,uu,zi,al,Eu,Qi,il,vu;return{c(){q=i("h1"),vr=o(Bm),Ns=f(),Be=i("p"),mr=o("Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),Hs=f(),qe=i("p"),hr=o(`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),As=f(),$e=i("h2"),kr=o("key concepts"),Ms=f(),je=i("h3"),_r=o("Docker images"),xs=f(),Xe=i("p"),Dr=o(`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),Ss=f(),ze=i("p"),wr=o("Images are often build on top of one another"),Us=f(),$=i("ul"),P=i("li"),br=o("e.g. you start with "),Dl=i("code"),yr=o("ubuntu"),Or=o(" image, install "),wl=i("code"),Cr=o("python"),Pr=o(" in that ubuntu image, install "),bl=i("code"),Rr=o("pytorch"),Ir=o(" package, install pretrained models."),Tr=f(),Ee=i("li"),Lr=o("or you can start with a published "),yl=i("code"),Nr=o("python"),Hr=o(" image, and install your packages there."),Ys=f(),Qe=i("p"),Ar=o("Published images are available for download in Docker registries."),Gs=f(),Je=i("h4"),Mr=o("Dockerfile"),Ks=f(),ve=i("p"),Ol=i("code"),xr=o("Dockerfile"),Sr=o("s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),Vs=f(),Ze=i("h3"),Ur=o("Docker containers"),Ws=f(),j=i("p"),Yr=o(`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),Cl=i("code"),Gr=o("nodejs"),Kr=o(" image, but one exposes port 8888 and another exposes port 8899."),Fs=f(),ge=i("h3"),Vr=o("Docker registries"),Bs=f(),et=i("p"),Wr=o("Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),qs=f(),tt=i("h3"),Fr=o("Docker daemon"),$s=f(),X=i("p"),Br=o("This is the underlying "),Pl=i("code"),qr=o("dockerd"),$r=o(" process that helps you build images and run containers. It will listen for Docker API requests"),js=f(),lt=i("h3"),jr=o("Docker client"),Xs=f(),D=i("p"),Xr=o("The docker client "),Rl=i("code"),zr=o("docker"),Qr=o(" is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),Il=i("code"),Jr=o("docker"),Zr=o(" command sends Docker API requests to "),Tl=i("code"),gr=o("dockerd"),en=o("."),zs=f(),ot=i("h3"),tn=o("Docker compose"),Qs=f(),z=i("p"),ln=o("Docker compose is a tool that helps with running "),Ll=i("em"),on=o("multi-container"),sn=o(" Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),Js=f(),st=i("p"),an=o("For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),Zs=f(),at=i("h4"),rn=o("Difference between Kubernetes"),gs=f(),Q=i("p"),nn=o("Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),Nl=i("em"),cn=o("single-node"),fn=o(", whereas Kubernetes is a full multi-node container manager."),ea=f(),it=i("p"),pn=o("Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),ta=f(),rt=i("h2"),dn=o("Dockerfile"),la=f(),nt=i("h3"),un=o("Commands"),oa=f(),ct=i("h4"),En=o("FROM"),sa=f(),J=i("p"),vn=o("All dockerfile starts with the "),Hl=i("code"),mn=o("FROM"),hn=o(" command. It pulls the base image from Dockerhub to start to build your image."),aa=f(),me=i("pre"),ia=f(),ft=i("h4"),kn=o("RUN"),ra=f(),pt=i("p"),_n=o("Runs a command or executable. It has two forms"),na=f(),he=i("pre"),ca=f(),dt=i("h4"),Dn=o("CMD"),fa=f(),ut=i("p"),wn=o("Provides defaults for an executing container. The arguments will be appended to ENTRYPOINT."),pa=f(),ke=i("pre"),da=f(),Et=i("h4"),bn=o("ENTRYPOINT"),ua=f(),vt=i("p"),yn=o(`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),Ea=f(),_e=i("pre"),va=f(),mt=i("h4"),On=o("COPY"),ma=f(),ht=i("p"),Cn=o("Copies file from your native host into the container image."),ha=f(),De=i("pre"),ka=f(),L=i("p"),Pn=o("Multiple "),Al=i("code"),Rn=o("<src>"),In=o(" can be specified, and the last argument will be treated as the "),Ml=i("code"),Tn=o("<dest>"),Ln=o("."),_a=f(),Z=i("p"),Nn=o("All "),xl=i("code"),Hn=o("<src>"),An=o(" relative paths must be inside context of the build!"),Da=f(),kt=i("h4"),Mn=o("ADD"),wa=f(),_t=i("p"),xn=o("Copies file from your native host into the container image."),ba=f(),we=i("pre"),ya=f(),g=i("p"),Sn=o("Compared to COPY, "),Sl=i("code"),Un=o("ADD"),Yn=o(" has added utilities like:"),Oa=f(),N=i("ul"),Ul=i("li"),Gn=o("being able to download files from URLs then copying them into the image"),Kn=f(),be=i("li"),Vn=o("extracting contents of "),Yl=i("code"),Wn=o(".tar"),Fn=o(" files before copying into image"),Bn=f(),Gl=i("li"),qn=o("adding contents from a git repo"),Ca=f(),ye=i("p"),Kl=i("strong"),$n=o("tip: use COPY as default, unless you need the additional features of ADD."),jn=o(" This is to prevent unwanted side effects!"),Pa=f(),H=i("p"),Xn=o("Multiple "),Vl=i("code"),zn=o("<src>"),Qn=o(" can be specified, and the last argument will be treated as the "),Wl=i("code"),Jn=o("<dest>"),Zn=o("."),Ra=f(),ee=i("p"),gn=o("All "),Fl=i("code"),ec=o("<src>"),tc=o(" relative paths must be inside context of the build!"),Ia=f(),Dt=i("h4"),lc=o("ENV"),Ta=f(),wt=i("p"),oc=o("Sets an environment variable"),La=f(),Oe=i("pre"),Na=f(),bt=i("h4"),sc=o("EXPOSE"),Ha=f(),yt=i("p"),ac=o("Instructs Docker that container should listen on specified network ports at runtime."),Aa=f(),Ce=i("pre"),Ma=f(),R=i("p"),Bl=i("strong"),ic=o("Ports are not automatically published"),rc=o(`, and this command is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),ql=i("code"),nc=o("-P"),cc=o(" flag (which maps exposed ports in container to random ports in native host machine), or "),$l=i("code"),fc=o("-p"),pc=o(" to explicitly map ports from containers to your localhost."),xa=f(),Ot=i("h4"),dc=o("VOLUME"),Sa=f(),Ct=i("p"),uc=o(`Marks the directory(s) within the container as an external drive from native host or other containers.
This allows files to be accessed from outside the containers.`),Ua=f(),Pe=i("pre"),Ya=f(),te=i("p"),Ec=o("Note that where this (container) directory maps to in your native host is "),jl=i("strong"),vc=o("specified when you build or run the container"),mc=o("."),Ga=f(),Pt=i("h4"),hc=o("WORKDIR"),Ka=f(),v=i("p"),kc=o("Sets working directory for any "),Xl=i("code"),_c=o("RUN"),Dc=o(", "),zl=i("code"),wc=o("CMD"),bc=o(", "),Ql=i("code"),yc=o("ENTRYPOINT"),Oc=o(", "),Jl=i("code"),Cc=o("COPY"),Pc=o(", "),Zl=i("code"),Rc=o("ADD"),Ic=o(" instructions that follows."),Va=f(),Re=i("pre"),Wa=f(),le=i("p"),Tc=o("Multiple "),gl=i("code"),Lc=o("WORKDIR"),Nc=o(" can be used in a dockerfile."),Fa=f(),A=i("p"),Hc=o("If not specified, default directory is "),eo=i("code"),Ac=o("/"),Mc=o(`.
But if you are pulling from an image, chances are `),to=i("code"),xc=o("WORKDIR"),Sc=o(" already been set in your base image and it will be brought over."),Ba=f(),Rt=i("p"),Ie=i("strong"),Uc=o("tip: explicitly set "),lo=i("code"),Yc=o("WORKDIR"),Gc=o(" to prevent unintended operations in unknown dirs"),qa=f(),M=i("p"),Kc=o("It is also possible to resolve env variables previously set by "),oo=i("code"),Vc=o("ENV"),Wc=o(", e.g. "),so=i("code"),Fc=o("WORKDIR $DIRPATH_ENV_VAR"),Bc=o("."),$a=f(),It=i("h4"),qc=o("ARG"),ja=f(),x=i("p"),$c=o("Defines a variable that users can pass values into during "),ao=i("code"),jc=o("docker build"),Xc=o(" by using "),io=i("code"),zc=o("--build-arg <argname>=<value>"),Qc=o(" flag."),Xa=f(),Te=i("pre"),za=f(),I=i("p"),ro=i("code"),Jc=o("ENV"),Zc=o(" variables will overwrite "),no=i("code"),gc=o("ARG"),ef=o(" variables if they are the same name (at the point where the "),co=i("code"),tf=o("ENV"),lf=o(" variable is defined)."),Qa=f(),Tt=i("h4"),of=o("ONBUILD"),Ja=f(),Lt=i("p"),sf=o("Adds a trigger to the image that will execute dockerfile instructions when the current image is used as the base for another build."),Za=f(),Le=i("pre"),ga=f(),Nt=i("p"),af=o("This command is usful when when you are building a base image that will be distributed to other people, and instructions that depend on other people\u2019s files needs to be run. Example, you could add:"),ei=f(),Ne=i("pre"),ti=f(),S=i("p"),rf=o("The instructions specified are triggered "),fo=i("em"),nf=o("immediately"),cf=o(" after the "),po=i("code"),ff=o("FROM"),pf=o(" instruction in the child image."),li=f(),He=i("p"),uo=i("code"),df=o("ONBUILD"),uf=o(" triggers are not inherited by children images."),oi=f(),Ht=i("h4"),Ef=o("STOPSIGNAL"),si=f(),At=i("p"),vf=o("Sets the system call signal that will cause the container to exit."),ai=f(),Ae=i("pre"),ii=f(),U=i("ul"),Mt=i("li"),mf=o("Default is "),Eo=i("code"),hf=o("SIGTERM"),kf=f(),B=i("li"),_f=o("Can be in "),vo=i("code"),Df=o("SIG<NAME>"),wf=o(" format (e.g. "),mo=i("code"),bf=o("SIGKILL"),yf=o(")"),Of=f(),Me=i("li"),Cf=o("Can be an unassigned number in kernel\u2019s syscall table (e.g. "),ho=i("code"),Pf=o("9"),Rf=o(")"),ri=f(),xt=i("h4"),If=o("HEALTHCHECK"),ni=f(),St=i("p"),Tf=o("Specifies a command to be run inside the container to check container\u2019s health."),ci=f(),xe=i("pre"),fi=f(),Se=i("p"),ko=i("code"),Lf=o("OPTIONS"),Nf=o(" include:"),pi=f(),w=i("ul"),oe=i("li"),_o=i("code"),Hf=o("--interval=DURATION"),Af=o(" (default "),Do=i("code"),Mf=o("30s"),xf=o(")"),Sf=f(),se=i("li"),wo=i("code"),Uf=o("--timeout=DURATION"),Yf=o(" (default "),bo=i("code"),Gf=o("30s"),Kf=o(")"),Vf=f(),ae=i("li"),yo=i("code"),Wf=o("--retries=N"),Ff=o(" (default "),Oo=i("code"),Bf=o("3"),qf=o(")"),$f=f(),ie=i("li"),Co=i("code"),jf=o("--start-period=DURATION"),Xf=o(" (default "),Po=i("code"),zf=o("0s"),Qf=o(")"),di=f(),m=i("p"),Jf=o("A container that has "),Ro=i("code"),Zf=o("HEALTHCHECK"),gf=o(" specified will have a "),Io=i("em"),ep=o("health status"),tp=o(" that can take 3 possible states: "),To=i("code"),lp=o("starting"),op=o(" | "),Lo=i("code"),sp=o("healthy"),ap=o(" | "),No=i("code"),ip=o("unhealthy"),rp=o("."),ui=f(),Y=i("p"),np=o("Whenever a health check passes, health status changes to "),Ho=i("code"),cp=o("healthy"),fp=o(". After a number of consecutive failures, health status changes to "),Ao=i("code"),pp=o("unhealthy"),dp=o("."),Ei=f(),G=i("p"),up=o(`Health checks are run after every interval.
Health checks are considered failed when commands runs for longer than timeout.
When consecutive failures reaches max retries, or command exits with non zero status code `),Mo=i("code"),Ep=o("0"),vp=o(", "),xo=i("em"),mp=o("health status"),hp=o(" will change to unhealthy."),vi=f(),Ut=i("h4"),kp=o("SHELL"),mi=f(),K=i("p"),_p=o("Specifies the default shell used for shell form of commands. Default is set to "),So=i("code"),Dp=o('["/bin/sh", "-c"]'),wp=o(" for Linux containers and "),Uo=i("code"),bp=o('["cmd", "/S", "/C"]'),yp=o(" for Windows containers."),hi=f(),Ue=i("pre"),ki=f(),Yt=i("h4"),Op=o("USER"),_i=f(),Gt=i("p"),Cp=o("Sets the username/UID to use for the remainder of the Docker build stage."),Di=f(),Ye=i("pre"),wi=f(),Kt=i("p"),Pp=o(`This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),bi=f(),Vt=i("h4"),Rp=o("LABEL"),yi=f(),re=i("p"),Ip=o("Adds metadata to an image and are inherited by child images. You can view an image\u2019s labels using "),Yo=i("code"),Tp=o("docker image inspect"),Lp=o("."),Oi=f(),Ge=i("pre"),Ci=f(),Wt=i("h3"),Np=o("Environment Replacement"),Pi=f(),ne=i("p"),Hp=o("Some Dockerfile instructions are able to read environment variables created by "),Go=i("code"),Ap=o("ENV"),Mp=o(" commands, and replace them with the values that those environment variables hold."),Ri=f(),V=i("p"),xp=o("The syntax is "),Ko=i("code"),Sp=o("$variable_name"),Up=o(" or "),Vo=i("code"),Yp=o("${variable_name}"),Gp=o(" within a Dockerfile."),Ii=f(),ce=i("ul"),W=i("li"),Wo=i("code"),Kp=o("${variable:-word}"),Vp=o(" to set "),Fo=i("code"),Wp=o("word"),Fp=o(" as default value when "),Bo=i("code"),Bp=o("variable"),qp=o(" is not set"),$p=f(),k=i("li"),qo=i("code"),jp=o("${variable:+word}"),Xp=o(" to set "),$o=i("code"),zp=o("word"),Qp=o(" as "),jo=i("code"),Jp=o("variable"),Zp=o(" when "),Xo=i("code"),gp=o("variable"),ed=o(" has already been set, otherwise "),zo=i("code"),td=o("variable"),ld=o(" will be empty string."),Ti=f(),d=i("p"),od=o("Dockerfile instructions that support environment variables are: "),Qo=i("code"),sd=o("ADD"),ad=o(", "),Jo=i("code"),id=o("COPY"),rd=o(", "),Zo=i("code"),nd=o("ENV"),cd=o(", "),go=i("code"),fd=o("EXPOSE"),pd=o(", "),es=i("code"),dd=o("FROM"),ud=o(", "),ts=i("code"),Ed=o("LABEL"),vd=o(", "),ls=i("code"),md=o("STOPSIGNAL"),hd=o(", "),os=i("code"),kd=o("USER"),_d=o(", "),ss=i("code"),Dd=o("VOLUME"),wd=o(", "),as=i("code"),bd=o("WORKDIR"),yd=o(", "),is=i("code"),Od=o("ONBUILD"),Cd=o("."),Li=f(),Ke=i("pre"),Ni=f(),Ft=i("h3"),rs=i("code"),Pd=o(".dockerignore"),Hi=f(),b=i("p"),Rd=o("Similar to "),ns=i("code"),Id=o(".gitignore"),Td=o(", this file contains a list of files and directories that docker should "),cs=i("strong"),Ld=o("exclude"),Nd=o(" from the "),fs=i("em"),Hd=o("context"),Ad=o(" of a docker build."),Ai=f(),Bt=i("p"),Md=o("This is useful for preventing sending of large or sensitive files to docker daemon."),Mi=f(),qt=i("h2"),xd=o("useful docker CLI commands"),xi=f(),$t=i("h3"),Sd=o("docker run"),Si=f(),jt=i("p"),Ud=o("Runs your images as isolated containers."),Ui=f(),Xt=i("p"),ps=i("code"),Yd=o("docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]"),Yi=f(),zt=i("p"),h=i("em"),Gd=o("note: "),ds=i("code"),Kd=o("docker run"),Vd=o("\u2019s "),us=i("code"),Wd=o("[OPTIONS]"),Fd=o(" are specified "),Es=i("strong"),Bd=o("before"),qd=o(" the image name, whilst arguments ("),vs=i("code"),$d=o("[ARG...]"),jd=o(") for the command to be executed within the container is "),ms=i("strong"),Xd=o("AFTER"),zd=o(" the image name and command."),Gi=f(),Qt=i("p"),Qd=o("Common options to specify:"),Ki=f(),_=i("ul"),hs=i("li"),ks=i("code"),Jd=o("-p"),Zd=f(),_s=i("li"),Ds=i("code"),gd=o("-d"),eu=f(),ws=i("li"),bs=i("code"),tu=o("-i"),lu=f(),ys=i("li"),Os=i("code"),ou=o("-t"),su=f(),Cs=i("li"),Ps=i("code"),au=o("--name"),Vi=f(),Jt=i("h3"),iu=o("docker build"),Wi=f(),Zt=i("h3"),ru=o("docker logs"),Fi=f(),gt=i("h3"),nu=o("docker image"),Bi=f(),el=i("h3"),cu=o("docker container"),qi=f(),tl=i("h3"),fu=o("docker network"),$i=f(),ll=i("h3"),pu=o("docker volume"),ji=f(),ol=i("h3"),du=o("docker inspect"),Xi=f(),sl=i("h3"),uu=o("docker ps"),zi=f(),al=i("h2"),Eu=o("networking"),Qi=f(),il=i("h2"),vu=o("disks"),this.h()},l(e){q=r(e,"H1",{});var a=n(q);vr=s(a,Bm),a.forEach(t),Ns=p(e),Be=r(e,"P",{});var bu=n(Be);mr=s(bu,"Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),bu.forEach(t),Hs=p(e),qe=r(e,"P",{});var yu=n(qe);hr=s(yu,`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),yu.forEach(t),As=p(e),$e=r(e,"H2",{});var Ou=n($e);kr=s(Ou,"key concepts"),Ou.forEach(t),Ms=p(e),je=r(e,"H3",{});var Cu=n(je);_r=s(Cu,"Docker images"),Cu.forEach(t),xs=p(e),Xe=r(e,"P",{});var Pu=n(Xe);Dr=s(Pu,`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),Pu.forEach(t),Ss=p(e),ze=r(e,"P",{});var Ru=n(ze);wr=s(Ru,"Images are often build on top of one another"),Ru.forEach(t),Us=p(e),$=r(e,"UL",{});var Ji=n($);P=r(Ji,"LI",{});var fe=n(P);br=s(fe,"e.g. you start with "),Dl=r(fe,"CODE",{});var Iu=n(Dl);yr=s(Iu,"ubuntu"),Iu.forEach(t),Or=s(fe," image, install "),wl=r(fe,"CODE",{});var Tu=n(wl);Cr=s(Tu,"python"),Tu.forEach(t),Pr=s(fe," in that ubuntu image, install "),bl=r(fe,"CODE",{});var Lu=n(bl);Rr=s(Lu,"pytorch"),Lu.forEach(t),Ir=s(fe," package, install pretrained models."),fe.forEach(t),Tr=p(Ji),Ee=r(Ji,"LI",{});var Zi=n(Ee);Lr=s(Zi,"or you can start with a published "),yl=r(Zi,"CODE",{});var Nu=n(yl);Nr=s(Nu,"python"),Nu.forEach(t),Hr=s(Zi," image, and install your packages there."),Zi.forEach(t),Ji.forEach(t),Ys=p(e),Qe=r(e,"P",{});var Hu=n(Qe);Ar=s(Hu,"Published images are available for download in Docker registries."),Hu.forEach(t),Gs=p(e),Je=r(e,"H4",{});var Au=n(Je);Mr=s(Au,"Dockerfile"),Au.forEach(t),Ks=p(e),ve=r(e,"P",{});var mu=n(ve);Ol=r(mu,"CODE",{});var Mu=n(Ol);xr=s(Mu,"Dockerfile"),Mu.forEach(t),Sr=s(mu,"s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),mu.forEach(t),Vs=p(e),Ze=r(e,"H3",{});var xu=n(Ze);Ur=s(xu,"Docker containers"),xu.forEach(t),Ws=p(e),j=r(e,"P",{});var gi=n(j);Yr=s(gi,`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),Cl=r(gi,"CODE",{});var Su=n(Cl);Gr=s(Su,"nodejs"),Su.forEach(t),Kr=s(gi," image, but one exposes port 8888 and another exposes port 8899."),gi.forEach(t),Fs=p(e),ge=r(e,"H3",{});var Uu=n(ge);Vr=s(Uu,"Docker registries"),Uu.forEach(t),Bs=p(e),et=r(e,"P",{});var Yu=n(et);Wr=s(Yu,"Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),Yu.forEach(t),qs=p(e),tt=r(e,"H3",{});var Gu=n(tt);Fr=s(Gu,"Docker daemon"),Gu.forEach(t),$s=p(e),X=r(e,"P",{});var er=n(X);Br=s(er,"This is the underlying "),Pl=r(er,"CODE",{});var Ku=n(Pl);qr=s(Ku,"dockerd"),Ku.forEach(t),$r=s(er," process that helps you build images and run containers. It will listen for Docker API requests"),er.forEach(t),js=p(e),lt=r(e,"H3",{});var Vu=n(lt);jr=s(Vu,"Docker client"),Vu.forEach(t),Xs=p(e),D=r(e,"P",{});var pe=n(D);Xr=s(pe,"The docker client "),Rl=r(pe,"CODE",{});var Wu=n(Rl);zr=s(Wu,"docker"),Wu.forEach(t),Qr=s(pe," is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),Il=r(pe,"CODE",{});var Fu=n(Il);Jr=s(Fu,"docker"),Fu.forEach(t),Zr=s(pe," command sends Docker API requests to "),Tl=r(pe,"CODE",{});var Bu=n(Tl);gr=s(Bu,"dockerd"),Bu.forEach(t),en=s(pe,"."),pe.forEach(t),zs=p(e),ot=r(e,"H3",{});var qu=n(ot);tn=s(qu,"Docker compose"),qu.forEach(t),Qs=p(e),z=r(e,"P",{});var tr=n(z);ln=s(tr,"Docker compose is a tool that helps with running "),Ll=r(tr,"EM",{});var $u=n(Ll);on=s($u,"multi-container"),$u.forEach(t),sn=s(tr," Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),tr.forEach(t),Js=p(e),st=r(e,"P",{});var ju=n(st);an=s(ju,"For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),ju.forEach(t),Zs=p(e),at=r(e,"H4",{});var Xu=n(at);rn=s(Xu,"Difference between Kubernetes"),Xu.forEach(t),gs=p(e),Q=r(e,"P",{});var lr=n(Q);nn=s(lr,"Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),Nl=r(lr,"EM",{});var zu=n(Nl);cn=s(zu,"single-node"),zu.forEach(t),fn=s(lr,", whereas Kubernetes is a full multi-node container manager."),lr.forEach(t),ea=p(e),it=r(e,"P",{});var Qu=n(it);pn=s(Qu,"Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),Qu.forEach(t),ta=p(e),rt=r(e,"H2",{});var Ju=n(rt);dn=s(Ju,"Dockerfile"),Ju.forEach(t),la=p(e),nt=r(e,"H3",{});var Zu=n(nt);un=s(Zu,"Commands"),Zu.forEach(t),oa=p(e),ct=r(e,"H4",{});var gu=n(ct);En=s(gu,"FROM"),gu.forEach(t),sa=p(e),J=r(e,"P",{});var or=n(J);vn=s(or,"All dockerfile starts with the "),Hl=r(or,"CODE",{});var eE=n(Hl);mn=s(eE,"FROM"),eE.forEach(t),hn=s(or," command. It pulls the base image from Dockerhub to start to build your image."),or.forEach(t),aa=p(e),me=r(e,"PRE",{class:!0});var p1=n(me);p1.forEach(t),ia=p(e),ft=r(e,"H4",{});var tE=n(ft);kn=s(tE,"RUN"),tE.forEach(t),ra=p(e),pt=r(e,"P",{});var lE=n(pt);_n=s(lE,"Runs a command or executable. It has two forms"),lE.forEach(t),na=p(e),he=r(e,"PRE",{class:!0});var d1=n(he);d1.forEach(t),ca=p(e),dt=r(e,"H4",{});var oE=n(dt);Dn=s(oE,"CMD"),oE.forEach(t),fa=p(e),ut=r(e,"P",{});var sE=n(ut);wn=s(sE,"Provides defaults for an executing container. The arguments will be appended to ENTRYPOINT."),sE.forEach(t),pa=p(e),ke=r(e,"PRE",{class:!0});var u1=n(ke);u1.forEach(t),da=p(e),Et=r(e,"H4",{});var aE=n(Et);bn=s(aE,"ENTRYPOINT"),aE.forEach(t),ua=p(e),vt=r(e,"P",{});var iE=n(vt);yn=s(iE,`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),iE.forEach(t),Ea=p(e),_e=r(e,"PRE",{class:!0});var E1=n(_e);E1.forEach(t),va=p(e),mt=r(e,"H4",{});var rE=n(mt);On=s(rE,"COPY"),rE.forEach(t),ma=p(e),ht=r(e,"P",{});var nE=n(ht);Cn=s(nE,"Copies file from your native host into the container image."),nE.forEach(t),ha=p(e),De=r(e,"PRE",{class:!0});var v1=n(De);v1.forEach(t),ka=p(e),L=r(e,"P",{});var rl=n(L);Pn=s(rl,"Multiple "),Al=r(rl,"CODE",{});var cE=n(Al);Rn=s(cE,"<src>"),cE.forEach(t),In=s(rl," can be specified, and the last argument will be treated as the "),Ml=r(rl,"CODE",{});var fE=n(Ml);Tn=s(fE,"<dest>"),fE.forEach(t),Ln=s(rl,"."),rl.forEach(t),_a=p(e),Z=r(e,"P",{});var sr=n(Z);Nn=s(sr,"All "),xl=r(sr,"CODE",{});var pE=n(xl);Hn=s(pE,"<src>"),pE.forEach(t),An=s(sr," relative paths must be inside context of the build!"),sr.forEach(t),Da=p(e),kt=r(e,"H4",{});var dE=n(kt);Mn=s(dE,"ADD"),dE.forEach(t),wa=p(e),_t=r(e,"P",{});var uE=n(_t);xn=s(uE,"Copies file from your native host into the container image."),uE.forEach(t),ba=p(e),we=r(e,"PRE",{class:!0});var m1=n(we);m1.forEach(t),ya=p(e),g=r(e,"P",{});var ar=n(g);Sn=s(ar,"Compared to COPY, "),Sl=r(ar,"CODE",{});var EE=n(Sl);Un=s(EE,"ADD"),EE.forEach(t),Yn=s(ar," has added utilities like:"),ar.forEach(t),Oa=p(e),N=r(e,"UL",{});var nl=n(N);Ul=r(nl,"LI",{});var vE=n(Ul);Gn=s(vE,"being able to download files from URLs then copying them into the image"),vE.forEach(t),Kn=p(nl),be=r(nl,"LI",{});var ir=n(be);Vn=s(ir,"extracting contents of "),Yl=r(ir,"CODE",{});var mE=n(Yl);Wn=s(mE,".tar"),mE.forEach(t),Fn=s(ir," files before copying into image"),ir.forEach(t),Bn=p(nl),Gl=r(nl,"LI",{});var hE=n(Gl);qn=s(hE,"adding contents from a git repo"),hE.forEach(t),nl.forEach(t),Ca=p(e),ye=r(e,"P",{});var hu=n(ye);Kl=r(hu,"STRONG",{});var kE=n(Kl);$n=s(kE,"tip: use COPY as default, unless you need the additional features of ADD."),kE.forEach(t),jn=s(hu," This is to prevent unwanted side effects!"),hu.forEach(t),Pa=p(e),H=r(e,"P",{});var cl=n(H);Xn=s(cl,"Multiple "),Vl=r(cl,"CODE",{});var _E=n(Vl);zn=s(_E,"<src>"),_E.forEach(t),Qn=s(cl," can be specified, and the last argument will be treated as the "),Wl=r(cl,"CODE",{});var DE=n(Wl);Jn=s(DE,"<dest>"),DE.forEach(t),Zn=s(cl,"."),cl.forEach(t),Ra=p(e),ee=r(e,"P",{});var rr=n(ee);gn=s(rr,"All "),Fl=r(rr,"CODE",{});var wE=n(Fl);ec=s(wE,"<src>"),wE.forEach(t),tc=s(rr," relative paths must be inside context of the build!"),rr.forEach(t),Ia=p(e),Dt=r(e,"H4",{});var bE=n(Dt);lc=s(bE,"ENV"),bE.forEach(t),Ta=p(e),wt=r(e,"P",{});var yE=n(wt);oc=s(yE,"Sets an environment variable"),yE.forEach(t),La=p(e),Oe=r(e,"PRE",{class:!0});var h1=n(Oe);h1.forEach(t),Na=p(e),bt=r(e,"H4",{});var OE=n(bt);sc=s(OE,"EXPOSE"),OE.forEach(t),Ha=p(e),yt=r(e,"P",{});var CE=n(yt);ac=s(CE,"Instructs Docker that container should listen on specified network ports at runtime."),CE.forEach(t),Aa=p(e),Ce=r(e,"PRE",{class:!0});var k1=n(Ce);k1.forEach(t),Ma=p(e),R=r(e,"P",{});var Ve=n(R);Bl=r(Ve,"STRONG",{});var PE=n(Bl);ic=s(PE,"Ports are not automatically published"),PE.forEach(t),rc=s(Ve,`, and this command is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),ql=r(Ve,"CODE",{});var RE=n(ql);nc=s(RE,"-P"),RE.forEach(t),cc=s(Ve," flag (which maps exposed ports in container to random ports in native host machine), or "),$l=r(Ve,"CODE",{});var IE=n($l);fc=s(IE,"-p"),IE.forEach(t),pc=s(Ve," to explicitly map ports from containers to your localhost."),Ve.forEach(t),xa=p(e),Ot=r(e,"H4",{});var TE=n(Ot);dc=s(TE,"VOLUME"),TE.forEach(t),Sa=p(e),Ct=r(e,"P",{});var LE=n(Ct);uc=s(LE,`Marks the directory(s) within the container as an external drive from native host or other containers.
This allows files to be accessed from outside the containers.`),LE.forEach(t),Ua=p(e),Pe=r(e,"PRE",{class:!0});var _1=n(Pe);_1.forEach(t),Ya=p(e),te=r(e,"P",{});var nr=n(te);Ec=s(nr,"Note that where this (container) directory maps to in your native host is "),jl=r(nr,"STRONG",{});var NE=n(jl);vc=s(NE,"specified when you build or run the container"),NE.forEach(t),mc=s(nr,"."),nr.forEach(t),Ga=p(e),Pt=r(e,"H4",{});var HE=n(Pt);hc=s(HE,"WORKDIR"),HE.forEach(t),Ka=p(e),v=r(e,"P",{});var y=n(v);kc=s(y,"Sets working directory for any "),Xl=r(y,"CODE",{});var AE=n(Xl);_c=s(AE,"RUN"),AE.forEach(t),Dc=s(y,", "),zl=r(y,"CODE",{});var ME=n(zl);wc=s(ME,"CMD"),ME.forEach(t),bc=s(y,", "),Ql=r(y,"CODE",{});var xE=n(Ql);yc=s(xE,"ENTRYPOINT"),xE.forEach(t),Oc=s(y,", "),Jl=r(y,"CODE",{});var SE=n(Jl);Cc=s(SE,"COPY"),SE.forEach(t),Pc=s(y,", "),Zl=r(y,"CODE",{});var UE=n(Zl);Rc=s(UE,"ADD"),UE.forEach(t),Ic=s(y," instructions that follows."),y.forEach(t),Va=p(e),Re=r(e,"PRE",{class:!0});var D1=n(Re);D1.forEach(t),Wa=p(e),le=r(e,"P",{});var cr=n(le);Tc=s(cr,"Multiple "),gl=r(cr,"CODE",{});var YE=n(gl);Lc=s(YE,"WORKDIR"),YE.forEach(t),Nc=s(cr," can be used in a dockerfile."),cr.forEach(t),Fa=p(e),A=r(e,"P",{});var fl=n(A);Hc=s(fl,"If not specified, default directory is "),eo=r(fl,"CODE",{});var GE=n(eo);Ac=s(GE,"/"),GE.forEach(t),Mc=s(fl,`.
But if you are pulling from an image, chances are `),to=r(fl,"CODE",{});var KE=n(to);xc=s(KE,"WORKDIR"),KE.forEach(t),Sc=s(fl," already been set in your base image and it will be brought over."),fl.forEach(t),Ba=p(e),Rt=r(e,"P",{});var VE=n(Rt);Ie=r(VE,"STRONG",{});var fr=n(Ie);Uc=s(fr,"tip: explicitly set "),lo=r(fr,"CODE",{});var WE=n(lo);Yc=s(WE,"WORKDIR"),WE.forEach(t),Gc=s(fr," to prevent unintended operations in unknown dirs"),fr.forEach(t),VE.forEach(t),qa=p(e),M=r(e,"P",{});var pl=n(M);Kc=s(pl,"It is also possible to resolve env variables previously set by "),oo=r(pl,"CODE",{});var FE=n(oo);Vc=s(FE,"ENV"),FE.forEach(t),Wc=s(pl,", e.g. "),so=r(pl,"CODE",{});var BE=n(so);Fc=s(BE,"WORKDIR $DIRPATH_ENV_VAR"),BE.forEach(t),Bc=s(pl,"."),pl.forEach(t),$a=p(e),It=r(e,"H4",{});var qE=n(It);qc=s(qE,"ARG"),qE.forEach(t),ja=p(e),x=r(e,"P",{});var dl=n(x);$c=s(dl,"Defines a variable that users can pass values into during "),ao=r(dl,"CODE",{});var $E=n(ao);jc=s($E,"docker build"),$E.forEach(t),Xc=s(dl," by using "),io=r(dl,"CODE",{});var jE=n(io);zc=s(jE,"--build-arg <argname>=<value>"),jE.forEach(t),Qc=s(dl," flag."),dl.forEach(t),Xa=p(e),Te=r(e,"PRE",{class:!0});var w1=n(Te);w1.forEach(t),za=p(e),I=r(e,"P",{});var We=n(I);ro=r(We,"CODE",{});var XE=n(ro);Jc=s(XE,"ENV"),XE.forEach(t),Zc=s(We," variables will overwrite "),no=r(We,"CODE",{});var zE=n(no);gc=s(zE,"ARG"),zE.forEach(t),ef=s(We," variables if they are the same name (at the point where the "),co=r(We,"CODE",{});var QE=n(co);tf=s(QE,"ENV"),QE.forEach(t),lf=s(We," variable is defined)."),We.forEach(t),Qa=p(e),Tt=r(e,"H4",{});var JE=n(Tt);of=s(JE,"ONBUILD"),JE.forEach(t),Ja=p(e),Lt=r(e,"P",{});var ZE=n(Lt);sf=s(ZE,"Adds a trigger to the image that will execute dockerfile instructions when the current image is used as the base for another build."),ZE.forEach(t),Za=p(e),Le=r(e,"PRE",{class:!0});var b1=n(Le);b1.forEach(t),ga=p(e),Nt=r(e,"P",{});var gE=n(Nt);af=s(gE,"This command is usful when when you are building a base image that will be distributed to other people, and instructions that depend on other people\u2019s files needs to be run. Example, you could add:"),gE.forEach(t),ei=p(e),Ne=r(e,"PRE",{class:!0});var y1=n(Ne);y1.forEach(t),ti=p(e),S=r(e,"P",{});var ul=n(S);rf=s(ul,"The instructions specified are triggered "),fo=r(ul,"EM",{});var ev=n(fo);nf=s(ev,"immediately"),ev.forEach(t),cf=s(ul," after the "),po=r(ul,"CODE",{});var tv=n(po);ff=s(tv,"FROM"),tv.forEach(t),pf=s(ul," instruction in the child image."),ul.forEach(t),li=p(e),He=r(e,"P",{});var ku=n(He);uo=r(ku,"CODE",{});var lv=n(uo);df=s(lv,"ONBUILD"),lv.forEach(t),uf=s(ku," triggers are not inherited by children images."),ku.forEach(t),oi=p(e),Ht=r(e,"H4",{});var ov=n(Ht);Ef=s(ov,"STOPSIGNAL"),ov.forEach(t),si=p(e),At=r(e,"P",{});var sv=n(At);vf=s(sv,"Sets the system call signal that will cause the container to exit."),sv.forEach(t),ai=p(e),Ae=r(e,"PRE",{class:!0});var O1=n(Ae);O1.forEach(t),ii=p(e),U=r(e,"UL",{});var El=n(U);Mt=r(El,"LI",{});var _u=n(Mt);mf=s(_u,"Default is "),Eo=r(_u,"CODE",{});var av=n(Eo);hf=s(av,"SIGTERM"),av.forEach(t),_u.forEach(t),kf=p(El),B=r(El,"LI",{});var vl=n(B);_f=s(vl,"Can be in "),vo=r(vl,"CODE",{});var iv=n(vo);Df=s(iv,"SIG<NAME>"),iv.forEach(t),wf=s(vl," format (e.g. "),mo=r(vl,"CODE",{});var rv=n(mo);bf=s(rv,"SIGKILL"),rv.forEach(t),yf=s(vl,")"),vl.forEach(t),Of=p(El),Me=r(El,"LI",{});var pr=n(Me);Cf=s(pr,"Can be an unassigned number in kernel\u2019s syscall table (e.g. "),ho=r(pr,"CODE",{});var nv=n(ho);Pf=s(nv,"9"),nv.forEach(t),Rf=s(pr,")"),pr.forEach(t),El.forEach(t),ri=p(e),xt=r(e,"H4",{});var cv=n(xt);If=s(cv,"HEALTHCHECK"),cv.forEach(t),ni=p(e),St=r(e,"P",{});var fv=n(St);Tf=s(fv,"Specifies a command to be run inside the container to check container\u2019s health."),fv.forEach(t),ci=p(e),xe=r(e,"PRE",{class:!0});var C1=n(xe);C1.forEach(t),fi=p(e),Se=r(e,"P",{});var Du=n(Se);ko=r(Du,"CODE",{});var pv=n(ko);Lf=s(pv,"OPTIONS"),pv.forEach(t),Nf=s(Du," include:"),Du.forEach(t),pi=p(e),w=r(e,"UL",{});var de=n(w);oe=r(de,"LI",{});var Rs=n(oe);_o=r(Rs,"CODE",{});var dv=n(_o);Hf=s(dv,"--interval=DURATION"),dv.forEach(t),Af=s(Rs," (default "),Do=r(Rs,"CODE",{});var uv=n(Do);Mf=s(uv,"30s"),uv.forEach(t),xf=s(Rs,")"),Rs.forEach(t),Sf=p(de),se=r(de,"LI",{});var Is=n(se);wo=r(Is,"CODE",{});var Ev=n(wo);Uf=s(Ev,"--timeout=DURATION"),Ev.forEach(t),Yf=s(Is," (default "),bo=r(Is,"CODE",{});var vv=n(bo);Gf=s(vv,"30s"),vv.forEach(t),Kf=s(Is,")"),Is.forEach(t),Vf=p(de),ae=r(de,"LI",{});var Ts=n(ae);yo=r(Ts,"CODE",{});var mv=n(yo);Wf=s(mv,"--retries=N"),mv.forEach(t),Ff=s(Ts," (default "),Oo=r(Ts,"CODE",{});var hv=n(Oo);Bf=s(hv,"3"),hv.forEach(t),qf=s(Ts,")"),Ts.forEach(t),$f=p(de),ie=r(de,"LI",{});var Ls=n(ie);Co=r(Ls,"CODE",{});var kv=n(Co);jf=s(kv,"--start-period=DURATION"),kv.forEach(t),Xf=s(Ls," (default "),Po=r(Ls,"CODE",{});var _v=n(Po);zf=s(_v,"0s"),_v.forEach(t),Qf=s(Ls,")"),Ls.forEach(t),de.forEach(t),di=p(e),m=r(e,"P",{});var O=n(m);Jf=s(O,"A container that has "),Ro=r(O,"CODE",{});var Dv=n(Ro);Zf=s(Dv,"HEALTHCHECK"),Dv.forEach(t),gf=s(O," specified will have a "),Io=r(O,"EM",{});var wv=n(Io);ep=s(wv,"health status"),wv.forEach(t),tp=s(O," that can take 3 possible states: "),To=r(O,"CODE",{});var bv=n(To);lp=s(bv,"starting"),bv.forEach(t),op=s(O," | "),Lo=r(O,"CODE",{});var yv=n(Lo);sp=s(yv,"healthy"),yv.forEach(t),ap=s(O," | "),No=r(O,"CODE",{});var Ov=n(No);ip=s(Ov,"unhealthy"),Ov.forEach(t),rp=s(O,"."),O.forEach(t),ui=p(e),Y=r(e,"P",{});var ml=n(Y);np=s(ml,"Whenever a health check passes, health status changes to "),Ho=r(ml,"CODE",{});var Cv=n(Ho);cp=s(Cv,"healthy"),Cv.forEach(t),fp=s(ml,". After a number of consecutive failures, health status changes to "),Ao=r(ml,"CODE",{});var Pv=n(Ao);pp=s(Pv,"unhealthy"),Pv.forEach(t),dp=s(ml,"."),ml.forEach(t),Ei=p(e),G=r(e,"P",{});var hl=n(G);up=s(hl,`Health checks are run after every interval.
Health checks are considered failed when commands runs for longer than timeout.
When consecutive failures reaches max retries, or command exits with non zero status code `),Mo=r(hl,"CODE",{});var Rv=n(Mo);Ep=s(Rv,"0"),Rv.forEach(t),vp=s(hl,", "),xo=r(hl,"EM",{});var Iv=n(xo);mp=s(Iv,"health status"),Iv.forEach(t),hp=s(hl," will change to unhealthy."),hl.forEach(t),vi=p(e),Ut=r(e,"H4",{});var Tv=n(Ut);kp=s(Tv,"SHELL"),Tv.forEach(t),mi=p(e),K=r(e,"P",{});var kl=n(K);_p=s(kl,"Specifies the default shell used for shell form of commands. Default is set to "),So=r(kl,"CODE",{});var Lv=n(So);Dp=s(Lv,'["/bin/sh", "-c"]'),Lv.forEach(t),wp=s(kl," for Linux containers and "),Uo=r(kl,"CODE",{});var Nv=n(Uo);bp=s(Nv,'["cmd", "/S", "/C"]'),Nv.forEach(t),yp=s(kl," for Windows containers."),kl.forEach(t),hi=p(e),Ue=r(e,"PRE",{class:!0});var P1=n(Ue);P1.forEach(t),ki=p(e),Yt=r(e,"H4",{});var Hv=n(Yt);Op=s(Hv,"USER"),Hv.forEach(t),_i=p(e),Gt=r(e,"P",{});var Av=n(Gt);Cp=s(Av,"Sets the username/UID to use for the remainder of the Docker build stage."),Av.forEach(t),Di=p(e),Ye=r(e,"PRE",{class:!0});var R1=n(Ye);R1.forEach(t),wi=p(e),Kt=r(e,"P",{});var Mv=n(Kt);Pp=s(Mv,`This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),Mv.forEach(t),bi=p(e),Vt=r(e,"H4",{});var xv=n(Vt);Rp=s(xv,"LABEL"),xv.forEach(t),yi=p(e),re=r(e,"P",{});var dr=n(re);Ip=s(dr,"Adds metadata to an image and are inherited by child images. You can view an image\u2019s labels using "),Yo=r(dr,"CODE",{});var Sv=n(Yo);Tp=s(Sv,"docker image inspect"),Sv.forEach(t),Lp=s(dr,"."),dr.forEach(t),Oi=p(e),Ge=r(e,"PRE",{class:!0});var I1=n(Ge);I1.forEach(t),Ci=p(e),Wt=r(e,"H3",{});var Uv=n(Wt);Np=s(Uv,"Environment Replacement"),Uv.forEach(t),Pi=p(e),ne=r(e,"P",{});var ur=n(ne);Hp=s(ur,"Some Dockerfile instructions are able to read environment variables created by "),Go=r(ur,"CODE",{});var Yv=n(Go);Ap=s(Yv,"ENV"),Yv.forEach(t),Mp=s(ur," commands, and replace them with the values that those environment variables hold."),ur.forEach(t),Ri=p(e),V=r(e,"P",{});var _l=n(V);xp=s(_l,"The syntax is "),Ko=r(_l,"CODE",{});var Gv=n(Ko);Sp=s(Gv,"$variable_name"),Gv.forEach(t),Up=s(_l," or "),Vo=r(_l,"CODE",{});var Kv=n(Vo);Yp=s(Kv,"${variable_name}"),Kv.forEach(t),Gp=s(_l," within a Dockerfile."),_l.forEach(t),Ii=p(e),ce=r(e,"UL",{});var Er=n(ce);W=r(Er,"LI",{});var Fe=n(W);Wo=r(Fe,"CODE",{});var Vv=n(Wo);Kp=s(Vv,"${variable:-word}"),Vv.forEach(t),Vp=s(Fe," to set "),Fo=r(Fe,"CODE",{});var Wv=n(Fo);Wp=s(Wv,"word"),Wv.forEach(t),Fp=s(Fe," as default value when "),Bo=r(Fe,"CODE",{});var Fv=n(Bo);Bp=s(Fv,"variable"),Fv.forEach(t),qp=s(Fe," is not set"),Fe.forEach(t),$p=p(Er),k=r(Er,"LI",{});var T=n(k);qo=r(T,"CODE",{});var Bv=n(qo);jp=s(Bv,"${variable:+word}"),Bv.forEach(t),Xp=s(T," to set "),$o=r(T,"CODE",{});var qv=n($o);zp=s(qv,"word"),qv.forEach(t),Qp=s(T," as "),jo=r(T,"CODE",{});var $v=n(jo);Jp=s($v,"variable"),$v.forEach(t),Zp=s(T," when "),Xo=r(T,"CODE",{});var jv=n(Xo);gp=s(jv,"variable"),jv.forEach(t),ed=s(T," has already been set, otherwise "),zo=r(T,"CODE",{});var Xv=n(zo);td=s(Xv,"variable"),Xv.forEach(t),ld=s(T," will be empty string."),T.forEach(t),Er.forEach(t),Ti=p(e),d=r(e,"P",{});var u=n(d);od=s(u,"Dockerfile instructions that support environment variables are: "),Qo=r(u,"CODE",{});var zv=n(Qo);sd=s(zv,"ADD"),zv.forEach(t),ad=s(u,", "),Jo=r(u,"CODE",{});var Qv=n(Jo);id=s(Qv,"COPY"),Qv.forEach(t),rd=s(u,", "),Zo=r(u,"CODE",{});var Jv=n(Zo);nd=s(Jv,"ENV"),Jv.forEach(t),cd=s(u,", "),go=r(u,"CODE",{});var Zv=n(go);fd=s(Zv,"EXPOSE"),Zv.forEach(t),pd=s(u,", "),es=r(u,"CODE",{});var gv=n(es);dd=s(gv,"FROM"),gv.forEach(t),ud=s(u,", "),ts=r(u,"CODE",{});var em=n(ts);Ed=s(em,"LABEL"),em.forEach(t),vd=s(u,", "),ls=r(u,"CODE",{});var tm=n(ls);md=s(tm,"STOPSIGNAL"),tm.forEach(t),hd=s(u,", "),os=r(u,"CODE",{});var lm=n(os);kd=s(lm,"USER"),lm.forEach(t),_d=s(u,", "),ss=r(u,"CODE",{});var om=n(ss);Dd=s(om,"VOLUME"),om.forEach(t),wd=s(u,", "),as=r(u,"CODE",{});var sm=n(as);bd=s(sm,"WORKDIR"),sm.forEach(t),yd=s(u,", "),is=r(u,"CODE",{});var am=n(is);Od=s(am,"ONBUILD"),am.forEach(t),Cd=s(u,"."),u.forEach(t),Li=p(e),Ke=r(e,"PRE",{class:!0});var T1=n(Ke);T1.forEach(t),Ni=p(e),Ft=r(e,"H3",{});var im=n(Ft);rs=r(im,"CODE",{});var rm=n(rs);Pd=s(rm,".dockerignore"),rm.forEach(t),im.forEach(t),Hi=p(e),b=r(e,"P",{});var ue=n(b);Rd=s(ue,"Similar to "),ns=r(ue,"CODE",{});var nm=n(ns);Id=s(nm,".gitignore"),nm.forEach(t),Td=s(ue,", this file contains a list of files and directories that docker should "),cs=r(ue,"STRONG",{});var cm=n(cs);Ld=s(cm,"exclude"),cm.forEach(t),Nd=s(ue," from the "),fs=r(ue,"EM",{});var fm=n(fs);Hd=s(fm,"context"),fm.forEach(t),Ad=s(ue," of a docker build."),ue.forEach(t),Ai=p(e),Bt=r(e,"P",{});var pm=n(Bt);Md=s(pm,"This is useful for preventing sending of large or sensitive files to docker daemon."),pm.forEach(t),Mi=p(e),qt=r(e,"H2",{});var dm=n(qt);xd=s(dm,"useful docker CLI commands"),dm.forEach(t),xi=p(e),$t=r(e,"H3",{});var um=n($t);Sd=s(um,"docker run"),um.forEach(t),Si=p(e),jt=r(e,"P",{});var Em=n(jt);Ud=s(Em,"Runs your images as isolated containers."),Em.forEach(t),Ui=p(e),Xt=r(e,"P",{});var vm=n(Xt);ps=r(vm,"CODE",{});var mm=n(ps);Yd=s(mm,"docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]"),mm.forEach(t),vm.forEach(t),Yi=p(e),zt=r(e,"P",{});var hm=n(zt);h=r(hm,"EM",{});var C=n(h);Gd=s(C,"note: "),ds=r(C,"CODE",{});var km=n(ds);Kd=s(km,"docker run"),km.forEach(t),Vd=s(C,"\u2019s "),us=r(C,"CODE",{});var _m=n(us);Wd=s(_m,"[OPTIONS]"),_m.forEach(t),Fd=s(C," are specified "),Es=r(C,"STRONG",{});var Dm=n(Es);Bd=s(Dm,"before"),Dm.forEach(t),qd=s(C," the image name, whilst arguments ("),vs=r(C,"CODE",{});var wm=n(vs);$d=s(wm,"[ARG...]"),wm.forEach(t),jd=s(C,") for the command to be executed within the container is "),ms=r(C,"STRONG",{});var bm=n(ms);Xd=s(bm,"AFTER"),bm.forEach(t),zd=s(C," the image name and command."),C.forEach(t),hm.forEach(t),Gi=p(e),Qt=r(e,"P",{});var ym=n(Qt);Qd=s(ym,"Common options to specify:"),ym.forEach(t),Ki=p(e),_=r(e,"UL",{});var F=n(_);hs=r(F,"LI",{});var Om=n(hs);ks=r(Om,"CODE",{});var Cm=n(ks);Jd=s(Cm,"-p"),Cm.forEach(t),Om.forEach(t),Zd=p(F),_s=r(F,"LI",{});var Pm=n(_s);Ds=r(Pm,"CODE",{});var Rm=n(Ds);gd=s(Rm,"-d"),Rm.forEach(t),Pm.forEach(t),eu=p(F),ws=r(F,"LI",{});var Im=n(ws);bs=r(Im,"CODE",{});var Tm=n(bs);tu=s(Tm,"-i"),Tm.forEach(t),Im.forEach(t),lu=p(F),ys=r(F,"LI",{});var Lm=n(ys);Os=r(Lm,"CODE",{});var Nm=n(Os);ou=s(Nm,"-t"),Nm.forEach(t),Lm.forEach(t),su=p(F),Cs=r(F,"LI",{});var Hm=n(Cs);Ps=r(Hm,"CODE",{});var Am=n(Ps);au=s(Am,"--name"),Am.forEach(t),Hm.forEach(t),F.forEach(t),Vi=p(e),Jt=r(e,"H3",{});var Mm=n(Jt);iu=s(Mm,"docker build"),Mm.forEach(t),Wi=p(e),Zt=r(e,"H3",{});var xm=n(Zt);ru=s(xm,"docker logs"),xm.forEach(t),Fi=p(e),gt=r(e,"H3",{});var Sm=n(gt);nu=s(Sm,"docker image"),Sm.forEach(t),Bi=p(e),el=r(e,"H3",{});var Um=n(el);cu=s(Um,"docker container"),Um.forEach(t),qi=p(e),tl=r(e,"H3",{});var Ym=n(tl);fu=s(Ym,"docker network"),Ym.forEach(t),$i=p(e),ll=r(e,"H3",{});var Gm=n(ll);pu=s(Gm,"docker volume"),Gm.forEach(t),ji=p(e),ol=r(e,"H3",{});var Km=n(ol);du=s(Km,"docker inspect"),Km.forEach(t),Xi=p(e),sl=r(e,"H3",{});var Vm=n(sl);uu=s(Vm,"docker ps"),Vm.forEach(t),zi=p(e),al=r(e,"H2",{});var Wm=n(al);Eu=s(Wm,"networking"),Wm.forEach(t),Qi=p(e),il=r(e,"H2",{});var Fm=n(il);vu=s(Fm,"disks"),Fm.forEach(t),this.h()},h(){E(me,"class","language-dockerfile"),E(he,"class","language-dockerfile"),E(ke,"class","language-dockerfile"),E(_e,"class","language-dockerfile"),E(De,"class","language-dockerfile"),E(we,"class","language-dockerfile"),E(Oe,"class","language-dockerfile"),E(Ce,"class","language-dockerfile"),E(Pe,"class","language-dockerfile"),E(Re,"class","language-dockerfile"),E(Te,"class","language-dockerfile"),E(Le,"class","language-dockerfile"),E(Ne,"class","language-dockerfile"),E(Ae,"class","language-dockerfile"),E(xe,"class","language-dockerfile"),E(Ue,"class","language-dockerfile"),E(Ye,"class","language-dockerfile"),E(Ge,"class","language-dockerfile"),E(Ke,"class","language-dockerfile")},m(e,a){c(e,q,a),l(q,vr),c(e,Ns,a),c(e,Be,a),l(Be,mr),c(e,Hs,a),c(e,qe,a),l(qe,hr),c(e,As,a),c(e,$e,a),l($e,kr),c(e,Ms,a),c(e,je,a),l(je,_r),c(e,xs,a),c(e,Xe,a),l(Xe,Dr),c(e,Ss,a),c(e,ze,a),l(ze,wr),c(e,Us,a),c(e,$,a),l($,P),l(P,br),l(P,Dl),l(Dl,yr),l(P,Or),l(P,wl),l(wl,Cr),l(P,Pr),l(P,bl),l(bl,Rr),l(P,Ir),l($,Tr),l($,Ee),l(Ee,Lr),l(Ee,yl),l(yl,Nr),l(Ee,Hr),c(e,Ys,a),c(e,Qe,a),l(Qe,Ar),c(e,Gs,a),c(e,Je,a),l(Je,Mr),c(e,Ks,a),c(e,ve,a),l(ve,Ol),l(Ol,xr),l(ve,Sr),c(e,Vs,a),c(e,Ze,a),l(Ze,Ur),c(e,Ws,a),c(e,j,a),l(j,Yr),l(j,Cl),l(Cl,Gr),l(j,Kr),c(e,Fs,a),c(e,ge,a),l(ge,Vr),c(e,Bs,a),c(e,et,a),l(et,Wr),c(e,qs,a),c(e,tt,a),l(tt,Fr),c(e,$s,a),c(e,X,a),l(X,Br),l(X,Pl),l(Pl,qr),l(X,$r),c(e,js,a),c(e,lt,a),l(lt,jr),c(e,Xs,a),c(e,D,a),l(D,Xr),l(D,Rl),l(Rl,zr),l(D,Qr),l(D,Il),l(Il,Jr),l(D,Zr),l(D,Tl),l(Tl,gr),l(D,en),c(e,zs,a),c(e,ot,a),l(ot,tn),c(e,Qs,a),c(e,z,a),l(z,ln),l(z,Ll),l(Ll,on),l(z,sn),c(e,Js,a),c(e,st,a),l(st,an),c(e,Zs,a),c(e,at,a),l(at,rn),c(e,gs,a),c(e,Q,a),l(Q,nn),l(Q,Nl),l(Nl,cn),l(Q,fn),c(e,ea,a),c(e,it,a),l(it,pn),c(e,ta,a),c(e,rt,a),l(rt,dn),c(e,la,a),c(e,nt,a),l(nt,un),c(e,oa,a),c(e,ct,a),l(ct,En),c(e,sa,a),c(e,J,a),l(J,vn),l(J,Hl),l(Hl,mn),l(J,hn),c(e,aa,a),c(e,me,a),me.innerHTML=$m,c(e,ia,a),c(e,ft,a),l(ft,kn),c(e,ra,a),c(e,pt,a),l(pt,_n),c(e,na,a),c(e,he,a),he.innerHTML=jm,c(e,ca,a),c(e,dt,a),l(dt,Dn),c(e,fa,a),c(e,ut,a),l(ut,wn),c(e,pa,a),c(e,ke,a),ke.innerHTML=Xm,c(e,da,a),c(e,Et,a),l(Et,bn),c(e,ua,a),c(e,vt,a),l(vt,yn),c(e,Ea,a),c(e,_e,a),_e.innerHTML=zm,c(e,va,a),c(e,mt,a),l(mt,On),c(e,ma,a),c(e,ht,a),l(ht,Cn),c(e,ha,a),c(e,De,a),De.innerHTML=Qm,c(e,ka,a),c(e,L,a),l(L,Pn),l(L,Al),l(Al,Rn),l(L,In),l(L,Ml),l(Ml,Tn),l(L,Ln),c(e,_a,a),c(e,Z,a),l(Z,Nn),l(Z,xl),l(xl,Hn),l(Z,An),c(e,Da,a),c(e,kt,a),l(kt,Mn),c(e,wa,a),c(e,_t,a),l(_t,xn),c(e,ba,a),c(e,we,a),we.innerHTML=Jm,c(e,ya,a),c(e,g,a),l(g,Sn),l(g,Sl),l(Sl,Un),l(g,Yn),c(e,Oa,a),c(e,N,a),l(N,Ul),l(Ul,Gn),l(N,Kn),l(N,be),l(be,Vn),l(be,Yl),l(Yl,Wn),l(be,Fn),l(N,Bn),l(N,Gl),l(Gl,qn),c(e,Ca,a),c(e,ye,a),l(ye,Kl),l(Kl,$n),l(ye,jn),c(e,Pa,a),c(e,H,a),l(H,Xn),l(H,Vl),l(Vl,zn),l(H,Qn),l(H,Wl),l(Wl,Jn),l(H,Zn),c(e,Ra,a),c(e,ee,a),l(ee,gn),l(ee,Fl),l(Fl,ec),l(ee,tc),c(e,Ia,a),c(e,Dt,a),l(Dt,lc),c(e,Ta,a),c(e,wt,a),l(wt,oc),c(e,La,a),c(e,Oe,a),Oe.innerHTML=Zm,c(e,Na,a),c(e,bt,a),l(bt,sc),c(e,Ha,a),c(e,yt,a),l(yt,ac),c(e,Aa,a),c(e,Ce,a),Ce.innerHTML=gm,c(e,Ma,a),c(e,R,a),l(R,Bl),l(Bl,ic),l(R,rc),l(R,ql),l(ql,nc),l(R,cc),l(R,$l),l($l,fc),l(R,pc),c(e,xa,a),c(e,Ot,a),l(Ot,dc),c(e,Sa,a),c(e,Ct,a),l(Ct,uc),c(e,Ua,a),c(e,Pe,a),Pe.innerHTML=e1,c(e,Ya,a),c(e,te,a),l(te,Ec),l(te,jl),l(jl,vc),l(te,mc),c(e,Ga,a),c(e,Pt,a),l(Pt,hc),c(e,Ka,a),c(e,v,a),l(v,kc),l(v,Xl),l(Xl,_c),l(v,Dc),l(v,zl),l(zl,wc),l(v,bc),l(v,Ql),l(Ql,yc),l(v,Oc),l(v,Jl),l(Jl,Cc),l(v,Pc),l(v,Zl),l(Zl,Rc),l(v,Ic),c(e,Va,a),c(e,Re,a),Re.innerHTML=t1,c(e,Wa,a),c(e,le,a),l(le,Tc),l(le,gl),l(gl,Lc),l(le,Nc),c(e,Fa,a),c(e,A,a),l(A,Hc),l(A,eo),l(eo,Ac),l(A,Mc),l(A,to),l(to,xc),l(A,Sc),c(e,Ba,a),c(e,Rt,a),l(Rt,Ie),l(Ie,Uc),l(Ie,lo),l(lo,Yc),l(Ie,Gc),c(e,qa,a),c(e,M,a),l(M,Kc),l(M,oo),l(oo,Vc),l(M,Wc),l(M,so),l(so,Fc),l(M,Bc),c(e,$a,a),c(e,It,a),l(It,qc),c(e,ja,a),c(e,x,a),l(x,$c),l(x,ao),l(ao,jc),l(x,Xc),l(x,io),l(io,zc),l(x,Qc),c(e,Xa,a),c(e,Te,a),Te.innerHTML=l1,c(e,za,a),c(e,I,a),l(I,ro),l(ro,Jc),l(I,Zc),l(I,no),l(no,gc),l(I,ef),l(I,co),l(co,tf),l(I,lf),c(e,Qa,a),c(e,Tt,a),l(Tt,of),c(e,Ja,a),c(e,Lt,a),l(Lt,sf),c(e,Za,a),c(e,Le,a),Le.innerHTML=o1,c(e,ga,a),c(e,Nt,a),l(Nt,af),c(e,ei,a),c(e,Ne,a),Ne.innerHTML=s1,c(e,ti,a),c(e,S,a),l(S,rf),l(S,fo),l(fo,nf),l(S,cf),l(S,po),l(po,ff),l(S,pf),c(e,li,a),c(e,He,a),l(He,uo),l(uo,df),l(He,uf),c(e,oi,a),c(e,Ht,a),l(Ht,Ef),c(e,si,a),c(e,At,a),l(At,vf),c(e,ai,a),c(e,Ae,a),Ae.innerHTML=a1,c(e,ii,a),c(e,U,a),l(U,Mt),l(Mt,mf),l(Mt,Eo),l(Eo,hf),l(U,kf),l(U,B),l(B,_f),l(B,vo),l(vo,Df),l(B,wf),l(B,mo),l(mo,bf),l(B,yf),l(U,Of),l(U,Me),l(Me,Cf),l(Me,ho),l(ho,Pf),l(Me,Rf),c(e,ri,a),c(e,xt,a),l(xt,If),c(e,ni,a),c(e,St,a),l(St,Tf),c(e,ci,a),c(e,xe,a),xe.innerHTML=i1,c(e,fi,a),c(e,Se,a),l(Se,ko),l(ko,Lf),l(Se,Nf),c(e,pi,a),c(e,w,a),l(w,oe),l(oe,_o),l(_o,Hf),l(oe,Af),l(oe,Do),l(Do,Mf),l(oe,xf),l(w,Sf),l(w,se),l(se,wo),l(wo,Uf),l(se,Yf),l(se,bo),l(bo,Gf),l(se,Kf),l(w,Vf),l(w,ae),l(ae,yo),l(yo,Wf),l(ae,Ff),l(ae,Oo),l(Oo,Bf),l(ae,qf),l(w,$f),l(w,ie),l(ie,Co),l(Co,jf),l(ie,Xf),l(ie,Po),l(Po,zf),l(ie,Qf),c(e,di,a),c(e,m,a),l(m,Jf),l(m,Ro),l(Ro,Zf),l(m,gf),l(m,Io),l(Io,ep),l(m,tp),l(m,To),l(To,lp),l(m,op),l(m,Lo),l(Lo,sp),l(m,ap),l(m,No),l(No,ip),l(m,rp),c(e,ui,a),c(e,Y,a),l(Y,np),l(Y,Ho),l(Ho,cp),l(Y,fp),l(Y,Ao),l(Ao,pp),l(Y,dp),c(e,Ei,a),c(e,G,a),l(G,up),l(G,Mo),l(Mo,Ep),l(G,vp),l(G,xo),l(xo,mp),l(G,hp),c(e,vi,a),c(e,Ut,a),l(Ut,kp),c(e,mi,a),c(e,K,a),l(K,_p),l(K,So),l(So,Dp),l(K,wp),l(K,Uo),l(Uo,bp),l(K,yp),c(e,hi,a),c(e,Ue,a),Ue.innerHTML=r1,c(e,ki,a),c(e,Yt,a),l(Yt,Op),c(e,_i,a),c(e,Gt,a),l(Gt,Cp),c(e,Di,a),c(e,Ye,a),Ye.innerHTML=n1,c(e,wi,a),c(e,Kt,a),l(Kt,Pp),c(e,bi,a),c(e,Vt,a),l(Vt,Rp),c(e,yi,a),c(e,re,a),l(re,Ip),l(re,Yo),l(Yo,Tp),l(re,Lp),c(e,Oi,a),c(e,Ge,a),Ge.innerHTML=c1,c(e,Ci,a),c(e,Wt,a),l(Wt,Np),c(e,Pi,a),c(e,ne,a),l(ne,Hp),l(ne,Go),l(Go,Ap),l(ne,Mp),c(e,Ri,a),c(e,V,a),l(V,xp),l(V,Ko),l(Ko,Sp),l(V,Up),l(V,Vo),l(Vo,Yp),l(V,Gp),c(e,Ii,a),c(e,ce,a),l(ce,W),l(W,Wo),l(Wo,Kp),l(W,Vp),l(W,Fo),l(Fo,Wp),l(W,Fp),l(W,Bo),l(Bo,Bp),l(W,qp),l(ce,$p),l(ce,k),l(k,qo),l(qo,jp),l(k,Xp),l(k,$o),l($o,zp),l(k,Qp),l(k,jo),l(jo,Jp),l(k,Zp),l(k,Xo),l(Xo,gp),l(k,ed),l(k,zo),l(zo,td),l(k,ld),c(e,Ti,a),c(e,d,a),l(d,od),l(d,Qo),l(Qo,sd),l(d,ad),l(d,Jo),l(Jo,id),l(d,rd),l(d,Zo),l(Zo,nd),l(d,cd),l(d,go),l(go,fd),l(d,pd),l(d,es),l(es,dd),l(d,ud),l(d,ts),l(ts,Ed),l(d,vd),l(d,ls),l(ls,md),l(d,hd),l(d,os),l(os,kd),l(d,_d),l(d,ss),l(ss,Dd),l(d,wd),l(d,as),l(as,bd),l(d,yd),l(d,is),l(is,Od),l(d,Cd),c(e,Li,a),c(e,Ke,a),Ke.innerHTML=f1,c(e,Ni,a),c(e,Ft,a),l(Ft,rs),l(rs,Pd),c(e,Hi,a),c(e,b,a),l(b,Rd),l(b,ns),l(ns,Id),l(b,Td),l(b,cs),l(cs,Ld),l(b,Nd),l(b,fs),l(fs,Hd),l(b,Ad),c(e,Ai,a),c(e,Bt,a),l(Bt,Md),c(e,Mi,a),c(e,qt,a),l(qt,xd),c(e,xi,a),c(e,$t,a),l($t,Sd),c(e,Si,a),c(e,jt,a),l(jt,Ud),c(e,Ui,a),c(e,Xt,a),l(Xt,ps),l(ps,Yd),c(e,Yi,a),c(e,zt,a),l(zt,h),l(h,Gd),l(h,ds),l(ds,Kd),l(h,Vd),l(h,us),l(us,Wd),l(h,Fd),l(h,Es),l(Es,Bd),l(h,qd),l(h,vs),l(vs,$d),l(h,jd),l(h,ms),l(ms,Xd),l(h,zd),c(e,Gi,a),c(e,Qt,a),l(Qt,Qd),c(e,Ki,a),c(e,_,a),l(_,hs),l(hs,ks),l(ks,Jd),l(_,Zd),l(_,_s),l(_s,Ds),l(Ds,gd),l(_,eu),l(_,ws),l(ws,bs),l(bs,tu),l(_,lu),l(_,ys),l(ys,Os),l(Os,ou),l(_,su),l(_,Cs),l(Cs,Ps),l(Ps,au),c(e,Vi,a),c(e,Jt,a),l(Jt,iu),c(e,Wi,a),c(e,Zt,a),l(Zt,ru),c(e,Fi,a),c(e,gt,a),l(gt,nu),c(e,Bi,a),c(e,el,a),l(el,cu),c(e,qi,a),c(e,tl,a),l(tl,fu),c(e,$i,a),c(e,ll,a),l(ll,pu),c(e,ji,a),c(e,ol,a),l(ol,du),c(e,Xi,a),c(e,sl,a),l(sl,uu),c(e,zi,a),c(e,al,a),l(al,Eu),c(e,Qi,a),c(e,il,a),l(il,vu)},p:wu,i:wu,o:wu,d(e){e&&t(q),e&&t(Ns),e&&t(Be),e&&t(Hs),e&&t(qe),e&&t(As),e&&t($e),e&&t(Ms),e&&t(je),e&&t(xs),e&&t(Xe),e&&t(Ss),e&&t(ze),e&&t(Us),e&&t($),e&&t(Ys),e&&t(Qe),e&&t(Gs),e&&t(Je),e&&t(Ks),e&&t(ve),e&&t(Vs),e&&t(Ze),e&&t(Ws),e&&t(j),e&&t(Fs),e&&t(ge),e&&t(Bs),e&&t(et),e&&t(qs),e&&t(tt),e&&t($s),e&&t(X),e&&t(js),e&&t(lt),e&&t(Xs),e&&t(D),e&&t(zs),e&&t(ot),e&&t(Qs),e&&t(z),e&&t(Js),e&&t(st),e&&t(Zs),e&&t(at),e&&t(gs),e&&t(Q),e&&t(ea),e&&t(it),e&&t(ta),e&&t(rt),e&&t(la),e&&t(nt),e&&t(oa),e&&t(ct),e&&t(sa),e&&t(J),e&&t(aa),e&&t(me),e&&t(ia),e&&t(ft),e&&t(ra),e&&t(pt),e&&t(na),e&&t(he),e&&t(ca),e&&t(dt),e&&t(fa),e&&t(ut),e&&t(pa),e&&t(ke),e&&t(da),e&&t(Et),e&&t(ua),e&&t(vt),e&&t(Ea),e&&t(_e),e&&t(va),e&&t(mt),e&&t(ma),e&&t(ht),e&&t(ha),e&&t(De),e&&t(ka),e&&t(L),e&&t(_a),e&&t(Z),e&&t(Da),e&&t(kt),e&&t(wa),e&&t(_t),e&&t(ba),e&&t(we),e&&t(ya),e&&t(g),e&&t(Oa),e&&t(N),e&&t(Ca),e&&t(ye),e&&t(Pa),e&&t(H),e&&t(Ra),e&&t(ee),e&&t(Ia),e&&t(Dt),e&&t(Ta),e&&t(wt),e&&t(La),e&&t(Oe),e&&t(Na),e&&t(bt),e&&t(Ha),e&&t(yt),e&&t(Aa),e&&t(Ce),e&&t(Ma),e&&t(R),e&&t(xa),e&&t(Ot),e&&t(Sa),e&&t(Ct),e&&t(Ua),e&&t(Pe),e&&t(Ya),e&&t(te),e&&t(Ga),e&&t(Pt),e&&t(Ka),e&&t(v),e&&t(Va),e&&t(Re),e&&t(Wa),e&&t(le),e&&t(Fa),e&&t(A),e&&t(Ba),e&&t(Rt),e&&t(qa),e&&t(M),e&&t($a),e&&t(It),e&&t(ja),e&&t(x),e&&t(Xa),e&&t(Te),e&&t(za),e&&t(I),e&&t(Qa),e&&t(Tt),e&&t(Ja),e&&t(Lt),e&&t(Za),e&&t(Le),e&&t(ga),e&&t(Nt),e&&t(ei),e&&t(Ne),e&&t(ti),e&&t(S),e&&t(li),e&&t(He),e&&t(oi),e&&t(Ht),e&&t(si),e&&t(At),e&&t(ai),e&&t(Ae),e&&t(ii),e&&t(U),e&&t(ri),e&&t(xt),e&&t(ni),e&&t(St),e&&t(ci),e&&t(xe),e&&t(fi),e&&t(Se),e&&t(pi),e&&t(w),e&&t(di),e&&t(m),e&&t(ui),e&&t(Y),e&&t(Ei),e&&t(G),e&&t(vi),e&&t(Ut),e&&t(mi),e&&t(K),e&&t(hi),e&&t(Ue),e&&t(ki),e&&t(Yt),e&&t(_i),e&&t(Gt),e&&t(Di),e&&t(Ye),e&&t(wi),e&&t(Kt),e&&t(bi),e&&t(Vt),e&&t(yi),e&&t(re),e&&t(Oi),e&&t(Ge),e&&t(Ci),e&&t(Wt),e&&t(Pi),e&&t(ne),e&&t(Ri),e&&t(V),e&&t(Ii),e&&t(ce),e&&t(Ti),e&&t(d),e&&t(Li),e&&t(Ke),e&&t(Ni),e&&t(Ft),e&&t(Hi),e&&t(b),e&&t(Ai),e&&t(Bt),e&&t(Mi),e&&t(qt),e&&t(xi),e&&t($t),e&&t(Si),e&&t(jt),e&&t(Ui),e&&t(Xt),e&&t(Yi),e&&t(zt),e&&t(Gi),e&&t(Qt),e&&t(Ki),e&&t(_),e&&t(Vi),e&&t(Jt),e&&t(Wi),e&&t(Zt),e&&t(Fi),e&&t(gt),e&&t(Bi),e&&t(el),e&&t(qi),e&&t(tl),e&&t($i),e&&t(ll),e&&t(ji),e&&t(ol),e&&t(Xi),e&&t(sl),e&&t(zi),e&&t(al),e&&t(Qi),e&&t(il)}}}const M1={title:"Docker Intro",date:"2022-12-01"},{title:Bm,date:S1}=M1;class U1 extends L1{constructor(q){super(),N1(this,q,null,A1,H1,{})}}export{U1 as default,M1 as metadata};
