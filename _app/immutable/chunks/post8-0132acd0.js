import{S as vk,i as mk,s as hk,k as a,q as o,a as f,l as i,m as r,r as s,h as t,c as p,n as E,b as c,B as l,A as cm}from"./index-4cbca6b4.js";function kk(O4){let se,vc,ii,kt,mc,ri,_t,hc,ni,Dt,kc,ci,wt,_c,fi,Ot,Dc,pi,bt,wc,di,ae,N,Oc,ro,bc,yc,no,Cc,Ic,co,Pc,Rc,Tc,Se,Lc,fo,Nc,Hc,ui,yt,Ac,Ei,Ct,Sc,vi,Me,po,Mc,xc,mi,It,Uc,hi,ie,Gc,uo,Yc,Kc,ki,Pt,Wc,_i,Rt,Vc,Di,Tt,Fc,wi,re,Bc,Eo,qc,zc,Oi,Lt,$c,bi,b,jc,vo,Xc,Qc,mo,Zc,Jc,ho,gc,ef,yi,Nt,tf,Ci,ne,lf,ko,of,sf,Ii,Ht,af,Pi,At,rf,Ri,ce,nf,_o,cf,ff,Ti,St,pf,Li,Ni,Hi,Mt,df,Ai,xt,uf,Si,Ut,Ef,Mi,fe,vf,Do,mf,hf,xi,xe,b4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">FROM</span> apache/spark</span>

<span class="token comment"># to specify a tag</span>
<span class="token instruction"><span class="token keyword">FROM</span> apache/spark:3.3.1</span></code>`,Ui,Gt,kf,Gi,Yt,_f,Yi,Ue,y4=`<code class="language-dockerfile"><span class="token comment"># Shell form (defaults to /bin/sh -c on Linux or cmd /S /C on Windows)</span>
<span class="token instruction"><span class="token keyword">RUN</span> &lt;command></span>

<span class="token comment"># Exec form</span>
<span class="token instruction"><span class="token keyword">RUN</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>]</span></code>`,Ki,Kt,Df,Wi,Wt,wf,Vi,Ge,C4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # exec form</span>
<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # default parameters to ENTRYPOINT</span>
<span class="token instruction"><span class="token keyword">CMD</span> command param1 param2 # shell form</span></code>`,Fi,Vt,Of,Bi,Ft,bf,qi,Ye,I4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ENTRYPOINT</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # exec form</span>
<span class="token instruction"><span class="token keyword">ENTRYPOINT</span> command param1 param2 # shell form</span></code>`,zi,Bt,yf,$i,qt,Cf,ji,Ke,P4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">COPY</span> &lt;src>... &lt;dest></span>
<span class="token instruction"><span class="token keyword">COPY</span> [<span class="token string">"&lt;src>"</span>,... <span class="token string">"&lt;dest>"</span>] # used when there are spaces in path</span></code>`,Xi,M,If,wo,Pf,Rf,Oo,Tf,Lf,Qi,pe,Nf,bo,Hf,Af,Zi,zt,Sf,Ji,$t,Mf,gi,We,R4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ADD</span> &lt;src>... &lt;dest></span>
<span class="token instruction"><span class="token keyword">ADD</span> [<span class="token string">"&lt;src>"</span>,... <span class="token string">"&lt;dest>"</span>] # used when there are spaces in path</span></code>`,er,de,xf,yo,Uf,Gf,tr,x,Co,Yf,Kf,Ve,Wf,Io,Vf,Ff,Bf,Po,qf,lr,Fe,Ro,zf,$f,or,U,jf,To,Xf,Qf,Lo,Zf,Jf,sr,ue,gf,No,ep,tp,ar,jt,lp,ir,Xt,op,rr,Be,T4='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ENV</span> &lt;key>=&lt;value></span></code>',nr,Qt,sp,cr,Zt,ap,fr,qe,L4='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">EXPOSE</span> &lt;port> [&lt;port>/&lt;protocol>]</span></code>',pr,H,Ho,ip,rp,Ao,np,cp,So,fp,pp,dr,Jt,dp,ur,gt,up,Er,ze,N4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">VOLUME</span> &lt;path/to/container/dir> &lt;path/to/container/dir2> # space separated paths</span>
<span class="token instruction"><span class="token keyword">VOLUME</span> [<span class="token string">"&lt;/path/to/dir1>"</span>, <span class="token string">"&lt;/path/to/dir2>"</span>] #json array</span></code>`,vr,Ee,Ep,Mo,vp,mp,mr,el,hp,hr,v,kp,xo,_p,Dp,Uo,wp,Op,Go,bp,yp,Yo,Cp,Ip,Ko,Pp,Rp,kr,$e,H4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">WORKDIR</span> /path/to/workdir # absolute paths, i.e. starts with /</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> path/to/child/dir # relative path, i.e. does not start with /</span></code>`,_r,ve,Tp,Wo,Lp,Np,Dr,G,Hp,Vo,Ap,Sp,Fo,Mp,xp,wr,tl,je,Up,Bo,Gp,Yp,Or,Y,Kp,qo,Wp,Vp,zo,Fp,Bp,br,ll,qp,yr,K,zp,$o,$p,jp,jo,Xp,Qp,Cr,Xe,A4='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ARG</span> &lt;name>[=&lt;default value>]</span></code>',Ir,A,Xo,Zp,Jp,Qo,gp,ed,Zo,td,ld,Pr,ol,od,Rr,sl,sd,Tr,Qe,S4='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ONBUILD</span> &lt;INSTRUCTION></span></code>',Lr,al,ad,Nr,Ze,M4=`<code class="language-dockerfile"><span class="token comment"># copy host files to /contents in the container</span>
<span class="token instruction"><span class="token keyword">ONBUILD</span> <span class="token keyword">ADD</span> . /contents</span>

<span class="token comment"># tar all files in the /contents directory in the container to archive.tar in the container</span>
<span class="token instruction"><span class="token keyword">ONBUILD</span> <span class="token keyword">RUN</span> tar -cfv archive.tar /contents</span></code>`,Hr,W,id,Jo,rd,nd,go,cd,fd,Ar,Je,es,pd,dd,Sr,il,ud,Mr,rl,Ed,xr,ge,x4='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">STOPSIGNAL</span> signal</span></code>',Ur,V,nl,vd,ts,md,hd,le,kd,ls,_d,Dd,os,wd,Od,bd,et,yd,ss,Cd,Id,Gr,cl,Pd,Yr,fl,Rd,Kr,tt,U4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">HEALTHCHECK</span> [OPTIONS] CMD command</span>
<span class="token instruction"><span class="token keyword">HEALTHCHECK</span> <span class="token keyword">NONE</span> # disable any healthcheck from base image</span></code>`,Wr,lt,as,Td,Ld,Vr,y,me,is,Nd,Hd,rs,Ad,Sd,Md,he,ns,xd,Ud,cs,Gd,Yd,Kd,ke,fs,Wd,Vd,ps,Fd,Bd,qd,_e,ds,zd,$d,us,jd,Xd,Fr,m,Qd,Es,Zd,Jd,vs,gd,eu,ms,tu,lu,hs,ou,su,ks,au,iu,Br,F,ru,_s,nu,cu,Ds,fu,pu,qr,B,du,ws,uu,Eu,Os,vu,mu,zr,pl,hu,$r,q,ku,bs,_u,Du,ys,wu,Ou,jr,ot,G4='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">SHELL</span> [<span class="token string">"executable"</span>, <span class="token string">"parameters"</span>]</span></code>',Xr,dl,bu,Qr,ul,yu,Zr,st,Y4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">USER</span> &lt;user></span>
<span class="token instruction"><span class="token keyword">USER</span> &lt;UID></span></code>`,Jr,El,Cu,gr,vl,Iu,en,De,Pu,Cs,Ru,Tu,tn,at,K4='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">LABEL</span> &lt;key>=&lt;value> &lt;key>=&lt;value> ...</span></code>',ln,ml,Lu,on,we,Nu,Is,Hu,Au,sn,z,Su,Ps,Mu,xu,Rs,Uu,Gu,an,Oe,$,Ts,Yu,Ku,Ls,Wu,Vu,Ns,Fu,Bu,qu,k,Hs,zu,$u,As,ju,Xu,Ss,Qu,Zu,Ms,Ju,gu,xs,eE,tE,rn,d,lE,Us,oE,sE,Gs,aE,iE,Ys,rE,nE,Ks,cE,fE,Ws,pE,dE,Vs,uE,EE,Fs,vE,mE,Bs,hE,kE,qs,_E,DE,zs,wE,OE,$s,bE,yE,nn,it,W4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">FROM</span> example</span>
<span class="token instruction"><span class="token keyword">ENV</span> var=/bar</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token variable">$&#123;var&#125;</span> # WORKDIR /bar</span>
<span class="token instruction"><span class="token keyword">ADD</span> . <span class="token variable">$FOO</span>     # ADD . /bar</span></code>`,cn,hl,js,CE,fn,C,IE,Xs,PE,RE,Qs,TE,LE,Zs,NE,HE,pn,kl,AE,dn,un,En,_l,SE,vn,Dl,ME,mn,wl,xE,hn,Ol,Js,UE,kn,bl,h,GE,gs,YE,KE,ea,WE,VE,ta,FE,BE,la,qE,zE,oa,$E,jE,_n,yl,XE,Dn,_,sa,aa,QE,ZE,ia,ra,JE,gE,na,ca,ev,tv,fa,pa,lv,ov,da,ua,sv,wn,Cl,av,On,Il,iv,bn,Pl,rv,yn,Rl,nv,Cn,Tl,cv,In,Ll,fv,Pn,j,pv,Ea,dv,uv,va,Ev,vv,Rn,rt,V4='<code class="language-undefined">docker logs [OPTIONS] CONTAINER</code>',Tn,Nl,mv,Ln,D,be,ma,hv,kv,ha,_v,Dv,wv,ye,ka,Ov,bv,_a,yv,Cv,Iv,X,Da,Pv,Rv,wa,Tv,Lv,Oa,Nv,Hv,Av,I,ba,Sv,Mv,ya,xv,Uv,Ca,Gv,Yv,Ia,Kv,Wv,Vv,Ce,Pa,Fv,Bv,Ra,qv,zv,Nn,Hl,$v,Hn,Al,jv,An,nt,F4='<code class="language-undefined">docker inspect [OPTIONS] NAME|ID</code>',Sn,Sl,Xv,Mn,Ml,Qv,xn,ct,B4='<code class="language-undefined">docker ps [OPTIONS]</code>',Un,xl,Zv,Gn,w,Ie,Ta,Jv,gv,La,e1,t1,l1,Q,Na,o1,s1,Ha,a1,i1,Aa,r1,n1,c1,Ul,Sa,f1,p1,d1,Z,Ma,u1,E1,xa,v1,m1,Ua,h1,k1,_1,O,Ga,D1,w1,Ya,O1,b1,Ka,y1,C1,Wa,I1,P1,ft,Pe,Va,R1,T1,Fa,L1,N1,H1,Gl,Ba,A1,S1,Yn,Yl,M1,Kn,Kl,x1,Wn,pt,q4='<code class="language-undefined">docker stats [OPTIONS] [CONTAINER...]</code>',Vn,Wl,U1,Fn,P,Re,qa,G1,Y1,za,K1,W1,V1,Vl,$a,F1,B1,q1,Fl,ja,z1,$1,j1,Bl,Xa,X1,Q1,Bn,qn,zn,ql,Z1,$n,jn,Xn,zl,J1;return{c(){se=a("h1"),vc=o(w4),ii=f(),kt=a("p"),mc=o("Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),ri=f(),_t=a("p"),hc=o(`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),ni=f(),Dt=a("h2"),kc=o("key concepts"),ci=f(),wt=a("h3"),_c=o("Docker images"),fi=f(),Ot=a("p"),Dc=o(`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),pi=f(),bt=a("p"),wc=o("Images are often build on top of one another"),di=f(),ae=a("ul"),N=a("li"),Oc=o("e.g. you start with "),ro=a("code"),bc=o("ubuntu"),yc=o(" image, install "),no=a("code"),Cc=o("python"),Ic=o(" in that ubuntu image, install "),co=a("code"),Pc=o("pytorch"),Rc=o(" package, install pretrained models."),Tc=f(),Se=a("li"),Lc=o("or you can start with a published "),fo=a("code"),Nc=o("python"),Hc=o(" image, and install your packages there."),ui=f(),yt=a("p"),Ac=o("Published images are available for download in Docker registries."),Ei=f(),Ct=a("h4"),Sc=o("Dockerfile"),vi=f(),Me=a("p"),po=a("code"),Mc=o("Dockerfile"),xc=o("s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),mi=f(),It=a("h3"),Uc=o("Docker containers"),hi=f(),ie=a("p"),Gc=o(`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),uo=a("code"),Yc=o("nodejs"),Kc=o(" image, but one exposes port 8888 and another exposes port 8899."),ki=f(),Pt=a("h3"),Wc=o("Docker registries"),_i=f(),Rt=a("p"),Vc=o("Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),Di=f(),Tt=a("h3"),Fc=o("Docker daemon"),wi=f(),re=a("p"),Bc=o("This is the underlying "),Eo=a("code"),qc=o("dockerd"),zc=o(" process that helps you build images and run containers. It will listen for Docker API requests"),Oi=f(),Lt=a("h3"),$c=o("Docker client"),bi=f(),b=a("p"),jc=o("The docker client "),vo=a("code"),Xc=o("docker"),Qc=o(" is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),mo=a("code"),Zc=o("docker"),Jc=o(" command sends Docker API requests to "),ho=a("code"),gc=o("dockerd"),ef=o("."),yi=f(),Nt=a("h3"),tf=o("Docker compose"),Ci=f(),ne=a("p"),lf=o("Docker compose is a tool that helps with running "),ko=a("em"),of=o("multi-container"),sf=o(" Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),Ii=f(),Ht=a("p"),af=o("For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),Pi=f(),At=a("h4"),rf=o("Difference between Kubernetes"),Ri=f(),ce=a("p"),nf=o("Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),_o=a("em"),cf=o("single-node"),ff=o(", whereas Kubernetes is a full multi-node container manager."),Ti=f(),St=a("p"),pf=o("Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),Li=f(),Ni=a("hr"),Hi=f(),Mt=a("h2"),df=o("Dockerfile"),Ai=f(),xt=a("h3"),uf=o("Commands"),Si=f(),Ut=a("h4"),Ef=o("FROM"),Mi=f(),fe=a("p"),vf=o("All dockerfile starts with the "),Do=a("code"),mf=o("FROM"),hf=o(" command. It pulls the base image from Dockerhub to start to build your image."),xi=f(),xe=a("pre"),Ui=f(),Gt=a("h4"),kf=o("RUN"),Gi=f(),Yt=a("p"),_f=o("Runs a command or executable. It has two forms"),Yi=f(),Ue=a("pre"),Ki=f(),Kt=a("h4"),Df=o("CMD"),Wi=f(),Wt=a("p"),wf=o("Provides defaults for an executing container. The arguments will be appended to ENTRYPOINT."),Vi=f(),Ge=a("pre"),Fi=f(),Vt=a("h4"),Of=o("ENTRYPOINT"),Bi=f(),Ft=a("p"),bf=o(`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),qi=f(),Ye=a("pre"),zi=f(),Bt=a("h4"),yf=o("COPY"),$i=f(),qt=a("p"),Cf=o("Copies file from your native host into the container image."),ji=f(),Ke=a("pre"),Xi=f(),M=a("p"),If=o("Multiple "),wo=a("code"),Pf=o("<src>"),Rf=o(" can be specified, and the last argument will be treated as the "),Oo=a("code"),Tf=o("<dest>"),Lf=o("."),Qi=f(),pe=a("p"),Nf=o("All "),bo=a("code"),Hf=o("<src>"),Af=o(" relative paths must be inside context of the build!"),Zi=f(),zt=a("h4"),Sf=o("ADD"),Ji=f(),$t=a("p"),Mf=o("Copies file from your native host into the container image."),gi=f(),We=a("pre"),er=f(),de=a("p"),xf=o("Compared to COPY, "),yo=a("code"),Uf=o("ADD"),Gf=o(" has added utilities like:"),tr=f(),x=a("ul"),Co=a("li"),Yf=o("being able to download files from URLs then copying them into the image"),Kf=f(),Ve=a("li"),Wf=o("extracting contents of "),Io=a("code"),Vf=o(".tar"),Ff=o(" files before copying into image"),Bf=f(),Po=a("li"),qf=o("adding contents from a git repo"),lr=f(),Fe=a("p"),Ro=a("strong"),zf=o("tip: use COPY as default, unless you need the additional features of ADD."),$f=o(" This is to prevent unwanted side effects!"),or=f(),U=a("p"),jf=o("Multiple "),To=a("code"),Xf=o("<src>"),Qf=o(" can be specified, and the last argument will be treated as the "),Lo=a("code"),Zf=o("<dest>"),Jf=o("."),sr=f(),ue=a("p"),gf=o("All "),No=a("code"),ep=o("<src>"),tp=o(" relative paths must be inside context of the build!"),ar=f(),jt=a("h4"),lp=o("ENV"),ir=f(),Xt=a("p"),op=o("Sets an environment variable"),rr=f(),Be=a("pre"),nr=f(),Qt=a("h4"),sp=o("EXPOSE"),cr=f(),Zt=a("p"),ap=o("Instructs Docker that container should listen on specified network ports at runtime."),fr=f(),qe=a("pre"),pr=f(),H=a("p"),Ho=a("strong"),ip=o("Ports are not automatically published"),rp=o(`, and this command is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),Ao=a("code"),np=o("-P"),cp=o(" flag (which maps exposed ports in container to random ports in native host machine), or "),So=a("code"),fp=o("-p"),pp=o(" to explicitly map ports from containers to your localhost."),dr=f(),Jt=a("h4"),dp=o("VOLUME"),ur=f(),gt=a("p"),up=o(`Marks the directory(s) within the container as an external drive from native host or other containers.
This allows files to be accessed from outside the containers.`),Er=f(),ze=a("pre"),vr=f(),Ee=a("p"),Ep=o("Note that where this (container) directory maps to in your native host is "),Mo=a("strong"),vp=o("specified when you build or run the container"),mp=o("."),mr=f(),el=a("h4"),hp=o("WORKDIR"),hr=f(),v=a("p"),kp=o("Sets working directory for any "),xo=a("code"),_p=o("RUN"),Dp=o(", "),Uo=a("code"),wp=o("CMD"),Op=o(", "),Go=a("code"),bp=o("ENTRYPOINT"),yp=o(", "),Yo=a("code"),Cp=o("COPY"),Ip=o(", "),Ko=a("code"),Pp=o("ADD"),Rp=o(" instructions that follows."),kr=f(),$e=a("pre"),_r=f(),ve=a("p"),Tp=o("Multiple "),Wo=a("code"),Lp=o("WORKDIR"),Np=o(" can be used in a dockerfile."),Dr=f(),G=a("p"),Hp=o("If not specified, default directory is "),Vo=a("code"),Ap=o("/"),Sp=o(`.
But if you are pulling from an image, chances are `),Fo=a("code"),Mp=o("WORKDIR"),xp=o(" already been set in your base image and it will be brought over."),wr=f(),tl=a("p"),je=a("strong"),Up=o("tip: explicitly set "),Bo=a("code"),Gp=o("WORKDIR"),Yp=o(" to prevent unintended operations in unknown dirs"),Or=f(),Y=a("p"),Kp=o("It is also possible to resolve env variables previously set by "),qo=a("code"),Wp=o("ENV"),Vp=o(", e.g. "),zo=a("code"),Fp=o("WORKDIR $DIRPATH_ENV_VAR"),Bp=o("."),br=f(),ll=a("h4"),qp=o("ARG"),yr=f(),K=a("p"),zp=o("Defines a variable that users can pass values into during "),$o=a("code"),$p=o("docker build"),jp=o(" by using "),jo=a("code"),Xp=o("--build-arg <argname>=<value>"),Qp=o(" flag."),Cr=f(),Xe=a("pre"),Ir=f(),A=a("p"),Xo=a("code"),Zp=o("ENV"),Jp=o(" variables will overwrite "),Qo=a("code"),gp=o("ARG"),ed=o(" variables if they are the same name (at the point where the "),Zo=a("code"),td=o("ENV"),ld=o(" variable is defined)."),Pr=f(),ol=a("h4"),od=o("ONBUILD"),Rr=f(),sl=a("p"),sd=o("Adds a trigger to the image that will execute dockerfile instructions when the current image is used as the base for another build."),Tr=f(),Qe=a("pre"),Lr=f(),al=a("p"),ad=o("This command is usful when when you are building a base image that will be distributed to other people, and instructions that depend on other people\u2019s files needs to be run. Example, you could add:"),Nr=f(),Ze=a("pre"),Hr=f(),W=a("p"),id=o("The instructions specified are triggered "),Jo=a("em"),rd=o("immediately"),nd=o(" after the "),go=a("code"),cd=o("FROM"),fd=o(" instruction in the child image."),Ar=f(),Je=a("p"),es=a("code"),pd=o("ONBUILD"),dd=o(" triggers are not inherited by children images."),Sr=f(),il=a("h4"),ud=o("STOPSIGNAL"),Mr=f(),rl=a("p"),Ed=o("Sets the system call signal that will cause the container to exit."),xr=f(),ge=a("pre"),Ur=f(),V=a("ul"),nl=a("li"),vd=o("Default is "),ts=a("code"),md=o("SIGTERM"),hd=f(),le=a("li"),kd=o("Can be in "),ls=a("code"),_d=o("SIG<NAME>"),Dd=o(" format (e.g. "),os=a("code"),wd=o("SIGKILL"),Od=o(")"),bd=f(),et=a("li"),yd=o("Can be an unassigned number in kernel\u2019s syscall table (e.g. "),ss=a("code"),Cd=o("9"),Id=o(")"),Gr=f(),cl=a("h4"),Pd=o("HEALTHCHECK"),Yr=f(),fl=a("p"),Rd=o("Specifies a command to be run inside the container to check container\u2019s health."),Kr=f(),tt=a("pre"),Wr=f(),lt=a("p"),as=a("code"),Td=o("OPTIONS"),Ld=o(" include:"),Vr=f(),y=a("ul"),me=a("li"),is=a("code"),Nd=o("--interval=DURATION"),Hd=o(" (default "),rs=a("code"),Ad=o("30s"),Sd=o(")"),Md=f(),he=a("li"),ns=a("code"),xd=o("--timeout=DURATION"),Ud=o(" (default "),cs=a("code"),Gd=o("30s"),Yd=o(")"),Kd=f(),ke=a("li"),fs=a("code"),Wd=o("--retries=N"),Vd=o(" (default "),ps=a("code"),Fd=o("3"),Bd=o(")"),qd=f(),_e=a("li"),ds=a("code"),zd=o("--start-period=DURATION"),$d=o(" (default "),us=a("code"),jd=o("0s"),Xd=o(")"),Fr=f(),m=a("p"),Qd=o("A container that has "),Es=a("code"),Zd=o("HEALTHCHECK"),Jd=o(" specified will have a "),vs=a("em"),gd=o("health status"),eu=o(" that can take 3 possible states: "),ms=a("code"),tu=o("starting"),lu=o(" | "),hs=a("code"),ou=o("healthy"),su=o(" | "),ks=a("code"),au=o("unhealthy"),iu=o("."),Br=f(),F=a("p"),ru=o("Whenever a health check passes, health status changes to "),_s=a("code"),nu=o("healthy"),cu=o(". After a number of consecutive failures, health status changes to "),Ds=a("code"),fu=o("unhealthy"),pu=o("."),qr=f(),B=a("p"),du=o(`Health checks are run after every interval.
Health checks are considered failed when commands runs for longer than timeout.
When consecutive failures reaches max retries, or command exits with non zero status code `),ws=a("code"),uu=o("0"),Eu=o(", "),Os=a("em"),vu=o("health status"),mu=o(" will change to unhealthy."),zr=f(),pl=a("h4"),hu=o("SHELL"),$r=f(),q=a("p"),ku=o("Specifies the default shell used for shell form of commands. Default is set to "),bs=a("code"),_u=o('["/bin/sh", "-c"]'),Du=o(" for Linux containers and "),ys=a("code"),wu=o('["cmd", "/S", "/C"]'),Ou=o(" for Windows containers."),jr=f(),ot=a("pre"),Xr=f(),dl=a("h4"),bu=o("USER"),Qr=f(),ul=a("p"),yu=o("Sets the username/UID to use for the remainder of the Docker build stage."),Zr=f(),st=a("pre"),Jr=f(),El=a("p"),Cu=o(`This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),gr=f(),vl=a("h4"),Iu=o("LABEL"),en=f(),De=a("p"),Pu=o("Adds metadata to an image and are inherited by child images. You can view an image\u2019s labels using "),Cs=a("code"),Ru=o("docker image inspect"),Tu=o("."),tn=f(),at=a("pre"),ln=f(),ml=a("h3"),Lu=o("Environment Replacement"),on=f(),we=a("p"),Nu=o("Some Dockerfile instructions are able to read environment variables created by "),Is=a("code"),Hu=o("ENV"),Au=o(" commands, and replace them with the values that those environment variables hold."),sn=f(),z=a("p"),Su=o("The syntax is "),Ps=a("code"),Mu=o("$variable_name"),xu=o(" or "),Rs=a("code"),Uu=o("${variable_name}"),Gu=o(" within a Dockerfile."),an=f(),Oe=a("ul"),$=a("li"),Ts=a("code"),Yu=o("${variable:-word}"),Ku=o(" to set "),Ls=a("code"),Wu=o("word"),Vu=o(" as default value when "),Ns=a("code"),Fu=o("variable"),Bu=o(" is not set"),qu=f(),k=a("li"),Hs=a("code"),zu=o("${variable:+word}"),$u=o(" to set "),As=a("code"),ju=o("word"),Xu=o(" as "),Ss=a("code"),Qu=o("variable"),Zu=o(" when "),Ms=a("code"),Ju=o("variable"),gu=o(" has already been set, otherwise "),xs=a("code"),eE=o("variable"),tE=o(" will be empty string."),rn=f(),d=a("p"),lE=o("Dockerfile instructions that support environment variables are: "),Us=a("code"),oE=o("ADD"),sE=o(", "),Gs=a("code"),aE=o("COPY"),iE=o(", "),Ys=a("code"),rE=o("ENV"),nE=o(", "),Ks=a("code"),cE=o("EXPOSE"),fE=o(", "),Ws=a("code"),pE=o("FROM"),dE=o(", "),Vs=a("code"),uE=o("LABEL"),EE=o(", "),Fs=a("code"),vE=o("STOPSIGNAL"),mE=o(", "),Bs=a("code"),hE=o("USER"),kE=o(", "),qs=a("code"),_E=o("VOLUME"),DE=o(", "),zs=a("code"),wE=o("WORKDIR"),OE=o(", "),$s=a("code"),bE=o("ONBUILD"),yE=o("."),nn=f(),it=a("pre"),cn=f(),hl=a("h3"),js=a("code"),CE=o(".dockerignore"),fn=f(),C=a("p"),IE=o("Similar to "),Xs=a("code"),PE=o(".gitignore"),RE=o(", this file contains a list of files and directories that docker should "),Qs=a("strong"),TE=o("exclude"),LE=o(" from the "),Zs=a("em"),NE=o("context"),HE=o(" of a docker build."),pn=f(),kl=a("p"),AE=o("This is useful for preventing sending of large or sensitive files to docker daemon."),dn=f(),un=a("hr"),En=f(),_l=a("h2"),SE=o("useful docker CLI commands"),vn=f(),Dl=a("h3"),ME=o("docker run"),mn=f(),wl=a("p"),xE=o("Runs your images as isolated containers."),hn=f(),Ol=a("p"),Js=a("code"),UE=o("docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]"),kn=f(),bl=a("p"),h=a("em"),GE=o("note: "),gs=a("code"),YE=o("docker run"),KE=o("\u2019s "),ea=a("code"),WE=o("[OPTIONS]"),VE=o(" are specified "),ta=a("strong"),FE=o("before"),BE=o(" the image name, whilst arguments ("),la=a("code"),qE=o("[ARG...]"),zE=o(") for the command to be executed within the container is "),oa=a("strong"),$E=o("AFTER"),jE=o(" the image name and command."),_n=f(),yl=a("p"),XE=o("Common options to specify:"),Dn=f(),_=a("ul"),sa=a("li"),aa=a("code"),QE=o("-p"),ZE=f(),ia=a("li"),ra=a("code"),JE=o("-d"),gE=f(),na=a("li"),ca=a("code"),ev=o("-i"),tv=f(),fa=a("li"),pa=a("code"),lv=o("-t"),ov=f(),da=a("li"),ua=a("code"),sv=o("--name"),wn=f(),Cl=a("h3"),av=o("docker build"),On=f(),Il=a("h3"),iv=o("docker image"),bn=f(),Pl=a("h3"),rv=o("docker container"),yn=f(),Rl=a("h3"),nv=o("docker network"),Cn=f(),Tl=a("h3"),cv=o("docker volume"),In=f(),Ll=a("h3"),fv=o("docker logs"),Pn=f(),j=a("p"),pv=o("Retrieves container\u2019s logs (to "),Ea=a("code"),dv=o("STDOUT"),uv=o(" and "),va=a("code"),Ev=o("STDERR"),vv=o(") to your CLI."),Rn=f(),rt=a("pre"),Tn=f(),Nl=a("p"),mv=o("Common options to specify:"),Ln=f(),D=a("ul"),be=a("li"),ma=a("code"),hv=o("--follow"),kv=o(" / "),ha=a("code"),_v=o("-f"),Dv=o(" : continuously streams the log output"),wv=f(),ye=a("li"),ka=a("code"),Ov=o("--timestamps"),bv=o(" / "),_a=a("code"),yv=o("-t"),Cv=o(" : show timestamps of logs"),Iv=f(),X=a("li"),Da=a("code"),Pv=o("--tail"),Rv=o(" / "),wa=a("code"),Tv=o("-n"),Lv=o(" : number of lines to show from end of the log (defaults to "),Oa=a("code"),Nv=o("all"),Hv=o(")"),Av=f(),I=a("li"),ba=a("code"),Sv=o("--since"),Mv=o(" : show logs "),ya=a("em"),xv=o("since"),Uv=o(" timestamp ("),Ca=a("code"),Gv=o("2013-01-02T13:37:00Z"),Yv=o(") or relative ("),Ia=a("code"),Kv=o("42m"),Wv=o(")"),Vv=f(),Ce=a("li"),Pa=a("code"),Fv=o("--until"),Bv=o(" : show logs "),Ra=a("em"),qv=o("before"),zv=o(" timestamp or relative"),Nn=f(),Hl=a("h3"),$v=o("docker inspect"),Hn=f(),Al=a("p"),jv=o(`Returns detailed information about docker objects.
Objects can be images, containers, networks, volumes, etc.`),An=f(),nt=a("pre"),Sn=f(),Sl=a("h3"),Xv=o("docker ps"),Mn=f(),Ml=a("p"),Qv=o(`List all containers and information about them (such as ID, image name, ports etc.)
Defaults to listing running containers only.`),xn=f(),ct=a("pre"),Un=f(),xl=a("p"),Zv=o("Useful options:"),Gn=f(),w=a("ul"),Ie=a("li"),Ta=a("code"),Jv=o("--all"),gv=o(" / "),La=a("code"),e1=o("-a"),t1=o(" : lists all containers, including those that are not running"),l1=f(),Q=a("li"),Na=a("code"),o1=o("--size"),s1=o(" / "),Ha=a("code"),a1=o("-s"),i1=o(" : include size of the container in output. Shows both size of container (i.e. writable layer), and "),Aa=a("code"),r1=o("virtual"),n1=o(" size of total disk-space used, i.e. container + image."),c1=f(),Ul=a("li"),Sa=a("code"),f1=o("--no-trunc"),p1=o(" : prevent truncation in table output"),d1=f(),Z=a("li"),Ma=a("code"),u1=o("--filter"),E1=o(" / "),xa=a("code"),v1=o("-f"),m1=o(" : filters the output with key-value pairs. E.g. "),Ua=a("code"),h1=o('docker ps -f "name=mysparkcontainer"'),k1=o("."),_1=f(),O=a("li"),Ga=a("code"),D1=o("--format"),w1=o(" : formats the output using Go template. Placeholder information include "),Ya=a("code"),O1=o(".ID"),b1=o(", "),Ka=a("code"),y1=o(".Image"),C1=o(", "),Wa=a("code"),I1=o(".Names"),P1=o(" etc."),ft=a("ul"),Pe=a("li"),Va=a("code"),R1=o('docker ps --format "{{.ID}}: {{.Name}}"'),T1=o(" will print out "),Fa=a("code"),L1=o("abcdef: name1"),N1=o(" etc."),H1=f(),Gl=a("li"),Ba=a("code"),A1=o('docker ps --format "table {{.ID}}\\t{{.Name}}"'),S1=o(" will print the output in a table with header row."),Yn=f(),Yl=a("h3"),M1=o("docker stats"),Kn=f(),Kl=a("p"),x1=o(`Display live info about containers\u2019 resource usage (kind of like Window\u2019s task manager).
Defaults to only showing running containers.`),Wn=f(),pt=a("pre"),Vn=f(),Wl=a("p"),U1=o("Useful options:"),Fn=f(),P=a("ul"),Re=a("li"),qa=a("code"),G1=o("--all"),Y1=o(" / "),za=a("code"),K1=o("-a"),W1=o(" : lists all containers, including those that are not running"),V1=f(),Vl=a("li"),$a=a("code"),F1=o("--no-trunc"),B1=o(" : Prevent truncation in table output"),q1=f(),Fl=a("li"),ja=a("code"),z1=o("--no-stream"),$1=o(" : get only a \u2018snapshot\u2019 of the current stats"),j1=f(),Bl=a("li"),Xa=a("code"),X1=o("--format"),Q1=o(" : formats the output using Go template."),Bn=f(),qn=a("hr"),zn=f(),ql=a("h2"),Z1=o("networking"),$n=f(),jn=a("hr"),Xn=f(),zl=a("h2"),J1=o("disks"),this.h()},l(e){se=i(e,"H1",{});var n=r(se);vc=s(n,w4),n.forEach(t),ii=p(e),kt=i(e,"P",{});var fm=r(kt);mc=s(fm,"Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),fm.forEach(t),ri=p(e),_t=i(e,"P",{});var pm=r(_t);hc=s(pm,`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),pm.forEach(t),ni=p(e),Dt=i(e,"H2",{});var dm=r(Dt);kc=s(dm,"key concepts"),dm.forEach(t),ci=p(e),wt=i(e,"H3",{});var um=r(wt);_c=s(um,"Docker images"),um.forEach(t),fi=p(e),Ot=i(e,"P",{});var Em=r(Ot);Dc=s(Em,`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),Em.forEach(t),pi=p(e),bt=i(e,"P",{});var vm=r(bt);wc=s(vm,"Images are often build on top of one another"),vm.forEach(t),di=p(e),ae=i(e,"UL",{});var Qn=r(ae);N=i(Qn,"LI",{});var Te=r(N);Oc=s(Te,"e.g. you start with "),ro=i(Te,"CODE",{});var mm=r(ro);bc=s(mm,"ubuntu"),mm.forEach(t),yc=s(Te," image, install "),no=i(Te,"CODE",{});var hm=r(no);Cc=s(hm,"python"),hm.forEach(t),Ic=s(Te," in that ubuntu image, install "),co=i(Te,"CODE",{});var km=r(co);Pc=s(km,"pytorch"),km.forEach(t),Rc=s(Te," package, install pretrained models."),Te.forEach(t),Tc=p(Qn),Se=i(Qn,"LI",{});var Zn=r(Se);Lc=s(Zn,"or you can start with a published "),fo=i(Zn,"CODE",{});var _m=r(fo);Nc=s(_m,"python"),_m.forEach(t),Hc=s(Zn," image, and install your packages there."),Zn.forEach(t),Qn.forEach(t),ui=p(e),yt=i(e,"P",{});var Dm=r(yt);Ac=s(Dm,"Published images are available for download in Docker registries."),Dm.forEach(t),Ei=p(e),Ct=i(e,"H4",{});var wm=r(Ct);Sc=s(wm,"Dockerfile"),wm.forEach(t),vi=p(e),Me=i(e,"P",{});var g1=r(Me);po=i(g1,"CODE",{});var Om=r(po);Mc=s(Om,"Dockerfile"),Om.forEach(t),xc=s(g1,"s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),g1.forEach(t),mi=p(e),It=i(e,"H3",{});var bm=r(It);Uc=s(bm,"Docker containers"),bm.forEach(t),hi=p(e),ie=i(e,"P",{});var Jn=r(ie);Gc=s(Jn,`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),uo=i(Jn,"CODE",{});var ym=r(uo);Yc=s(ym,"nodejs"),ym.forEach(t),Kc=s(Jn," image, but one exposes port 8888 and another exposes port 8899."),Jn.forEach(t),ki=p(e),Pt=i(e,"H3",{});var Cm=r(Pt);Wc=s(Cm,"Docker registries"),Cm.forEach(t),_i=p(e),Rt=i(e,"P",{});var Im=r(Rt);Vc=s(Im,"Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),Im.forEach(t),Di=p(e),Tt=i(e,"H3",{});var Pm=r(Tt);Fc=s(Pm,"Docker daemon"),Pm.forEach(t),wi=p(e),re=i(e,"P",{});var gn=r(re);Bc=s(gn,"This is the underlying "),Eo=i(gn,"CODE",{});var Rm=r(Eo);qc=s(Rm,"dockerd"),Rm.forEach(t),zc=s(gn," process that helps you build images and run containers. It will listen for Docker API requests"),gn.forEach(t),Oi=p(e),Lt=i(e,"H3",{});var Tm=r(Lt);$c=s(Tm,"Docker client"),Tm.forEach(t),bi=p(e),b=i(e,"P",{});var Le=r(b);jc=s(Le,"The docker client "),vo=i(Le,"CODE",{});var Lm=r(vo);Xc=s(Lm,"docker"),Lm.forEach(t),Qc=s(Le," is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),mo=i(Le,"CODE",{});var Nm=r(mo);Zc=s(Nm,"docker"),Nm.forEach(t),Jc=s(Le," command sends Docker API requests to "),ho=i(Le,"CODE",{});var Hm=r(ho);gc=s(Hm,"dockerd"),Hm.forEach(t),ef=s(Le,"."),Le.forEach(t),yi=p(e),Nt=i(e,"H3",{});var Am=r(Nt);tf=s(Am,"Docker compose"),Am.forEach(t),Ci=p(e),ne=i(e,"P",{});var ec=r(ne);lf=s(ec,"Docker compose is a tool that helps with running "),ko=i(ec,"EM",{});var Sm=r(ko);of=s(Sm,"multi-container"),Sm.forEach(t),sf=s(ec," Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),ec.forEach(t),Ii=p(e),Ht=i(e,"P",{});var Mm=r(Ht);af=s(Mm,"For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),Mm.forEach(t),Pi=p(e),At=i(e,"H4",{});var xm=r(At);rf=s(xm,"Difference between Kubernetes"),xm.forEach(t),Ri=p(e),ce=i(e,"P",{});var tc=r(ce);nf=s(tc,"Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),_o=i(tc,"EM",{});var Um=r(_o);cf=s(Um,"single-node"),Um.forEach(t),ff=s(tc,", whereas Kubernetes is a full multi-node container manager."),tc.forEach(t),Ti=p(e),St=i(e,"P",{});var Gm=r(St);pf=s(Gm,"Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),Gm.forEach(t),Li=p(e),Ni=i(e,"HR",{}),Hi=p(e),Mt=i(e,"H2",{});var Ym=r(Mt);df=s(Ym,"Dockerfile"),Ym.forEach(t),Ai=p(e),xt=i(e,"H3",{});var Km=r(xt);uf=s(Km,"Commands"),Km.forEach(t),Si=p(e),Ut=i(e,"H4",{});var Wm=r(Ut);Ef=s(Wm,"FROM"),Wm.forEach(t),Mi=p(e),fe=i(e,"P",{});var lc=r(fe);vf=s(lc,"All dockerfile starts with the "),Do=i(lc,"CODE",{});var Vm=r(Do);mf=s(Vm,"FROM"),Vm.forEach(t),hf=s(lc," command. It pulls the base image from Dockerhub to start to build your image."),lc.forEach(t),xi=p(e),xe=i(e,"PRE",{class:!0});var z4=r(xe);z4.forEach(t),Ui=p(e),Gt=i(e,"H4",{});var Fm=r(Gt);kf=s(Fm,"RUN"),Fm.forEach(t),Gi=p(e),Yt=i(e,"P",{});var Bm=r(Yt);_f=s(Bm,"Runs a command or executable. It has two forms"),Bm.forEach(t),Yi=p(e),Ue=i(e,"PRE",{class:!0});var $4=r(Ue);$4.forEach(t),Ki=p(e),Kt=i(e,"H4",{});var qm=r(Kt);Df=s(qm,"CMD"),qm.forEach(t),Wi=p(e),Wt=i(e,"P",{});var zm=r(Wt);wf=s(zm,"Provides defaults for an executing container. The arguments will be appended to ENTRYPOINT."),zm.forEach(t),Vi=p(e),Ge=i(e,"PRE",{class:!0});var j4=r(Ge);j4.forEach(t),Fi=p(e),Vt=i(e,"H4",{});var $m=r(Vt);Of=s($m,"ENTRYPOINT"),$m.forEach(t),Bi=p(e),Ft=i(e,"P",{});var jm=r(Ft);bf=s(jm,`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),jm.forEach(t),qi=p(e),Ye=i(e,"PRE",{class:!0});var X4=r(Ye);X4.forEach(t),zi=p(e),Bt=i(e,"H4",{});var Xm=r(Bt);yf=s(Xm,"COPY"),Xm.forEach(t),$i=p(e),qt=i(e,"P",{});var Qm=r(qt);Cf=s(Qm,"Copies file from your native host into the container image."),Qm.forEach(t),ji=p(e),Ke=i(e,"PRE",{class:!0});var Q4=r(Ke);Q4.forEach(t),Xi=p(e),M=i(e,"P",{});var $l=r(M);If=s($l,"Multiple "),wo=i($l,"CODE",{});var Zm=r(wo);Pf=s(Zm,"<src>"),Zm.forEach(t),Rf=s($l," can be specified, and the last argument will be treated as the "),Oo=i($l,"CODE",{});var Jm=r(Oo);Tf=s(Jm,"<dest>"),Jm.forEach(t),Lf=s($l,"."),$l.forEach(t),Qi=p(e),pe=i(e,"P",{});var oc=r(pe);Nf=s(oc,"All "),bo=i(oc,"CODE",{});var gm=r(bo);Hf=s(gm,"<src>"),gm.forEach(t),Af=s(oc," relative paths must be inside context of the build!"),oc.forEach(t),Zi=p(e),zt=i(e,"H4",{});var e3=r(zt);Sf=s(e3,"ADD"),e3.forEach(t),Ji=p(e),$t=i(e,"P",{});var t3=r($t);Mf=s(t3,"Copies file from your native host into the container image."),t3.forEach(t),gi=p(e),We=i(e,"PRE",{class:!0});var Z4=r(We);Z4.forEach(t),er=p(e),de=i(e,"P",{});var sc=r(de);xf=s(sc,"Compared to COPY, "),yo=i(sc,"CODE",{});var l3=r(yo);Uf=s(l3,"ADD"),l3.forEach(t),Gf=s(sc," has added utilities like:"),sc.forEach(t),tr=p(e),x=i(e,"UL",{});var jl=r(x);Co=i(jl,"LI",{});var o3=r(Co);Yf=s(o3,"being able to download files from URLs then copying them into the image"),o3.forEach(t),Kf=p(jl),Ve=i(jl,"LI",{});var ac=r(Ve);Wf=s(ac,"extracting contents of "),Io=i(ac,"CODE",{});var s3=r(Io);Vf=s(s3,".tar"),s3.forEach(t),Ff=s(ac," files before copying into image"),ac.forEach(t),Bf=p(jl),Po=i(jl,"LI",{});var a3=r(Po);qf=s(a3,"adding contents from a git repo"),a3.forEach(t),jl.forEach(t),lr=p(e),Fe=i(e,"P",{});var em=r(Fe);Ro=i(em,"STRONG",{});var i3=r(Ro);zf=s(i3,"tip: use COPY as default, unless you need the additional features of ADD."),i3.forEach(t),$f=s(em," This is to prevent unwanted side effects!"),em.forEach(t),or=p(e),U=i(e,"P",{});var Xl=r(U);jf=s(Xl,"Multiple "),To=i(Xl,"CODE",{});var r3=r(To);Xf=s(r3,"<src>"),r3.forEach(t),Qf=s(Xl," can be specified, and the last argument will be treated as the "),Lo=i(Xl,"CODE",{});var n3=r(Lo);Zf=s(n3,"<dest>"),n3.forEach(t),Jf=s(Xl,"."),Xl.forEach(t),sr=p(e),ue=i(e,"P",{});var ic=r(ue);gf=s(ic,"All "),No=i(ic,"CODE",{});var c3=r(No);ep=s(c3,"<src>"),c3.forEach(t),tp=s(ic," relative paths must be inside context of the build!"),ic.forEach(t),ar=p(e),jt=i(e,"H4",{});var f3=r(jt);lp=s(f3,"ENV"),f3.forEach(t),ir=p(e),Xt=i(e,"P",{});var p3=r(Xt);op=s(p3,"Sets an environment variable"),p3.forEach(t),rr=p(e),Be=i(e,"PRE",{class:!0});var J4=r(Be);J4.forEach(t),nr=p(e),Qt=i(e,"H4",{});var d3=r(Qt);sp=s(d3,"EXPOSE"),d3.forEach(t),cr=p(e),Zt=i(e,"P",{});var u3=r(Zt);ap=s(u3,"Instructs Docker that container should listen on specified network ports at runtime."),u3.forEach(t),fr=p(e),qe=i(e,"PRE",{class:!0});var g4=r(qe);g4.forEach(t),pr=p(e),H=i(e,"P",{});var dt=r(H);Ho=i(dt,"STRONG",{});var E3=r(Ho);ip=s(E3,"Ports are not automatically published"),E3.forEach(t),rp=s(dt,`, and this command is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),Ao=i(dt,"CODE",{});var v3=r(Ao);np=s(v3,"-P"),v3.forEach(t),cp=s(dt," flag (which maps exposed ports in container to random ports in native host machine), or "),So=i(dt,"CODE",{});var m3=r(So);fp=s(m3,"-p"),m3.forEach(t),pp=s(dt," to explicitly map ports from containers to your localhost."),dt.forEach(t),dr=p(e),Jt=i(e,"H4",{});var h3=r(Jt);dp=s(h3,"VOLUME"),h3.forEach(t),ur=p(e),gt=i(e,"P",{});var k3=r(gt);up=s(k3,`Marks the directory(s) within the container as an external drive from native host or other containers.
This allows files to be accessed from outside the containers.`),k3.forEach(t),Er=p(e),ze=i(e,"PRE",{class:!0});var ek=r(ze);ek.forEach(t),vr=p(e),Ee=i(e,"P",{});var rc=r(Ee);Ep=s(rc,"Note that where this (container) directory maps to in your native host is "),Mo=i(rc,"STRONG",{});var _3=r(Mo);vp=s(_3,"specified when you build or run the container"),_3.forEach(t),mp=s(rc,"."),rc.forEach(t),mr=p(e),el=i(e,"H4",{});var D3=r(el);hp=s(D3,"WORKDIR"),D3.forEach(t),hr=p(e),v=i(e,"P",{});var R=r(v);kp=s(R,"Sets working directory for any "),xo=i(R,"CODE",{});var w3=r(xo);_p=s(w3,"RUN"),w3.forEach(t),Dp=s(R,", "),Uo=i(R,"CODE",{});var O3=r(Uo);wp=s(O3,"CMD"),O3.forEach(t),Op=s(R,", "),Go=i(R,"CODE",{});var b3=r(Go);bp=s(b3,"ENTRYPOINT"),b3.forEach(t),yp=s(R,", "),Yo=i(R,"CODE",{});var y3=r(Yo);Cp=s(y3,"COPY"),y3.forEach(t),Ip=s(R,", "),Ko=i(R,"CODE",{});var C3=r(Ko);Pp=s(C3,"ADD"),C3.forEach(t),Rp=s(R," instructions that follows."),R.forEach(t),kr=p(e),$e=i(e,"PRE",{class:!0});var tk=r($e);tk.forEach(t),_r=p(e),ve=i(e,"P",{});var nc=r(ve);Tp=s(nc,"Multiple "),Wo=i(nc,"CODE",{});var I3=r(Wo);Lp=s(I3,"WORKDIR"),I3.forEach(t),Np=s(nc," can be used in a dockerfile."),nc.forEach(t),Dr=p(e),G=i(e,"P",{});var Ql=r(G);Hp=s(Ql,"If not specified, default directory is "),Vo=i(Ql,"CODE",{});var P3=r(Vo);Ap=s(P3,"/"),P3.forEach(t),Sp=s(Ql,`.
But if you are pulling from an image, chances are `),Fo=i(Ql,"CODE",{});var R3=r(Fo);Mp=s(R3,"WORKDIR"),R3.forEach(t),xp=s(Ql," already been set in your base image and it will be brought over."),Ql.forEach(t),wr=p(e),tl=i(e,"P",{});var T3=r(tl);je=i(T3,"STRONG",{});var cc=r(je);Up=s(cc,"tip: explicitly set "),Bo=i(cc,"CODE",{});var L3=r(Bo);Gp=s(L3,"WORKDIR"),L3.forEach(t),Yp=s(cc," to prevent unintended operations in unknown dirs"),cc.forEach(t),T3.forEach(t),Or=p(e),Y=i(e,"P",{});var Zl=r(Y);Kp=s(Zl,"It is also possible to resolve env variables previously set by "),qo=i(Zl,"CODE",{});var N3=r(qo);Wp=s(N3,"ENV"),N3.forEach(t),Vp=s(Zl,", e.g. "),zo=i(Zl,"CODE",{});var H3=r(zo);Fp=s(H3,"WORKDIR $DIRPATH_ENV_VAR"),H3.forEach(t),Bp=s(Zl,"."),Zl.forEach(t),br=p(e),ll=i(e,"H4",{});var A3=r(ll);qp=s(A3,"ARG"),A3.forEach(t),yr=p(e),K=i(e,"P",{});var Jl=r(K);zp=s(Jl,"Defines a variable that users can pass values into during "),$o=i(Jl,"CODE",{});var S3=r($o);$p=s(S3,"docker build"),S3.forEach(t),jp=s(Jl," by using "),jo=i(Jl,"CODE",{});var M3=r(jo);Xp=s(M3,"--build-arg <argname>=<value>"),M3.forEach(t),Qp=s(Jl," flag."),Jl.forEach(t),Cr=p(e),Xe=i(e,"PRE",{class:!0});var lk=r(Xe);lk.forEach(t),Ir=p(e),A=i(e,"P",{});var ut=r(A);Xo=i(ut,"CODE",{});var x3=r(Xo);Zp=s(x3,"ENV"),x3.forEach(t),Jp=s(ut," variables will overwrite "),Qo=i(ut,"CODE",{});var U3=r(Qo);gp=s(U3,"ARG"),U3.forEach(t),ed=s(ut," variables if they are the same name (at the point where the "),Zo=i(ut,"CODE",{});var G3=r(Zo);td=s(G3,"ENV"),G3.forEach(t),ld=s(ut," variable is defined)."),ut.forEach(t),Pr=p(e),ol=i(e,"H4",{});var Y3=r(ol);od=s(Y3,"ONBUILD"),Y3.forEach(t),Rr=p(e),sl=i(e,"P",{});var K3=r(sl);sd=s(K3,"Adds a trigger to the image that will execute dockerfile instructions when the current image is used as the base for another build."),K3.forEach(t),Tr=p(e),Qe=i(e,"PRE",{class:!0});var ok=r(Qe);ok.forEach(t),Lr=p(e),al=i(e,"P",{});var W3=r(al);ad=s(W3,"This command is usful when when you are building a base image that will be distributed to other people, and instructions that depend on other people\u2019s files needs to be run. Example, you could add:"),W3.forEach(t),Nr=p(e),Ze=i(e,"PRE",{class:!0});var sk=r(Ze);sk.forEach(t),Hr=p(e),W=i(e,"P",{});var gl=r(W);id=s(gl,"The instructions specified are triggered "),Jo=i(gl,"EM",{});var V3=r(Jo);rd=s(V3,"immediately"),V3.forEach(t),nd=s(gl," after the "),go=i(gl,"CODE",{});var F3=r(go);cd=s(F3,"FROM"),F3.forEach(t),fd=s(gl," instruction in the child image."),gl.forEach(t),Ar=p(e),Je=i(e,"P",{});var tm=r(Je);es=i(tm,"CODE",{});var B3=r(es);pd=s(B3,"ONBUILD"),B3.forEach(t),dd=s(tm," triggers are not inherited by children images."),tm.forEach(t),Sr=p(e),il=i(e,"H4",{});var q3=r(il);ud=s(q3,"STOPSIGNAL"),q3.forEach(t),Mr=p(e),rl=i(e,"P",{});var z3=r(rl);Ed=s(z3,"Sets the system call signal that will cause the container to exit."),z3.forEach(t),xr=p(e),ge=i(e,"PRE",{class:!0});var ak=r(ge);ak.forEach(t),Ur=p(e),V=i(e,"UL",{});var eo=r(V);nl=i(eo,"LI",{});var lm=r(nl);vd=s(lm,"Default is "),ts=i(lm,"CODE",{});var $3=r(ts);md=s($3,"SIGTERM"),$3.forEach(t),lm.forEach(t),hd=p(eo),le=i(eo,"LI",{});var to=r(le);kd=s(to,"Can be in "),ls=i(to,"CODE",{});var j3=r(ls);_d=s(j3,"SIG<NAME>"),j3.forEach(t),Dd=s(to," format (e.g. "),os=i(to,"CODE",{});var X3=r(os);wd=s(X3,"SIGKILL"),X3.forEach(t),Od=s(to,")"),to.forEach(t),bd=p(eo),et=i(eo,"LI",{});var fc=r(et);yd=s(fc,"Can be an unassigned number in kernel\u2019s syscall table (e.g. "),ss=i(fc,"CODE",{});var Q3=r(ss);Cd=s(Q3,"9"),Q3.forEach(t),Id=s(fc,")"),fc.forEach(t),eo.forEach(t),Gr=p(e),cl=i(e,"H4",{});var Z3=r(cl);Pd=s(Z3,"HEALTHCHECK"),Z3.forEach(t),Yr=p(e),fl=i(e,"P",{});var J3=r(fl);Rd=s(J3,"Specifies a command to be run inside the container to check container\u2019s health."),J3.forEach(t),Kr=p(e),tt=i(e,"PRE",{class:!0});var ik=r(tt);ik.forEach(t),Wr=p(e),lt=i(e,"P",{});var om=r(lt);as=i(om,"CODE",{});var g3=r(as);Td=s(g3,"OPTIONS"),g3.forEach(t),Ld=s(om," include:"),om.forEach(t),Vr=p(e),y=i(e,"UL",{});var Ne=r(y);me=i(Ne,"LI",{});var Qa=r(me);is=i(Qa,"CODE",{});var eh=r(is);Nd=s(eh,"--interval=DURATION"),eh.forEach(t),Hd=s(Qa," (default "),rs=i(Qa,"CODE",{});var th=r(rs);Ad=s(th,"30s"),th.forEach(t),Sd=s(Qa,")"),Qa.forEach(t),Md=p(Ne),he=i(Ne,"LI",{});var Za=r(he);ns=i(Za,"CODE",{});var lh=r(ns);xd=s(lh,"--timeout=DURATION"),lh.forEach(t),Ud=s(Za," (default "),cs=i(Za,"CODE",{});var oh=r(cs);Gd=s(oh,"30s"),oh.forEach(t),Yd=s(Za,")"),Za.forEach(t),Kd=p(Ne),ke=i(Ne,"LI",{});var Ja=r(ke);fs=i(Ja,"CODE",{});var sh=r(fs);Wd=s(sh,"--retries=N"),sh.forEach(t),Vd=s(Ja," (default "),ps=i(Ja,"CODE",{});var ah=r(ps);Fd=s(ah,"3"),ah.forEach(t),Bd=s(Ja,")"),Ja.forEach(t),qd=p(Ne),_e=i(Ne,"LI",{});var ga=r(_e);ds=i(ga,"CODE",{});var ih=r(ds);zd=s(ih,"--start-period=DURATION"),ih.forEach(t),$d=s(ga," (default "),us=i(ga,"CODE",{});var rh=r(us);jd=s(rh,"0s"),rh.forEach(t),Xd=s(ga,")"),ga.forEach(t),Ne.forEach(t),Fr=p(e),m=i(e,"P",{});var T=r(m);Qd=s(T,"A container that has "),Es=i(T,"CODE",{});var nh=r(Es);Zd=s(nh,"HEALTHCHECK"),nh.forEach(t),Jd=s(T," specified will have a "),vs=i(T,"EM",{});var ch=r(vs);gd=s(ch,"health status"),ch.forEach(t),eu=s(T," that can take 3 possible states: "),ms=i(T,"CODE",{});var fh=r(ms);tu=s(fh,"starting"),fh.forEach(t),lu=s(T," | "),hs=i(T,"CODE",{});var ph=r(hs);ou=s(ph,"healthy"),ph.forEach(t),su=s(T," | "),ks=i(T,"CODE",{});var dh=r(ks);au=s(dh,"unhealthy"),dh.forEach(t),iu=s(T,"."),T.forEach(t),Br=p(e),F=i(e,"P",{});var lo=r(F);ru=s(lo,"Whenever a health check passes, health status changes to "),_s=i(lo,"CODE",{});var uh=r(_s);nu=s(uh,"healthy"),uh.forEach(t),cu=s(lo,". After a number of consecutive failures, health status changes to "),Ds=i(lo,"CODE",{});var Eh=r(Ds);fu=s(Eh,"unhealthy"),Eh.forEach(t),pu=s(lo,"."),lo.forEach(t),qr=p(e),B=i(e,"P",{});var oo=r(B);du=s(oo,`Health checks are run after every interval.
Health checks are considered failed when commands runs for longer than timeout.
When consecutive failures reaches max retries, or command exits with non zero status code `),ws=i(oo,"CODE",{});var vh=r(ws);uu=s(vh,"0"),vh.forEach(t),Eu=s(oo,", "),Os=i(oo,"EM",{});var mh=r(Os);vu=s(mh,"health status"),mh.forEach(t),mu=s(oo," will change to unhealthy."),oo.forEach(t),zr=p(e),pl=i(e,"H4",{});var hh=r(pl);hu=s(hh,"SHELL"),hh.forEach(t),$r=p(e),q=i(e,"P",{});var so=r(q);ku=s(so,"Specifies the default shell used for shell form of commands. Default is set to "),bs=i(so,"CODE",{});var kh=r(bs);_u=s(kh,'["/bin/sh", "-c"]'),kh.forEach(t),Du=s(so," for Linux containers and "),ys=i(so,"CODE",{});var _h=r(ys);wu=s(_h,'["cmd", "/S", "/C"]'),_h.forEach(t),Ou=s(so," for Windows containers."),so.forEach(t),jr=p(e),ot=i(e,"PRE",{class:!0});var rk=r(ot);rk.forEach(t),Xr=p(e),dl=i(e,"H4",{});var Dh=r(dl);bu=s(Dh,"USER"),Dh.forEach(t),Qr=p(e),ul=i(e,"P",{});var wh=r(ul);yu=s(wh,"Sets the username/UID to use for the remainder of the Docker build stage."),wh.forEach(t),Zr=p(e),st=i(e,"PRE",{class:!0});var nk=r(st);nk.forEach(t),Jr=p(e),El=i(e,"P",{});var Oh=r(El);Cu=s(Oh,`This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),Oh.forEach(t),gr=p(e),vl=i(e,"H4",{});var bh=r(vl);Iu=s(bh,"LABEL"),bh.forEach(t),en=p(e),De=i(e,"P",{});var pc=r(De);Pu=s(pc,"Adds metadata to an image and are inherited by child images. You can view an image\u2019s labels using "),Cs=i(pc,"CODE",{});var yh=r(Cs);Ru=s(yh,"docker image inspect"),yh.forEach(t),Tu=s(pc,"."),pc.forEach(t),tn=p(e),at=i(e,"PRE",{class:!0});var ck=r(at);ck.forEach(t),ln=p(e),ml=i(e,"H3",{});var Ch=r(ml);Lu=s(Ch,"Environment Replacement"),Ch.forEach(t),on=p(e),we=i(e,"P",{});var dc=r(we);Nu=s(dc,"Some Dockerfile instructions are able to read environment variables created by "),Is=i(dc,"CODE",{});var Ih=r(Is);Hu=s(Ih,"ENV"),Ih.forEach(t),Au=s(dc," commands, and replace them with the values that those environment variables hold."),dc.forEach(t),sn=p(e),z=i(e,"P",{});var ao=r(z);Su=s(ao,"The syntax is "),Ps=i(ao,"CODE",{});var Ph=r(Ps);Mu=s(Ph,"$variable_name"),Ph.forEach(t),xu=s(ao," or "),Rs=i(ao,"CODE",{});var Rh=r(Rs);Uu=s(Rh,"${variable_name}"),Rh.forEach(t),Gu=s(ao," within a Dockerfile."),ao.forEach(t),an=p(e),Oe=i(e,"UL",{});var uc=r(Oe);$=i(uc,"LI",{});var Et=r($);Ts=i(Et,"CODE",{});var Th=r(Ts);Yu=s(Th,"${variable:-word}"),Th.forEach(t),Ku=s(Et," to set "),Ls=i(Et,"CODE",{});var Lh=r(Ls);Wu=s(Lh,"word"),Lh.forEach(t),Vu=s(Et," as default value when "),Ns=i(Et,"CODE",{});var Nh=r(Ns);Fu=s(Nh,"variable"),Nh.forEach(t),Bu=s(Et," is not set"),Et.forEach(t),qu=p(uc),k=i(uc,"LI",{});var S=r(k);Hs=i(S,"CODE",{});var Hh=r(Hs);zu=s(Hh,"${variable:+word}"),Hh.forEach(t),$u=s(S," to set "),As=i(S,"CODE",{});var Ah=r(As);ju=s(Ah,"word"),Ah.forEach(t),Xu=s(S," as "),Ss=i(S,"CODE",{});var Sh=r(Ss);Qu=s(Sh,"variable"),Sh.forEach(t),Zu=s(S," when "),Ms=i(S,"CODE",{});var Mh=r(Ms);Ju=s(Mh,"variable"),Mh.forEach(t),gu=s(S," has already been set, otherwise "),xs=i(S,"CODE",{});var xh=r(xs);eE=s(xh,"variable"),xh.forEach(t),tE=s(S," will be empty string."),S.forEach(t),uc.forEach(t),rn=p(e),d=i(e,"P",{});var u=r(d);lE=s(u,"Dockerfile instructions that support environment variables are: "),Us=i(u,"CODE",{});var Uh=r(Us);oE=s(Uh,"ADD"),Uh.forEach(t),sE=s(u,", "),Gs=i(u,"CODE",{});var Gh=r(Gs);aE=s(Gh,"COPY"),Gh.forEach(t),iE=s(u,", "),Ys=i(u,"CODE",{});var Yh=r(Ys);rE=s(Yh,"ENV"),Yh.forEach(t),nE=s(u,", "),Ks=i(u,"CODE",{});var Kh=r(Ks);cE=s(Kh,"EXPOSE"),Kh.forEach(t),fE=s(u,", "),Ws=i(u,"CODE",{});var Wh=r(Ws);pE=s(Wh,"FROM"),Wh.forEach(t),dE=s(u,", "),Vs=i(u,"CODE",{});var Vh=r(Vs);uE=s(Vh,"LABEL"),Vh.forEach(t),EE=s(u,", "),Fs=i(u,"CODE",{});var Fh=r(Fs);vE=s(Fh,"STOPSIGNAL"),Fh.forEach(t),mE=s(u,", "),Bs=i(u,"CODE",{});var Bh=r(Bs);hE=s(Bh,"USER"),Bh.forEach(t),kE=s(u,", "),qs=i(u,"CODE",{});var qh=r(qs);_E=s(qh,"VOLUME"),qh.forEach(t),DE=s(u,", "),zs=i(u,"CODE",{});var zh=r(zs);wE=s(zh,"WORKDIR"),zh.forEach(t),OE=s(u,", "),$s=i(u,"CODE",{});var $h=r($s);bE=s($h,"ONBUILD"),$h.forEach(t),yE=s(u,"."),u.forEach(t),nn=p(e),it=i(e,"PRE",{class:!0});var fk=r(it);fk.forEach(t),cn=p(e),hl=i(e,"H3",{});var jh=r(hl);js=i(jh,"CODE",{});var Xh=r(js);CE=s(Xh,".dockerignore"),Xh.forEach(t),jh.forEach(t),fn=p(e),C=i(e,"P",{});var He=r(C);IE=s(He,"Similar to "),Xs=i(He,"CODE",{});var Qh=r(Xs);PE=s(Qh,".gitignore"),Qh.forEach(t),RE=s(He,", this file contains a list of files and directories that docker should "),Qs=i(He,"STRONG",{});var Zh=r(Qs);TE=s(Zh,"exclude"),Zh.forEach(t),LE=s(He," from the "),Zs=i(He,"EM",{});var Jh=r(Zs);NE=s(Jh,"context"),Jh.forEach(t),HE=s(He," of a docker build."),He.forEach(t),pn=p(e),kl=i(e,"P",{});var gh=r(kl);AE=s(gh,"This is useful for preventing sending of large or sensitive files to docker daemon."),gh.forEach(t),dn=p(e),un=i(e,"HR",{}),En=p(e),_l=i(e,"H2",{});var e2=r(_l);SE=s(e2,"useful docker CLI commands"),e2.forEach(t),vn=p(e),Dl=i(e,"H3",{});var t2=r(Dl);ME=s(t2,"docker run"),t2.forEach(t),mn=p(e),wl=i(e,"P",{});var l2=r(wl);xE=s(l2,"Runs your images as isolated containers."),l2.forEach(t),hn=p(e),Ol=i(e,"P",{});var o2=r(Ol);Js=i(o2,"CODE",{});var s2=r(Js);UE=s(s2,"docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]"),s2.forEach(t),o2.forEach(t),kn=p(e),bl=i(e,"P",{});var a2=r(bl);h=i(a2,"EM",{});var L=r(h);GE=s(L,"note: "),gs=i(L,"CODE",{});var i2=r(gs);YE=s(i2,"docker run"),i2.forEach(t),KE=s(L,"\u2019s "),ea=i(L,"CODE",{});var r2=r(ea);WE=s(r2,"[OPTIONS]"),r2.forEach(t),VE=s(L," are specified "),ta=i(L,"STRONG",{});var n2=r(ta);FE=s(n2,"before"),n2.forEach(t),BE=s(L," the image name, whilst arguments ("),la=i(L,"CODE",{});var c2=r(la);qE=s(c2,"[ARG...]"),c2.forEach(t),zE=s(L,") for the command to be executed within the container is "),oa=i(L,"STRONG",{});var f2=r(oa);$E=s(f2,"AFTER"),f2.forEach(t),jE=s(L," the image name and command."),L.forEach(t),a2.forEach(t),_n=p(e),yl=i(e,"P",{});var p2=r(yl);XE=s(p2,"Common options to specify:"),p2.forEach(t),Dn=p(e),_=i(e,"UL",{});var J=r(_);sa=i(J,"LI",{});var d2=r(sa);aa=i(d2,"CODE",{});var u2=r(aa);QE=s(u2,"-p"),u2.forEach(t),d2.forEach(t),ZE=p(J),ia=i(J,"LI",{});var E2=r(ia);ra=i(E2,"CODE",{});var v2=r(ra);JE=s(v2,"-d"),v2.forEach(t),E2.forEach(t),gE=p(J),na=i(J,"LI",{});var m2=r(na);ca=i(m2,"CODE",{});var h2=r(ca);ev=s(h2,"-i"),h2.forEach(t),m2.forEach(t),tv=p(J),fa=i(J,"LI",{});var k2=r(fa);pa=i(k2,"CODE",{});var _2=r(pa);lv=s(_2,"-t"),_2.forEach(t),k2.forEach(t),ov=p(J),da=i(J,"LI",{});var D2=r(da);ua=i(D2,"CODE",{});var w2=r(ua);sv=s(w2,"--name"),w2.forEach(t),D2.forEach(t),J.forEach(t),wn=p(e),Cl=i(e,"H3",{});var O2=r(Cl);av=s(O2,"docker build"),O2.forEach(t),On=p(e),Il=i(e,"H3",{});var b2=r(Il);iv=s(b2,"docker image"),b2.forEach(t),bn=p(e),Pl=i(e,"H3",{});var y2=r(Pl);rv=s(y2,"docker container"),y2.forEach(t),yn=p(e),Rl=i(e,"H3",{});var C2=r(Rl);nv=s(C2,"docker network"),C2.forEach(t),Cn=p(e),Tl=i(e,"H3",{});var I2=r(Tl);cv=s(I2,"docker volume"),I2.forEach(t),In=p(e),Ll=i(e,"H3",{});var P2=r(Ll);fv=s(P2,"docker logs"),P2.forEach(t),Pn=p(e),j=i(e,"P",{});var io=r(j);pv=s(io,"Retrieves container\u2019s logs (to "),Ea=i(io,"CODE",{});var R2=r(Ea);dv=s(R2,"STDOUT"),R2.forEach(t),uv=s(io," and "),va=i(io,"CODE",{});var T2=r(va);Ev=s(T2,"STDERR"),T2.forEach(t),vv=s(io,") to your CLI."),io.forEach(t),Rn=p(e),rt=i(e,"PRE",{class:!0});var pk=r(rt);pk.forEach(t),Tn=p(e),Nl=i(e,"P",{});var L2=r(Nl);mv=s(L2,"Common options to specify:"),L2.forEach(t),Ln=p(e),D=i(e,"UL",{});var g=r(D);be=i(g,"LI",{});var ei=r(be);ma=i(ei,"CODE",{});var N2=r(ma);hv=s(N2,"--follow"),N2.forEach(t),kv=s(ei," / "),ha=i(ei,"CODE",{});var H2=r(ha);_v=s(H2,"-f"),H2.forEach(t),Dv=s(ei," : continuously streams the log output"),ei.forEach(t),wv=p(g),ye=i(g,"LI",{});var ti=r(ye);ka=i(ti,"CODE",{});var A2=r(ka);Ov=s(A2,"--timestamps"),A2.forEach(t),bv=s(ti," / "),_a=i(ti,"CODE",{});var S2=r(_a);yv=s(S2,"-t"),S2.forEach(t),Cv=s(ti," : show timestamps of logs"),ti.forEach(t),Iv=p(g),X=i(g,"LI",{});var vt=r(X);Da=i(vt,"CODE",{});var M2=r(Da);Pv=s(M2,"--tail"),M2.forEach(t),Rv=s(vt," / "),wa=i(vt,"CODE",{});var x2=r(wa);Tv=s(x2,"-n"),x2.forEach(t),Lv=s(vt," : number of lines to show from end of the log (defaults to "),Oa=i(vt,"CODE",{});var U2=r(Oa);Nv=s(U2,"all"),U2.forEach(t),Hv=s(vt,")"),vt.forEach(t),Av=p(g),I=i(g,"LI",{});var oe=r(I);ba=i(oe,"CODE",{});var G2=r(ba);Sv=s(G2,"--since"),G2.forEach(t),Mv=s(oe," : show logs "),ya=i(oe,"EM",{});var Y2=r(ya);xv=s(Y2,"since"),Y2.forEach(t),Uv=s(oe," timestamp ("),Ca=i(oe,"CODE",{});var K2=r(Ca);Gv=s(K2,"2013-01-02T13:37:00Z"),K2.forEach(t),Yv=s(oe,") or relative ("),Ia=i(oe,"CODE",{});var W2=r(Ia);Kv=s(W2,"42m"),W2.forEach(t),Wv=s(oe,")"),oe.forEach(t),Vv=p(g),Ce=i(g,"LI",{});var li=r(Ce);Pa=i(li,"CODE",{});var V2=r(Pa);Fv=s(V2,"--until"),V2.forEach(t),Bv=s(li," : show logs "),Ra=i(li,"EM",{});var F2=r(Ra);qv=s(F2,"before"),F2.forEach(t),zv=s(li," timestamp or relative"),li.forEach(t),g.forEach(t),Nn=p(e),Hl=i(e,"H3",{});var B2=r(Hl);$v=s(B2,"docker inspect"),B2.forEach(t),Hn=p(e),Al=i(e,"P",{});var q2=r(Al);jv=s(q2,`Returns detailed information about docker objects.
Objects can be images, containers, networks, volumes, etc.`),q2.forEach(t),An=p(e),nt=i(e,"PRE",{class:!0});var dk=r(nt);dk.forEach(t),Sn=p(e),Sl=i(e,"H3",{});var z2=r(Sl);Xv=s(z2,"docker ps"),z2.forEach(t),Mn=p(e),Ml=i(e,"P",{});var $2=r(Ml);Qv=s($2,`List all containers and information about them (such as ID, image name, ports etc.)
Defaults to listing running containers only.`),$2.forEach(t),xn=p(e),ct=i(e,"PRE",{class:!0});var uk=r(ct);uk.forEach(t),Un=p(e),xl=i(e,"P",{});var j2=r(xl);Zv=s(j2,"Useful options:"),j2.forEach(t),Gn=p(e),w=i(e,"UL",{});var ee=r(w);Ie=i(ee,"LI",{});var oi=r(Ie);Ta=i(oi,"CODE",{});var X2=r(Ta);Jv=s(X2,"--all"),X2.forEach(t),gv=s(oi," / "),La=i(oi,"CODE",{});var Q2=r(La);e1=s(Q2,"-a"),Q2.forEach(t),t1=s(oi," : lists all containers, including those that are not running"),oi.forEach(t),l1=p(ee),Q=i(ee,"LI",{});var mt=r(Q);Na=i(mt,"CODE",{});var Z2=r(Na);o1=s(Z2,"--size"),Z2.forEach(t),s1=s(mt," / "),Ha=i(mt,"CODE",{});var J2=r(Ha);a1=s(J2,"-s"),J2.forEach(t),i1=s(mt," : include size of the container in output. Shows both size of container (i.e. writable layer), and "),Aa=i(mt,"CODE",{});var g2=r(Aa);r1=s(g2,"virtual"),g2.forEach(t),n1=s(mt," size of total disk-space used, i.e. container + image."),mt.forEach(t),c1=p(ee),Ul=i(ee,"LI",{});var sm=r(Ul);Sa=i(sm,"CODE",{});var e4=r(Sa);f1=s(e4,"--no-trunc"),e4.forEach(t),p1=s(sm," : prevent truncation in table output"),sm.forEach(t),d1=p(ee),Z=i(ee,"LI",{});var ht=r(Z);Ma=i(ht,"CODE",{});var t4=r(Ma);u1=s(t4,"--filter"),t4.forEach(t),E1=s(ht," / "),xa=i(ht,"CODE",{});var l4=r(xa);v1=s(l4,"-f"),l4.forEach(t),m1=s(ht," : filters the output with key-value pairs. E.g. "),Ua=i(ht,"CODE",{});var o4=r(Ua);h1=s(o4,'docker ps -f "name=mysparkcontainer"'),o4.forEach(t),k1=s(ht,"."),ht.forEach(t),_1=p(ee),O=i(ee,"LI",{});var te=r(O);Ga=i(te,"CODE",{});var s4=r(Ga);D1=s(s4,"--format"),s4.forEach(t),w1=s(te," : formats the output using Go template. Placeholder information include "),Ya=i(te,"CODE",{});var a4=r(Ya);O1=s(a4,".ID"),a4.forEach(t),b1=s(te,", "),Ka=i(te,"CODE",{});var i4=r(Ka);y1=s(i4,".Image"),i4.forEach(t),C1=s(te,", "),Wa=i(te,"CODE",{});var r4=r(Wa);I1=s(r4,".Names"),r4.forEach(t),P1=s(te," etc."),ft=i(te,"UL",{});var Ec=r(ft);Pe=i(Ec,"LI",{});var si=r(Pe);Va=i(si,"CODE",{});var n4=r(Va);R1=s(n4,'docker ps --format "{{.ID}}: {{.Name}}"'),n4.forEach(t),T1=s(si," will print out "),Fa=i(si,"CODE",{});var c4=r(Fa);L1=s(c4,"abcdef: name1"),c4.forEach(t),N1=s(si," etc."),si.forEach(t),H1=p(Ec),Gl=i(Ec,"LI",{});var am=r(Gl);Ba=i(am,"CODE",{});var f4=r(Ba);A1=s(f4,'docker ps --format "table {{.ID}}\\t{{.Name}}"'),f4.forEach(t),S1=s(am," will print the output in a table with header row."),am.forEach(t),Ec.forEach(t),te.forEach(t),ee.forEach(t),Yn=p(e),Yl=i(e,"H3",{});var p4=r(Yl);M1=s(p4,"docker stats"),p4.forEach(t),Kn=p(e),Kl=i(e,"P",{});var d4=r(Kl);x1=s(d4,`Display live info about containers\u2019 resource usage (kind of like Window\u2019s task manager).
Defaults to only showing running containers.`),d4.forEach(t),Wn=p(e),pt=i(e,"PRE",{class:!0});var Ek=r(pt);Ek.forEach(t),Vn=p(e),Wl=i(e,"P",{});var u4=r(Wl);U1=s(u4,"Useful options:"),u4.forEach(t),Fn=p(e),P=i(e,"UL",{});var Ae=r(P);Re=i(Ae,"LI",{});var ai=r(Re);qa=i(ai,"CODE",{});var E4=r(qa);G1=s(E4,"--all"),E4.forEach(t),Y1=s(ai," / "),za=i(ai,"CODE",{});var v4=r(za);K1=s(v4,"-a"),v4.forEach(t),W1=s(ai," : lists all containers, including those that are not running"),ai.forEach(t),V1=p(Ae),Vl=i(Ae,"LI",{});var im=r(Vl);$a=i(im,"CODE",{});var m4=r($a);F1=s(m4,"--no-trunc"),m4.forEach(t),B1=s(im," : Prevent truncation in table output"),im.forEach(t),q1=p(Ae),Fl=i(Ae,"LI",{});var rm=r(Fl);ja=i(rm,"CODE",{});var h4=r(ja);z1=s(h4,"--no-stream"),h4.forEach(t),$1=s(rm," : get only a \u2018snapshot\u2019 of the current stats"),rm.forEach(t),j1=p(Ae),Bl=i(Ae,"LI",{});var nm=r(Bl);Xa=i(nm,"CODE",{});var k4=r(Xa);X1=s(k4,"--format"),k4.forEach(t),Q1=s(nm," : formats the output using Go template."),nm.forEach(t),Ae.forEach(t),Bn=p(e),qn=i(e,"HR",{}),zn=p(e),ql=i(e,"H2",{});var _4=r(ql);Z1=s(_4,"networking"),_4.forEach(t),$n=p(e),jn=i(e,"HR",{}),Xn=p(e),zl=i(e,"H2",{});var D4=r(zl);J1=s(D4,"disks"),D4.forEach(t),this.h()},h(){E(xe,"class","language-dockerfile"),E(Ue,"class","language-dockerfile"),E(Ge,"class","language-dockerfile"),E(Ye,"class","language-dockerfile"),E(Ke,"class","language-dockerfile"),E(We,"class","language-dockerfile"),E(Be,"class","language-dockerfile"),E(qe,"class","language-dockerfile"),E(ze,"class","language-dockerfile"),E($e,"class","language-dockerfile"),E(Xe,"class","language-dockerfile"),E(Qe,"class","language-dockerfile"),E(Ze,"class","language-dockerfile"),E(ge,"class","language-dockerfile"),E(tt,"class","language-dockerfile"),E(ot,"class","language-dockerfile"),E(st,"class","language-dockerfile"),E(at,"class","language-dockerfile"),E(it,"class","language-dockerfile"),E(rt,"class","language-undefined"),E(nt,"class","language-undefined"),E(ct,"class","language-undefined"),E(pt,"class","language-undefined")},m(e,n){c(e,se,n),l(se,vc),c(e,ii,n),c(e,kt,n),l(kt,mc),c(e,ri,n),c(e,_t,n),l(_t,hc),c(e,ni,n),c(e,Dt,n),l(Dt,kc),c(e,ci,n),c(e,wt,n),l(wt,_c),c(e,fi,n),c(e,Ot,n),l(Ot,Dc),c(e,pi,n),c(e,bt,n),l(bt,wc),c(e,di,n),c(e,ae,n),l(ae,N),l(N,Oc),l(N,ro),l(ro,bc),l(N,yc),l(N,no),l(no,Cc),l(N,Ic),l(N,co),l(co,Pc),l(N,Rc),l(ae,Tc),l(ae,Se),l(Se,Lc),l(Se,fo),l(fo,Nc),l(Se,Hc),c(e,ui,n),c(e,yt,n),l(yt,Ac),c(e,Ei,n),c(e,Ct,n),l(Ct,Sc),c(e,vi,n),c(e,Me,n),l(Me,po),l(po,Mc),l(Me,xc),c(e,mi,n),c(e,It,n),l(It,Uc),c(e,hi,n),c(e,ie,n),l(ie,Gc),l(ie,uo),l(uo,Yc),l(ie,Kc),c(e,ki,n),c(e,Pt,n),l(Pt,Wc),c(e,_i,n),c(e,Rt,n),l(Rt,Vc),c(e,Di,n),c(e,Tt,n),l(Tt,Fc),c(e,wi,n),c(e,re,n),l(re,Bc),l(re,Eo),l(Eo,qc),l(re,zc),c(e,Oi,n),c(e,Lt,n),l(Lt,$c),c(e,bi,n),c(e,b,n),l(b,jc),l(b,vo),l(vo,Xc),l(b,Qc),l(b,mo),l(mo,Zc),l(b,Jc),l(b,ho),l(ho,gc),l(b,ef),c(e,yi,n),c(e,Nt,n),l(Nt,tf),c(e,Ci,n),c(e,ne,n),l(ne,lf),l(ne,ko),l(ko,of),l(ne,sf),c(e,Ii,n),c(e,Ht,n),l(Ht,af),c(e,Pi,n),c(e,At,n),l(At,rf),c(e,Ri,n),c(e,ce,n),l(ce,nf),l(ce,_o),l(_o,cf),l(ce,ff),c(e,Ti,n),c(e,St,n),l(St,pf),c(e,Li,n),c(e,Ni,n),c(e,Hi,n),c(e,Mt,n),l(Mt,df),c(e,Ai,n),c(e,xt,n),l(xt,uf),c(e,Si,n),c(e,Ut,n),l(Ut,Ef),c(e,Mi,n),c(e,fe,n),l(fe,vf),l(fe,Do),l(Do,mf),l(fe,hf),c(e,xi,n),c(e,xe,n),xe.innerHTML=b4,c(e,Ui,n),c(e,Gt,n),l(Gt,kf),c(e,Gi,n),c(e,Yt,n),l(Yt,_f),c(e,Yi,n),c(e,Ue,n),Ue.innerHTML=y4,c(e,Ki,n),c(e,Kt,n),l(Kt,Df),c(e,Wi,n),c(e,Wt,n),l(Wt,wf),c(e,Vi,n),c(e,Ge,n),Ge.innerHTML=C4,c(e,Fi,n),c(e,Vt,n),l(Vt,Of),c(e,Bi,n),c(e,Ft,n),l(Ft,bf),c(e,qi,n),c(e,Ye,n),Ye.innerHTML=I4,c(e,zi,n),c(e,Bt,n),l(Bt,yf),c(e,$i,n),c(e,qt,n),l(qt,Cf),c(e,ji,n),c(e,Ke,n),Ke.innerHTML=P4,c(e,Xi,n),c(e,M,n),l(M,If),l(M,wo),l(wo,Pf),l(M,Rf),l(M,Oo),l(Oo,Tf),l(M,Lf),c(e,Qi,n),c(e,pe,n),l(pe,Nf),l(pe,bo),l(bo,Hf),l(pe,Af),c(e,Zi,n),c(e,zt,n),l(zt,Sf),c(e,Ji,n),c(e,$t,n),l($t,Mf),c(e,gi,n),c(e,We,n),We.innerHTML=R4,c(e,er,n),c(e,de,n),l(de,xf),l(de,yo),l(yo,Uf),l(de,Gf),c(e,tr,n),c(e,x,n),l(x,Co),l(Co,Yf),l(x,Kf),l(x,Ve),l(Ve,Wf),l(Ve,Io),l(Io,Vf),l(Ve,Ff),l(x,Bf),l(x,Po),l(Po,qf),c(e,lr,n),c(e,Fe,n),l(Fe,Ro),l(Ro,zf),l(Fe,$f),c(e,or,n),c(e,U,n),l(U,jf),l(U,To),l(To,Xf),l(U,Qf),l(U,Lo),l(Lo,Zf),l(U,Jf),c(e,sr,n),c(e,ue,n),l(ue,gf),l(ue,No),l(No,ep),l(ue,tp),c(e,ar,n),c(e,jt,n),l(jt,lp),c(e,ir,n),c(e,Xt,n),l(Xt,op),c(e,rr,n),c(e,Be,n),Be.innerHTML=T4,c(e,nr,n),c(e,Qt,n),l(Qt,sp),c(e,cr,n),c(e,Zt,n),l(Zt,ap),c(e,fr,n),c(e,qe,n),qe.innerHTML=L4,c(e,pr,n),c(e,H,n),l(H,Ho),l(Ho,ip),l(H,rp),l(H,Ao),l(Ao,np),l(H,cp),l(H,So),l(So,fp),l(H,pp),c(e,dr,n),c(e,Jt,n),l(Jt,dp),c(e,ur,n),c(e,gt,n),l(gt,up),c(e,Er,n),c(e,ze,n),ze.innerHTML=N4,c(e,vr,n),c(e,Ee,n),l(Ee,Ep),l(Ee,Mo),l(Mo,vp),l(Ee,mp),c(e,mr,n),c(e,el,n),l(el,hp),c(e,hr,n),c(e,v,n),l(v,kp),l(v,xo),l(xo,_p),l(v,Dp),l(v,Uo),l(Uo,wp),l(v,Op),l(v,Go),l(Go,bp),l(v,yp),l(v,Yo),l(Yo,Cp),l(v,Ip),l(v,Ko),l(Ko,Pp),l(v,Rp),c(e,kr,n),c(e,$e,n),$e.innerHTML=H4,c(e,_r,n),c(e,ve,n),l(ve,Tp),l(ve,Wo),l(Wo,Lp),l(ve,Np),c(e,Dr,n),c(e,G,n),l(G,Hp),l(G,Vo),l(Vo,Ap),l(G,Sp),l(G,Fo),l(Fo,Mp),l(G,xp),c(e,wr,n),c(e,tl,n),l(tl,je),l(je,Up),l(je,Bo),l(Bo,Gp),l(je,Yp),c(e,Or,n),c(e,Y,n),l(Y,Kp),l(Y,qo),l(qo,Wp),l(Y,Vp),l(Y,zo),l(zo,Fp),l(Y,Bp),c(e,br,n),c(e,ll,n),l(ll,qp),c(e,yr,n),c(e,K,n),l(K,zp),l(K,$o),l($o,$p),l(K,jp),l(K,jo),l(jo,Xp),l(K,Qp),c(e,Cr,n),c(e,Xe,n),Xe.innerHTML=A4,c(e,Ir,n),c(e,A,n),l(A,Xo),l(Xo,Zp),l(A,Jp),l(A,Qo),l(Qo,gp),l(A,ed),l(A,Zo),l(Zo,td),l(A,ld),c(e,Pr,n),c(e,ol,n),l(ol,od),c(e,Rr,n),c(e,sl,n),l(sl,sd),c(e,Tr,n),c(e,Qe,n),Qe.innerHTML=S4,c(e,Lr,n),c(e,al,n),l(al,ad),c(e,Nr,n),c(e,Ze,n),Ze.innerHTML=M4,c(e,Hr,n),c(e,W,n),l(W,id),l(W,Jo),l(Jo,rd),l(W,nd),l(W,go),l(go,cd),l(W,fd),c(e,Ar,n),c(e,Je,n),l(Je,es),l(es,pd),l(Je,dd),c(e,Sr,n),c(e,il,n),l(il,ud),c(e,Mr,n),c(e,rl,n),l(rl,Ed),c(e,xr,n),c(e,ge,n),ge.innerHTML=x4,c(e,Ur,n),c(e,V,n),l(V,nl),l(nl,vd),l(nl,ts),l(ts,md),l(V,hd),l(V,le),l(le,kd),l(le,ls),l(ls,_d),l(le,Dd),l(le,os),l(os,wd),l(le,Od),l(V,bd),l(V,et),l(et,yd),l(et,ss),l(ss,Cd),l(et,Id),c(e,Gr,n),c(e,cl,n),l(cl,Pd),c(e,Yr,n),c(e,fl,n),l(fl,Rd),c(e,Kr,n),c(e,tt,n),tt.innerHTML=U4,c(e,Wr,n),c(e,lt,n),l(lt,as),l(as,Td),l(lt,Ld),c(e,Vr,n),c(e,y,n),l(y,me),l(me,is),l(is,Nd),l(me,Hd),l(me,rs),l(rs,Ad),l(me,Sd),l(y,Md),l(y,he),l(he,ns),l(ns,xd),l(he,Ud),l(he,cs),l(cs,Gd),l(he,Yd),l(y,Kd),l(y,ke),l(ke,fs),l(fs,Wd),l(ke,Vd),l(ke,ps),l(ps,Fd),l(ke,Bd),l(y,qd),l(y,_e),l(_e,ds),l(ds,zd),l(_e,$d),l(_e,us),l(us,jd),l(_e,Xd),c(e,Fr,n),c(e,m,n),l(m,Qd),l(m,Es),l(Es,Zd),l(m,Jd),l(m,vs),l(vs,gd),l(m,eu),l(m,ms),l(ms,tu),l(m,lu),l(m,hs),l(hs,ou),l(m,su),l(m,ks),l(ks,au),l(m,iu),c(e,Br,n),c(e,F,n),l(F,ru),l(F,_s),l(_s,nu),l(F,cu),l(F,Ds),l(Ds,fu),l(F,pu),c(e,qr,n),c(e,B,n),l(B,du),l(B,ws),l(ws,uu),l(B,Eu),l(B,Os),l(Os,vu),l(B,mu),c(e,zr,n),c(e,pl,n),l(pl,hu),c(e,$r,n),c(e,q,n),l(q,ku),l(q,bs),l(bs,_u),l(q,Du),l(q,ys),l(ys,wu),l(q,Ou),c(e,jr,n),c(e,ot,n),ot.innerHTML=G4,c(e,Xr,n),c(e,dl,n),l(dl,bu),c(e,Qr,n),c(e,ul,n),l(ul,yu),c(e,Zr,n),c(e,st,n),st.innerHTML=Y4,c(e,Jr,n),c(e,El,n),l(El,Cu),c(e,gr,n),c(e,vl,n),l(vl,Iu),c(e,en,n),c(e,De,n),l(De,Pu),l(De,Cs),l(Cs,Ru),l(De,Tu),c(e,tn,n),c(e,at,n),at.innerHTML=K4,c(e,ln,n),c(e,ml,n),l(ml,Lu),c(e,on,n),c(e,we,n),l(we,Nu),l(we,Is),l(Is,Hu),l(we,Au),c(e,sn,n),c(e,z,n),l(z,Su),l(z,Ps),l(Ps,Mu),l(z,xu),l(z,Rs),l(Rs,Uu),l(z,Gu),c(e,an,n),c(e,Oe,n),l(Oe,$),l($,Ts),l(Ts,Yu),l($,Ku),l($,Ls),l(Ls,Wu),l($,Vu),l($,Ns),l(Ns,Fu),l($,Bu),l(Oe,qu),l(Oe,k),l(k,Hs),l(Hs,zu),l(k,$u),l(k,As),l(As,ju),l(k,Xu),l(k,Ss),l(Ss,Qu),l(k,Zu),l(k,Ms),l(Ms,Ju),l(k,gu),l(k,xs),l(xs,eE),l(k,tE),c(e,rn,n),c(e,d,n),l(d,lE),l(d,Us),l(Us,oE),l(d,sE),l(d,Gs),l(Gs,aE),l(d,iE),l(d,Ys),l(Ys,rE),l(d,nE),l(d,Ks),l(Ks,cE),l(d,fE),l(d,Ws),l(Ws,pE),l(d,dE),l(d,Vs),l(Vs,uE),l(d,EE),l(d,Fs),l(Fs,vE),l(d,mE),l(d,Bs),l(Bs,hE),l(d,kE),l(d,qs),l(qs,_E),l(d,DE),l(d,zs),l(zs,wE),l(d,OE),l(d,$s),l($s,bE),l(d,yE),c(e,nn,n),c(e,it,n),it.innerHTML=W4,c(e,cn,n),c(e,hl,n),l(hl,js),l(js,CE),c(e,fn,n),c(e,C,n),l(C,IE),l(C,Xs),l(Xs,PE),l(C,RE),l(C,Qs),l(Qs,TE),l(C,LE),l(C,Zs),l(Zs,NE),l(C,HE),c(e,pn,n),c(e,kl,n),l(kl,AE),c(e,dn,n),c(e,un,n),c(e,En,n),c(e,_l,n),l(_l,SE),c(e,vn,n),c(e,Dl,n),l(Dl,ME),c(e,mn,n),c(e,wl,n),l(wl,xE),c(e,hn,n),c(e,Ol,n),l(Ol,Js),l(Js,UE),c(e,kn,n),c(e,bl,n),l(bl,h),l(h,GE),l(h,gs),l(gs,YE),l(h,KE),l(h,ea),l(ea,WE),l(h,VE),l(h,ta),l(ta,FE),l(h,BE),l(h,la),l(la,qE),l(h,zE),l(h,oa),l(oa,$E),l(h,jE),c(e,_n,n),c(e,yl,n),l(yl,XE),c(e,Dn,n),c(e,_,n),l(_,sa),l(sa,aa),l(aa,QE),l(_,ZE),l(_,ia),l(ia,ra),l(ra,JE),l(_,gE),l(_,na),l(na,ca),l(ca,ev),l(_,tv),l(_,fa),l(fa,pa),l(pa,lv),l(_,ov),l(_,da),l(da,ua),l(ua,sv),c(e,wn,n),c(e,Cl,n),l(Cl,av),c(e,On,n),c(e,Il,n),l(Il,iv),c(e,bn,n),c(e,Pl,n),l(Pl,rv),c(e,yn,n),c(e,Rl,n),l(Rl,nv),c(e,Cn,n),c(e,Tl,n),l(Tl,cv),c(e,In,n),c(e,Ll,n),l(Ll,fv),c(e,Pn,n),c(e,j,n),l(j,pv),l(j,Ea),l(Ea,dv),l(j,uv),l(j,va),l(va,Ev),l(j,vv),c(e,Rn,n),c(e,rt,n),rt.innerHTML=V4,c(e,Tn,n),c(e,Nl,n),l(Nl,mv),c(e,Ln,n),c(e,D,n),l(D,be),l(be,ma),l(ma,hv),l(be,kv),l(be,ha),l(ha,_v),l(be,Dv),l(D,wv),l(D,ye),l(ye,ka),l(ka,Ov),l(ye,bv),l(ye,_a),l(_a,yv),l(ye,Cv),l(D,Iv),l(D,X),l(X,Da),l(Da,Pv),l(X,Rv),l(X,wa),l(wa,Tv),l(X,Lv),l(X,Oa),l(Oa,Nv),l(X,Hv),l(D,Av),l(D,I),l(I,ba),l(ba,Sv),l(I,Mv),l(I,ya),l(ya,xv),l(I,Uv),l(I,Ca),l(Ca,Gv),l(I,Yv),l(I,Ia),l(Ia,Kv),l(I,Wv),l(D,Vv),l(D,Ce),l(Ce,Pa),l(Pa,Fv),l(Ce,Bv),l(Ce,Ra),l(Ra,qv),l(Ce,zv),c(e,Nn,n),c(e,Hl,n),l(Hl,$v),c(e,Hn,n),c(e,Al,n),l(Al,jv),c(e,An,n),c(e,nt,n),nt.innerHTML=F4,c(e,Sn,n),c(e,Sl,n),l(Sl,Xv),c(e,Mn,n),c(e,Ml,n),l(Ml,Qv),c(e,xn,n),c(e,ct,n),ct.innerHTML=B4,c(e,Un,n),c(e,xl,n),l(xl,Zv),c(e,Gn,n),c(e,w,n),l(w,Ie),l(Ie,Ta),l(Ta,Jv),l(Ie,gv),l(Ie,La),l(La,e1),l(Ie,t1),l(w,l1),l(w,Q),l(Q,Na),l(Na,o1),l(Q,s1),l(Q,Ha),l(Ha,a1),l(Q,i1),l(Q,Aa),l(Aa,r1),l(Q,n1),l(w,c1),l(w,Ul),l(Ul,Sa),l(Sa,f1),l(Ul,p1),l(w,d1),l(w,Z),l(Z,Ma),l(Ma,u1),l(Z,E1),l(Z,xa),l(xa,v1),l(Z,m1),l(Z,Ua),l(Ua,h1),l(Z,k1),l(w,_1),l(w,O),l(O,Ga),l(Ga,D1),l(O,w1),l(O,Ya),l(Ya,O1),l(O,b1),l(O,Ka),l(Ka,y1),l(O,C1),l(O,Wa),l(Wa,I1),l(O,P1),l(O,ft),l(ft,Pe),l(Pe,Va),l(Va,R1),l(Pe,T1),l(Pe,Fa),l(Fa,L1),l(Pe,N1),l(ft,H1),l(ft,Gl),l(Gl,Ba),l(Ba,A1),l(Gl,S1),c(e,Yn,n),c(e,Yl,n),l(Yl,M1),c(e,Kn,n),c(e,Kl,n),l(Kl,x1),c(e,Wn,n),c(e,pt,n),pt.innerHTML=q4,c(e,Vn,n),c(e,Wl,n),l(Wl,U1),c(e,Fn,n),c(e,P,n),l(P,Re),l(Re,qa),l(qa,G1),l(Re,Y1),l(Re,za),l(za,K1),l(Re,W1),l(P,V1),l(P,Vl),l(Vl,$a),l($a,F1),l(Vl,B1),l(P,q1),l(P,Fl),l(Fl,ja),l(ja,z1),l(Fl,$1),l(P,j1),l(P,Bl),l(Bl,Xa),l(Xa,X1),l(Bl,Q1),c(e,Bn,n),c(e,qn,n),c(e,zn,n),c(e,ql,n),l(ql,Z1),c(e,$n,n),c(e,jn,n),c(e,Xn,n),c(e,zl,n),l(zl,J1)},p:cm,i:cm,o:cm,d(e){e&&t(se),e&&t(ii),e&&t(kt),e&&t(ri),e&&t(_t),e&&t(ni),e&&t(Dt),e&&t(ci),e&&t(wt),e&&t(fi),e&&t(Ot),e&&t(pi),e&&t(bt),e&&t(di),e&&t(ae),e&&t(ui),e&&t(yt),e&&t(Ei),e&&t(Ct),e&&t(vi),e&&t(Me),e&&t(mi),e&&t(It),e&&t(hi),e&&t(ie),e&&t(ki),e&&t(Pt),e&&t(_i),e&&t(Rt),e&&t(Di),e&&t(Tt),e&&t(wi),e&&t(re),e&&t(Oi),e&&t(Lt),e&&t(bi),e&&t(b),e&&t(yi),e&&t(Nt),e&&t(Ci),e&&t(ne),e&&t(Ii),e&&t(Ht),e&&t(Pi),e&&t(At),e&&t(Ri),e&&t(ce),e&&t(Ti),e&&t(St),e&&t(Li),e&&t(Ni),e&&t(Hi),e&&t(Mt),e&&t(Ai),e&&t(xt),e&&t(Si),e&&t(Ut),e&&t(Mi),e&&t(fe),e&&t(xi),e&&t(xe),e&&t(Ui),e&&t(Gt),e&&t(Gi),e&&t(Yt),e&&t(Yi),e&&t(Ue),e&&t(Ki),e&&t(Kt),e&&t(Wi),e&&t(Wt),e&&t(Vi),e&&t(Ge),e&&t(Fi),e&&t(Vt),e&&t(Bi),e&&t(Ft),e&&t(qi),e&&t(Ye),e&&t(zi),e&&t(Bt),e&&t($i),e&&t(qt),e&&t(ji),e&&t(Ke),e&&t(Xi),e&&t(M),e&&t(Qi),e&&t(pe),e&&t(Zi),e&&t(zt),e&&t(Ji),e&&t($t),e&&t(gi),e&&t(We),e&&t(er),e&&t(de),e&&t(tr),e&&t(x),e&&t(lr),e&&t(Fe),e&&t(or),e&&t(U),e&&t(sr),e&&t(ue),e&&t(ar),e&&t(jt),e&&t(ir),e&&t(Xt),e&&t(rr),e&&t(Be),e&&t(nr),e&&t(Qt),e&&t(cr),e&&t(Zt),e&&t(fr),e&&t(qe),e&&t(pr),e&&t(H),e&&t(dr),e&&t(Jt),e&&t(ur),e&&t(gt),e&&t(Er),e&&t(ze),e&&t(vr),e&&t(Ee),e&&t(mr),e&&t(el),e&&t(hr),e&&t(v),e&&t(kr),e&&t($e),e&&t(_r),e&&t(ve),e&&t(Dr),e&&t(G),e&&t(wr),e&&t(tl),e&&t(Or),e&&t(Y),e&&t(br),e&&t(ll),e&&t(yr),e&&t(K),e&&t(Cr),e&&t(Xe),e&&t(Ir),e&&t(A),e&&t(Pr),e&&t(ol),e&&t(Rr),e&&t(sl),e&&t(Tr),e&&t(Qe),e&&t(Lr),e&&t(al),e&&t(Nr),e&&t(Ze),e&&t(Hr),e&&t(W),e&&t(Ar),e&&t(Je),e&&t(Sr),e&&t(il),e&&t(Mr),e&&t(rl),e&&t(xr),e&&t(ge),e&&t(Ur),e&&t(V),e&&t(Gr),e&&t(cl),e&&t(Yr),e&&t(fl),e&&t(Kr),e&&t(tt),e&&t(Wr),e&&t(lt),e&&t(Vr),e&&t(y),e&&t(Fr),e&&t(m),e&&t(Br),e&&t(F),e&&t(qr),e&&t(B),e&&t(zr),e&&t(pl),e&&t($r),e&&t(q),e&&t(jr),e&&t(ot),e&&t(Xr),e&&t(dl),e&&t(Qr),e&&t(ul),e&&t(Zr),e&&t(st),e&&t(Jr),e&&t(El),e&&t(gr),e&&t(vl),e&&t(en),e&&t(De),e&&t(tn),e&&t(at),e&&t(ln),e&&t(ml),e&&t(on),e&&t(we),e&&t(sn),e&&t(z),e&&t(an),e&&t(Oe),e&&t(rn),e&&t(d),e&&t(nn),e&&t(it),e&&t(cn),e&&t(hl),e&&t(fn),e&&t(C),e&&t(pn),e&&t(kl),e&&t(dn),e&&t(un),e&&t(En),e&&t(_l),e&&t(vn),e&&t(Dl),e&&t(mn),e&&t(wl),e&&t(hn),e&&t(Ol),e&&t(kn),e&&t(bl),e&&t(_n),e&&t(yl),e&&t(Dn),e&&t(_),e&&t(wn),e&&t(Cl),e&&t(On),e&&t(Il),e&&t(bn),e&&t(Pl),e&&t(yn),e&&t(Rl),e&&t(Cn),e&&t(Tl),e&&t(In),e&&t(Ll),e&&t(Pn),e&&t(j),e&&t(Rn),e&&t(rt),e&&t(Tn),e&&t(Nl),e&&t(Ln),e&&t(D),e&&t(Nn),e&&t(Hl),e&&t(Hn),e&&t(Al),e&&t(An),e&&t(nt),e&&t(Sn),e&&t(Sl),e&&t(Mn),e&&t(Ml),e&&t(xn),e&&t(ct),e&&t(Un),e&&t(xl),e&&t(Gn),e&&t(w),e&&t(Yn),e&&t(Yl),e&&t(Kn),e&&t(Kl),e&&t(Wn),e&&t(pt),e&&t(Vn),e&&t(Wl),e&&t(Fn),e&&t(P),e&&t(Bn),e&&t(qn),e&&t(zn),e&&t(ql),e&&t($n),e&&t(jn),e&&t(Xn),e&&t(zl)}}}const _k={title:"Docker Intro",date:"2022-12-01"},{title:w4,date:wk}=_k;class Ok extends vk{constructor(se){super(),mk(this,se,null,kk,hk,{})}}export{Ok as default,_k as metadata};
