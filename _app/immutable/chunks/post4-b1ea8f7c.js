import{S as fr,i as hr,s as cr,L as Mr,e as fe,b as v,M as Sr,f as ue,A as C,h as a,N as kr,O as q,P as A,m as f,n as E,B as t,Q as Xn,K as Un,q as i,r as s,G as dr,H as pr,R as Dr,k as c,a as k,v as Gr,l as d,c as D,w as Ir,x as Or,t as Vr,y as Tr}from"./index-01ed1eb7.js";import{a as Cr,f as Lr}from"./index-b55a96ef.js";import{f as Pr}from"./GovtBalanceData-809c4fcd.js";import{i as Yn,e as St,f as Br,a as Nr,b as Hr,t as zr,c as Rr,d as Fr,g as Wr,h as qr}from"./defaultLocale-4078ae36.js";class Zo extends Map{constructor(o,l=Ur){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:l}}),o!=null)for(const[r,h]of o)this.set(r,h)}get(o){return super.get(er(this,o))}has(o){return super.has(er(this,o))}set(o,l){return super.set(Ar(this,o),l)}delete(o){return super.delete(jr(this,o))}}function er({_intern:n,_key:o},l){const r=o(l);return n.has(r)?n.get(r):l}function Ar({_intern:n,_key:o},l){const r=o(l);return n.has(r)?n.get(r):(n.set(r,l),l)}function jr({_intern:n,_key:o},l){const r=o(l);return n.has(r)&&(l=n.get(r),n.delete(r)),l}function Ur(n){return n!==null&&typeof n=="object"?n.valueOf():n}function Xr(n,o,l){n=+n,o=+o,l=(h=arguments.length)<2?(o=n,n=0,1):h<3?1:+l;for(var r=-1,h=Math.max(0,Math.ceil((o-n)/l))|0,_=new Array(h);++r<h;)_[r]=n+r*l;return _}const tr=Symbol("implicit");function mr(){var n=new Zo,o=[],l=[],r=tr;function h(_){let g=n.get(_);if(g===void 0){if(r!==tr)return r;n.set(_,g=o.push(_)-1)}return l[g%l.length]}return h.domain=function(_){if(!arguments.length)return o.slice();o=[],n=new Zo;for(const g of _)n.has(g)||n.set(g,o.push(g)-1);return h},h.range=function(_){return arguments.length?(l=Array.from(_),h):l.slice()},h.unknown=function(_){return arguments.length?(r=_,h):r},h.copy=function(){return mr(o,l).unknown(r)},Yn.apply(h,arguments),h}function vr(){var n=mr().unknown(void 0),o=n.domain,l=n.range,r=0,h=1,_,g,m=!1,x=0,y=0,G=.5;delete n.unknown;function M(){var p=o().length,w=h<r,u=w?h:r,I=w?r:h;_=(I-u)/Math.max(1,p-x+y*2),m&&(_=Math.floor(_)),u+=(I-u-_*(p-x))*G,g=_*(1-x),m&&(u=Math.round(u),g=Math.round(g));var H=Xr(p).map(function(L){return u+_*L});return l(w?H.reverse():H)}return n.domain=function(p){return arguments.length?(o(p),M()):o()},n.range=function(p){return arguments.length?([r,h]=p,r=+r,h=+h,M()):[r,h]},n.rangeRound=function(p){return[r,h]=p,r=+r,h=+h,m=!0,M()},n.bandwidth=function(){return g},n.step=function(){return _},n.round=function(p){return arguments.length?(m=!!p,M()):m},n.padding=function(p){return arguments.length?(x=Math.min(1,y=+p),M()):x},n.paddingInner=function(p){return arguments.length?(x=Math.min(1,p),M()):x},n.paddingOuter=function(p){return arguments.length?(y=+p,M()):y},n.align=function(p){return arguments.length?(G=Math.max(0,Math.min(1,p)),M()):G},n.copy=function(){return vr(o(),[r,h]).round(m).paddingInner(x).paddingOuter(y).align(G)},Yn.apply(M(),arguments)}function Yr(n){return Math.max(0,-St(Math.abs(n)))}function $r(n,o){return Math.max(0,Math.max(-8,Math.min(8,Math.floor(St(o)/3)))*3-St(Math.abs(n)))}function Kr(n,o){return n=Math.abs(n),o=Math.abs(o)-n,Math.max(0,St(o)-St(n))+1}function Qr(n,o,l,r){var h=zr(n,o,l),_;switch(r=Br(r==null?",f":r),r.type){case"s":{var g=Math.max(Math.abs(n),Math.abs(o));return r.precision==null&&!isNaN(_=$r(h,g))&&(r.precision=_),Nr(r,g)}case"":case"e":case"g":case"p":case"r":{r.precision==null&&!isNaN(_=Kr(h,Math.max(Math.abs(n),Math.abs(o))))&&(r.precision=_-(r.type==="e"));break}case"f":case"%":{r.precision==null&&!isNaN(_=Yr(h))&&(r.precision=_-(r.type==="%")*2);break}}return Hr(r)}function Jr(n){var o=n.domain;return n.ticks=function(l){var r=o();return Wr(r[0],r[r.length-1],l==null?10:l)},n.tickFormat=function(l,r){var h=o();return Qr(h[0],h[h.length-1],l==null?10:l,r)},n.nice=function(l){l==null&&(l=10);var r=o(),h=0,_=r.length-1,g=r[h],m=r[_],x,y,G=10;for(m<g&&(y=g,g=m,m=y,y=h,h=_,_=y);G-- >0;){if(y=qr(g,m,l),y===x)return r[h]=g,r[_]=m,o(r);if(y>0)g=Math.floor(g/y)*y,m=Math.ceil(m/y)*y;else if(y<0)g=Math.ceil(g*y)/y,m=Math.floor(m*y)/y;else break;x=y}return n},n}function _r(){var n=Rr();return n.copy=function(){return Fr(n,_r())},Yn.apply(n,arguments),Jr(n)}function ar(n,o,l){const r=n.slice();return r[12]=o[l],r[14]=l,r}function nr(n,o,l){const r=n.slice();return r[12]=o[l],r[14]=l,r}function or(n,o,l){const r=n.slice();return r[16]=o[l],r}function Zr(n){return{c:C,l:C,m:C,p:C,i:C,o:C,d:C}}function el(n){let o,l,r,h,_,g=n[3].ticks(),m=[];for(let p=0;p<g.length;p+=1)m[p]=rr(or(n,g,p));let x=n[11],y=[];for(let p=0;p<x.length;p+=1)y[p]=lr(nr(n,x,p));let G=n[11],M=[];for(let p=0;p<G.length;p+=1)M[p]=sr(ar(n,G,p));return{c(){o=q("svg");for(let p=0;p<m.length;p+=1)m[p].c();l=fe();for(let p=0;p<y.length;p+=1)y[p].c();r=fe();for(let p=0;p<M.length;p+=1)M[p].c();this.h()},l(p){o=A(p,"svg",{viewBox:!0});var w=f(o);for(let u=0;u<m.length;u+=1)m[u].l(w);l=fe();for(let u=0;u<y.length;u+=1)y[u].l(w);r=fe();for(let u=0;u<M.length;u+=1)M[u].l(w);w.forEach(a),this.h()},h(){E(o,"viewBox",0-he+" "+(0-he)+" "+(W+2*he)+" "+($n+2*he))},m(p,w){v(p,o,w);for(let u=0;u<m.length;u+=1)m[u].m(o,null);t(o,l);for(let u=0;u<y.length;u+=1)y[u].m(o,null);t(o,r);for(let u=0;u<M.length;u+=1)M[u].m(o,null);n[8](o),h||(_=Xn(o,"mousemove",n[9]),h=!0)},p(p,w){if(w&8){g=p[3].ticks();let u;for(u=0;u<g.length;u+=1){const I=or(p,g,u);m[u]?(m[u].p(I,w),ue(m[u],1)):(m[u]=rr(I),m[u].c(),ue(m[u],1),m[u].m(o,l))}for(;u<m.length;u+=1)m[u].d(1);m.length=g.length}if(w&57){x=p[11];let u;for(u=0;u<x.length;u+=1){const I=nr(p,x,u);y[u]?(y[u].p(I,w),ue(y[u],1)):(y[u]=lr(I),y[u].c(),ue(y[u],1),y[u].m(o,r))}for(;u<y.length;u+=1)y[u].d(1);y.length=x.length}if(w&37){G=p[11];let u;for(u=0;u<G.length;u+=1){const I=ar(p,G,u);M[u]?M[u].p(I,w):(M[u]=sr(I),M[u].c(),M[u].m(o,null))}for(;u<M.length;u+=1)M[u].d(1);M.length=G.length}},i(p){for(let w=0;w<g.length;w+=1)ue(m[w]);for(let w=0;w<x.length;w+=1)ue(y[w])},o:C,d(p){p&&a(o),Un(m,p),Un(y,p),Un(M,p),n[8](null),h=!1,_()}}}function rr(n){let o,l,r,h=n[16]+"",_,g;return{c(){o=q("g"),l=q("line"),r=q("text"),_=i(h),this.h()},l(m){o=A(m,"g",{});var x=f(o);l=A(x,"line",{x2:!0,y1:!0,y2:!0,stroke:!0}),f(l).forEach(a),r=A(x,"text",{"text-anchor":!0,"dominant-baseline":!0,dx:!0,y:!0});var y=f(r);_=s(y,h),y.forEach(a),x.forEach(a),this.h()},h(){E(l,"x2",W),E(l,"y1",n[3](n[16])),E(l,"y2",n[3](n[16])),E(l,"stroke","grey"),E(r,"text-anchor","end"),E(r,"dominant-baseline","middle"),E(r,"dx","-10"),E(r,"y",n[3](n[16]))},m(m,x){v(m,o,x),t(o,l),t(o,r),t(r,_)},p:C,i(m){g||dr(()=>{g=pr(o,Cr,{x:-200,duration:1e3}),g.start()})},o:C,d(m){m&&a(o)}}}function lr(n){let o,l,r,h;function _(){return n[6](n[14])}function g(){return n[7](n[14])}return{c(){o=q("rect"),this.h()},l(m){o=A(m,"rect",{y:!0,x:!0,width:!0,height:!0,fill:!0}),f(o).forEach(a),this.h()},h(){E(o,"y",n[3](Math.max(0,n[12].amount))),E(o,"x",n[4](n[12].year_of_balance)),E(o,"width",n[4].bandwidth()),E(o,"height",Math.abs(n[3](n[12].amount)-n[3](0))),E(o,"fill",n[12].amount<0?"brown":"steelblue")},m(m,x){v(m,o,x),r||(h=[Xn(o,"mouseenter",_),Xn(o,"mouseleave",g)],r=!0)},p(m,x){n=m},i(m){l||dr(()=>{l=pr(o,Lr,{delay:n[14]*80}),l.start()})},o:C,d(m){m&&a(o),r=!1,Dr(h)}}}function ir(n){let o,l,r=n[12].year_of_balance+"",h,_,g,m,x,y=n[12].amount+"",G,M,p,w,u,I=n[12].actual_revised_estimated+"",H,L,Z,V,ce,de=n[12].item+"",z,j,ae;return{c(){o=q("text"),l=i("Year: "),h=i(r),m=q("text"),x=i("Balance: "),G=i(y),w=q("text"),u=i("Type: "),H=i(I),V=q("text"),ce=i("Item: "),z=i(de),this.h()},l(S){o=A(S,"text",{x:!0,y:!0,"dominant-baseline":!0});var O=f(o);l=s(O,"Year: "),h=s(O,r),O.forEach(a),m=A(S,"text",{x:!0,y:!0,"dominant-baseline":!0});var pe=f(m);x=s(pe,"Balance: "),G=s(pe,y),pe.forEach(a),w=A(S,"text",{x:!0,y:!0,"dominant-baseline":!0});var ne=f(w);u=s(ne,"Type: "),H=s(ne,I),ne.forEach(a),V=A(S,"text",{x:!0,y:!0,"dominant-baseline":!0});var U=f(V);ce=s(U,"Item: "),z=s(U,de),U.forEach(a),this.h()},h(){E(o,"x",_=Math.min(n[2].x,W-120)),E(o,"y",g=n[12].amount>0?n[2].y-10:n[2].y+20),E(o,"dominant-baseline",n[12].amount>0?"baseline":"hanging"),E(m,"x",M=Math.min(n[2].x,W-120)),E(m,"y",p=n[12].amount>0?n[2].y-24:n[2].y+34),E(m,"dominant-baseline",n[12].amount>0?"baseline":"hanging"),E(w,"x",L=Math.min(n[2].x,W-120)),E(w,"y",Z=n[12].amount>0?n[2].y-38:n[2].y+48),E(w,"dominant-baseline",n[12].amount>0?"baseline":"hanging"),E(V,"x",j=Math.min(n[2].x,W-120)),E(V,"y",ae=n[12].amount>0?n[2].y-52:n[2].y+62),E(V,"dominant-baseline",n[12].amount>0?"baseline":"hanging")},m(S,O){v(S,o,O),t(o,l),t(o,h),v(S,m,O),t(m,x),t(m,G),v(S,w,O),t(w,u),t(w,H),v(S,V,O),t(V,ce),t(V,z)},p(S,O){O&4&&_!==(_=Math.min(S[2].x,W-120))&&E(o,"x",_),O&4&&g!==(g=S[12].amount>0?S[2].y-10:S[2].y+20)&&E(o,"y",g),O&4&&M!==(M=Math.min(S[2].x,W-120))&&E(m,"x",M),O&4&&p!==(p=S[12].amount>0?S[2].y-24:S[2].y+34)&&E(m,"y",p),O&4&&L!==(L=Math.min(S[2].x,W-120))&&E(w,"x",L),O&4&&Z!==(Z=S[12].amount>0?S[2].y-38:S[2].y+48)&&E(w,"y",Z),O&4&&j!==(j=Math.min(S[2].x,W-120))&&E(V,"x",j),O&4&&ae!==(ae=S[12].amount>0?S[2].y-52:S[2].y+62)&&E(V,"y",ae)},d(S){S&&a(o),S&&a(m),S&&a(w),S&&a(V)}}}function sr(n){let o,l=n[0][n[14]]&&ir(n);return{c(){l&&l.c(),o=fe()},l(r){l&&l.l(r),o=fe()},m(r,h){l&&l.m(r,h),v(r,o,h)},p(r,h){r[0][r[14]]?l?l.p(r,h):(l=ir(r),l.c(),l.m(o.parentNode,o)):l&&(l.d(1),l=null)},d(r){l&&l.d(r),r&&a(o)}}}function tl(n){let o,l,r;return{c(){o=q("svg"),l=q("path"),r=q("animateTransform"),this.h()},l(h){o=A(h,"svg",{viewBox:!0});var _=f(o);l=A(_,"path",{fill:!0,d:!0});var g=f(l);r=A(g,"animateTransform",{attributeName:!0,attributeType:!0,type:!0,dur:!0,from:!0,to:!0,repeatCount:!0}),f(r).forEach(a),g.forEach(a),_.forEach(a),this.h()},h(){E(r,"attributeName","transform"),E(r,"attributeType","XML"),E(r,"type","rotate"),E(r,"dur","1s"),E(r,"from","0 50 50"),E(r,"to","360 50 50"),E(r,"repeatCount","indefinite"),E(l,"fill","black"),E(l,"d","M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50"),E(o,"viewBox",0-he+" "+(0-he)+" "+(W+2*he)+" "+($n+2*he))},m(h,_){v(h,o,_),t(o,l),t(l,r)},p:C,i:C,o:C,d(h){h&&a(o)}}}function al(n){let o,l={ctx:n,current:null,token:null,hasCatch:!1,pending:tl,then:el,catch:Zr,value:11};return Mr(n[5],l),{c(){o=fe(),l.block.c()},l(r){o=fe(),l.block.l(r)},m(r,h){v(r,o,h),l.block.m(r,l.anchor=h),l.mount=()=>o.parentNode,l.anchor=o},p(r,[h]){n=r,Sr(l,n,h)},i(r){ue(l.block)},o:C,d(r){r&&a(o),l.block.d(r),l.token=null,l=null}}}let he=100,$n=600,W=800;async function nl(n){return(await n).filter(l=>l.item=="Overall Balance")}function ol(n,o,l){let r=new DOMPoint;return r.x=o,r.y=l,r.matrixTransform(n.getScreenCTM().inverse())}function rl(n,o,l){let r=_r(),h=vr(),_=null,g=Pr(),m=nl(g).then(u=>{let I=u.map(L=>L.amount),H=u.map(L=>L.year_of_balance);return r.domain([Math.min(...I),Math.max(...I)]).range([$n,0]),h.domain(H).range([0,W]).paddingInner(.1),l(0,_=I.map(()=>!1)),u}),x,y;const G=u=>{l(0,_[u]=!0,_)},M=u=>{l(0,_[u]=!1,_)};function p(u){kr[u?"unshift":"push"](()=>{x=u,l(1,x)})}return[_,x,y,r,h,m,G,M,p,u=>{x&&l(2,y=ol(x,u.clientX,u.clientY))}]}class ll extends fr{constructor(o){super(),hr(this,o,rl,al,cr,{})}}function il(n){let o,l,r,h,_,g,m,x,y,G,M,p,w,u,I,H,L,Z,V,ce,de,z,j,ae,S,O,pe,ne,U,ta,kt,me,aa,Be,na,Dt,xe,oa,Gt,ve,ra,Ne,la,It,Me,ia,Ot,X,sa,He,ua,fa,ze,ha,ca,Vt,oe,da,Re,pa,ma,Tt,re,va,Fe,_a,ba,Ct,Se,ya,Lt,ke,ga,Pt,Y,Ea,We,wa,xa,qe,Ma,Sa,Bt,_e,br=`<code class="language-undefined">const interpolateFunction = scaleLinear() // returns a interpolating function
    .domain([0, 10]) // provide the min and max of our data
    .range([0, 200]) // provide the min and max of our SVG coords

interpolateFunction(0) // returns 0
interpolateFunction(5) // returns 100
interpolateFunction(10) // returns 200</code>`,Nt,De,ka,Ht,P,Da,Ae,Ga,Ia,je,Oa,Va,Ue,Ta,Ca,Xe,La,Pa,zt,be,yr=`<code class="language-undefined">const reverseInterpolate = scaleLinear()
    .domain([0, 10])
    .range([200, 0]) // Note: elements in array has been swapped!

reverseInterpolate(0) // returns 200
reverseInterpolate(5) // returns 100
reverseInterpolate(10) // returns 0</code>`,Rt,B,Ba,Ye,Na,Ha,$e,za,Ra,Ke,Fa,Wa,Qe,qa,Aa,Ft,Ge,ja,Wt,N,Ua,Je,Xa,Ya,Ze,$a,Ka,et,Qa,Ja,tt,Za,en,qt,ye,gr=`<code class="language-undefined">const categoricalInterpolate = scaleBand()
    .domain([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]) // provide array of your categories
    .range([0, 200]) // provide min and max of your SVG coords
    // optionally set the gaps between bars
    // as a proportion of width of bar, 0 to 1
    reverseInterpolate(yData) - reverseInterpolate(0)
    // optionally set the gaps to the left and right of the first and last bar
    // as a proportion of width of bar, 0 to 1
    .paddingOuter(0.5)

categoricalInterpolate(&#39;a&#39;) // returns position of left side of the &#39;a&#39; bar
categoricalInterpolate.step() // returns the length between start of 2 consecutive bars
categoricalInterpoalte.bandwidth() // returns the width of the bar</code>`,At,Ie,tn,jt,T,an,at,nn,on,nt,rn,ln,ot,sn,un,rt,fn,hn,lt,cn,dn,Ut,$,pn,it,mn,vn,st,_n,bn,Xt,R,ge,ut,yn,gn,ft,En,wn,Ee,ht,xn,Mn,ct,Sn,kn,le,dt,Dn,Gn,pt,In,mt,ee,On,vt,Vn,Tn,_t,Cn,Ln,Pn,ie,bt,Bn,Nn,yt,Hn,gt,te,zn,Et,Rn,Fn,wt,Wn,qn,Yt,we,$t;return we=new ll({}),{c(){o=c("h1"),l=i(ur),r=k(),h=c("h2"),_=i("SVG fundamentals"),g=k(),m=c("p"),x=i("SVG provides elements that describe shapes / curves, similar to how HTML provides elements that describe headers, paragraphs."),y=k(),G=c("p"),M=i("SVG document starts with "),p=c("code"),w=i("<svg>"),u=i(" root element, and within it you can put various shape elements, and group those together using "),I=c("code"),H=i("<g>"),L=i(" element."),Z=k(),V=c("p"),ce=i("SVG is actually an XML language, and therefore:"),de=k(),z=c("ul"),j=c("li"),ae=i("elements and attributes are case sensitive"),S=k(),O=c("li"),pe=i("attribute values must be inside quotes even if they are numbers."),ne=k(),U=c("h3"),ta=i("SVG coordinate system"),kt=k(),me=c("p"),aa=i("The origin(0,0) starts at the "),Be=c("strong"),na=i("top left"),Dt=k(),xe=c("p"),oa=i("The horizontal axis runs from left to right"),Gt=k(),ve=c("p"),ra=i("The vertical axis runs from "),Ne=c("strong"),la=i("top to bottom"),It=k(),Me=c("h3"),ia=i("SVG viewbox"),Ot=k(),X=c("p"),sa=i(`The unit of measurement in the SVG coordinates is by default 1unit = 1px of the device\u2019s screen.
However, since SVG is scalable, we can change the `),He=c("em"),ua=i("viewbox"),fa=i(" attribute of "),ze=c("code"),ha=i("<svg>"),ca=i(" to (automatically) map SVG\u2019s 1 unit to however big the screen size is."),Vt=k(),oe=c("p"),da=i("For example, defining a SVG canvas: "),Re=c("code"),pa=i('<svg viewBox="0 0 200 200">'),ma=i(". This translates to setting canvas top left corner to (0,0) and the canvas width and height to be 200. Say the canvas is displayed in a 1000px by 1000px screen, then 1 unit in SVG = 5 px on screen."),Tt=k(),re=c("p"),va=i("This is useful because you can fix the coordinates of the viewBox, allowing the SVG element sizes to be "),Fe=c("em"),_a=i("relative"),ba=i(" to the viewBox you defined, letting it scale to any screen size."),Ct=k(),Se=c("h3"),ya=i("mapping data values to SVG unit values"),Lt=k(),ke=c("p"),ga=i(`Now we need a way to map the values in our data to the SVG\u2019s coordinate system.
For example, say our data consists of numbers from 0 to 10, and our SVG\u2019s coordinate system is defined as 0 to 200 pixels. We will need to map the 0 in our data to 0 pixel in SVG, and 5 in our data to 100 pixel in SVG, etc.`),Pt=k(),Y=c("p"),Ea=i("To do this, "),We=c("code"),wa=i("d3-scale"),xa=i(" library has a lot of helper functions that can help us generate this mapping function. Specifically, "),qe=c("code"),Ma=i("scaleLinear"),Sa=i(" helps returns a linearly interpolating function that maps values between our data and the SVG coordinate."),Bt=k(),_e=c("pre"),Nt=k(),De=c("h3"),ka=i("vertical axis: inverted"),Ht=k(),P=c("p"),Da=i(`Above works fine for horizontal axis, but vertical axis is inverted in SVG.
In other words, the `),Ae=c("strong"),Ga=i("larger"),Ia=i(" the y value, the "),je=c("strong"),Oa=i("lower"),Va=i(` the point will be shown inside the SVG.
This is not how normal charts work.
Luckily there is an easy trick to solve this using `),Ue=c("code"),Ta=i("scaleLinear()"),Ca=i(": reverse arguments in "),Xe=c("code"),La=i(".range()"),Pa=i(" method!"),zt=k(),be=c("pre"),Rt=k(),B=c("p"),Ba=i("By just swapping the elements in the "),Ye=c("code"),Na=i(".range()"),Ha=i(" method, the returned "),$e=c("code"),za=i("reverseInerpolate"),Ra=i(" function now maps "),Ke=c("strong"),Fa=i("larger"),Wa=i(" y value to a "),Qe=c("strong"),qa=i("higher"),Aa=i(" point inside the SVG."),Ft=k(),Ge=c("h3"),ja=i("horizontal axis: cateogories"),Wt=k(),N=c("p"),Ua=i("Horizontal axis for bar charts are usually categorical variables. This means using "),Je=c("code"),Xa=i("scaleLinear()"),Ya=i(` does not make sense.
`),Ze=c("code"),$a=i("d3-scale"),Ka=i(" provides another helper function, "),et=c("code"),Qa=i("scaleBand()"),Ja=i(` that will help us interpolate the horizontal positions of the bars.
The returned function will give us the horizontal position of the `),tt=c("em"),Za=i("left"),en=i(" side of the bar (i.e. the start of the bar)"),qt=k(),ye=c("pre"),At=k(),Ie=c("h3"),tn=i("drawing bars"),jt=k(),T=c("p"),an=i("We can draw bars with "),at=c("code"),nn=i("<rect>"),on=i(` svg element.
This element requires us to specify the rectangle\u2019s top left position `),nt=c("code"),rn=i("x"),ln=i(" and "),ot=c("code"),sn=i("y"),un=i(", the "),rt=c("code"),fn=i("height"),hn=i(" (how far down), and the "),lt=c("code"),cn=i("width"),dn=i(" (how far right)."),Ut=k(),$=c("p"),pn=i("We can determine the 4 properties for each data point "),it=c("code"),mn=i("(xData, yData)"),vn=i(" with the two "),st=c("code"),_n=i("d3-scale"),bn=i(" interpolating functions we have created:"),Xt=k(),R=c("ul"),ge=c("li"),ut=c("code"),yn=i("x"),gn=i(" = "),ft=c("code"),En=i("categoricalInterpolate(xData)"),wn=k(),Ee=c("li"),ht=c("code"),xn=i("width"),Mn=i(" = "),ct=c("code"),Sn=i("categoricalInterpolate.bandwidth()"),kn=k(),le=c("li"),dt=c("code"),Dn=i("y"),Gn=i(" = "),pt=c("code"),In=i("reverseInterpolate(yData)"),mt=c("ul"),ee=c("li"),On=i("to handle negative "),vt=c("code"),Vn=i("yData"),Tn=i(", use "),_t=c("code"),Cn=i("reverseInterpolate(Math.max(0, yData))"),Ln=i(" to get the yData position if its positive, or the x-axis position if yData is negative"),Pn=k(),ie=c("li"),bt=c("code"),Bn=i("height"),Nn=i(" = "),yt=c("code"),Hn=i("reverseInterpolate(yData) - reverseInterpolate(0)"),gt=c("ul"),te=c("li"),zn=i("to handle negative "),Et=c("code"),Rn=i("yData"),Fn=i(", use "),wt=c("code"),Wn=i("Math.abs(reverseInterpolate(yData) - reverseInterpolate(0))"),qn=i(" to get distance between tip of bar and x-axis"),Yt=k(),Gr(we.$$.fragment),this.h()},l(e){o=d(e,"H1",{});var b=f(o);l=s(b,ur),b.forEach(a),r=D(e),h=d(e,"H2",{});var Kn=f(h);_=s(Kn,"SVG fundamentals"),Kn.forEach(a),g=D(e),m=d(e,"P",{});var Qn=f(m);x=s(Qn,"SVG provides elements that describe shapes / curves, similar to how HTML provides elements that describe headers, paragraphs."),Qn.forEach(a),y=D(e),G=d(e,"P",{});var Oe=f(G);M=s(Oe,"SVG document starts with "),p=d(Oe,"CODE",{});var Jn=f(p);w=s(Jn,"<svg>"),Jn.forEach(a),u=s(Oe," root element, and within it you can put various shape elements, and group those together using "),I=d(Oe,"CODE",{});var Zn=f(I);H=s(Zn,"<g>"),Zn.forEach(a),L=s(Oe," element."),Oe.forEach(a),Z=D(e),V=d(e,"P",{});var eo=f(V);ce=s(eo,"SVG is actually an XML language, and therefore:"),eo.forEach(a),de=D(e),z=d(e,"UL",{});var Kt=f(z);j=d(Kt,"LI",{});var to=f(j);ae=s(to,"elements and attributes are case sensitive"),to.forEach(a),S=D(Kt),O=d(Kt,"LI",{});var ao=f(O);pe=s(ao,"attribute values must be inside quotes even if they are numbers."),ao.forEach(a),Kt.forEach(a),ne=D(e),U=d(e,"H3",{});var no=f(U);ta=s(no,"SVG coordinate system"),no.forEach(a),kt=D(e),me=d(e,"P",{});var An=f(me);aa=s(An,"The origin(0,0) starts at the "),Be=d(An,"STRONG",{});var oo=f(Be);na=s(oo,"top left"),oo.forEach(a),An.forEach(a),Dt=D(e),xe=d(e,"P",{});var ro=f(xe);oa=s(ro,"The horizontal axis runs from left to right"),ro.forEach(a),Gt=D(e),ve=d(e,"P",{});var jn=f(ve);ra=s(jn,"The vertical axis runs from "),Ne=d(jn,"STRONG",{});var lo=f(Ne);la=s(lo,"top to bottom"),lo.forEach(a),jn.forEach(a),It=D(e),Me=d(e,"H3",{});var io=f(Me);ia=s(io,"SVG viewbox"),io.forEach(a),Ot=D(e),X=d(e,"P",{});var Ve=f(X);sa=s(Ve,`The unit of measurement in the SVG coordinates is by default 1unit = 1px of the device\u2019s screen.
However, since SVG is scalable, we can change the `),He=d(Ve,"EM",{});var so=f(He);ua=s(so,"viewbox"),so.forEach(a),fa=s(Ve," attribute of "),ze=d(Ve,"CODE",{});var uo=f(ze);ha=s(uo,"<svg>"),uo.forEach(a),ca=s(Ve," to (automatically) map SVG\u2019s 1 unit to however big the screen size is."),Ve.forEach(a),Vt=D(e),oe=d(e,"P",{});var Qt=f(oe);da=s(Qt,"For example, defining a SVG canvas: "),Re=d(Qt,"CODE",{});var fo=f(Re);pa=s(fo,'<svg viewBox="0 0 200 200">'),fo.forEach(a),ma=s(Qt,". This translates to setting canvas top left corner to (0,0) and the canvas width and height to be 200. Say the canvas is displayed in a 1000px by 1000px screen, then 1 unit in SVG = 5 px on screen."),Qt.forEach(a),Tt=D(e),re=d(e,"P",{});var Jt=f(re);va=s(Jt,"This is useful because you can fix the coordinates of the viewBox, allowing the SVG element sizes to be "),Fe=d(Jt,"EM",{});var ho=f(Fe);_a=s(ho,"relative"),ho.forEach(a),ba=s(Jt," to the viewBox you defined, letting it scale to any screen size."),Jt.forEach(a),Ct=D(e),Se=d(e,"H3",{});var co=f(Se);ya=s(co,"mapping data values to SVG unit values"),co.forEach(a),Lt=D(e),ke=d(e,"P",{});var po=f(ke);ga=s(po,`Now we need a way to map the values in our data to the SVG\u2019s coordinate system.
For example, say our data consists of numbers from 0 to 10, and our SVG\u2019s coordinate system is defined as 0 to 200 pixels. We will need to map the 0 in our data to 0 pixel in SVG, and 5 in our data to 100 pixel in SVG, etc.`),po.forEach(a),Pt=D(e),Y=d(e,"P",{});var Te=f(Y);Ea=s(Te,"To do this, "),We=d(Te,"CODE",{});var mo=f(We);wa=s(mo,"d3-scale"),mo.forEach(a),xa=s(Te," library has a lot of helper functions that can help us generate this mapping function. Specifically, "),qe=d(Te,"CODE",{});var vo=f(qe);Ma=s(vo,"scaleLinear"),vo.forEach(a),Sa=s(Te," helps returns a linearly interpolating function that maps values between our data and the SVG coordinate."),Te.forEach(a),Bt=D(e),_e=d(e,"PRE",{class:!0});var Er=f(_e);Er.forEach(a),Nt=D(e),De=d(e,"H3",{});var _o=f(De);ka=s(_o,"vertical axis: inverted"),_o.forEach(a),Ht=D(e),P=d(e,"P",{});var K=f(P);Da=s(K,`Above works fine for horizontal axis, but vertical axis is inverted in SVG.
In other words, the `),Ae=d(K,"STRONG",{});var bo=f(Ae);Ga=s(bo,"larger"),bo.forEach(a),Ia=s(K," the y value, the "),je=d(K,"STRONG",{});var yo=f(je);Oa=s(yo,"lower"),yo.forEach(a),Va=s(K,` the point will be shown inside the SVG.
This is not how normal charts work.
Luckily there is an easy trick to solve this using `),Ue=d(K,"CODE",{});var go=f(Ue);Ta=s(go,"scaleLinear()"),go.forEach(a),Ca=s(K,": reverse arguments in "),Xe=d(K,"CODE",{});var Eo=f(Xe);La=s(Eo,".range()"),Eo.forEach(a),Pa=s(K," method!"),K.forEach(a),zt=D(e),be=d(e,"PRE",{class:!0});var wr=f(be);wr.forEach(a),Rt=D(e),B=d(e,"P",{});var Q=f(B);Ba=s(Q,"By just swapping the elements in the "),Ye=d(Q,"CODE",{});var wo=f(Ye);Na=s(wo,".range()"),wo.forEach(a),Ha=s(Q," method, the returned "),$e=d(Q,"CODE",{});var xo=f($e);za=s(xo,"reverseInerpolate"),xo.forEach(a),Ra=s(Q," function now maps "),Ke=d(Q,"STRONG",{});var Mo=f(Ke);Fa=s(Mo,"larger"),Mo.forEach(a),Wa=s(Q," y value to a "),Qe=d(Q,"STRONG",{});var So=f(Qe);qa=s(So,"higher"),So.forEach(a),Aa=s(Q," point inside the SVG."),Q.forEach(a),Ft=D(e),Ge=d(e,"H3",{});var ko=f(Ge);ja=s(ko,"horizontal axis: cateogories"),ko.forEach(a),Wt=D(e),N=d(e,"P",{});var J=f(N);Ua=s(J,"Horizontal axis for bar charts are usually categorical variables. This means using "),Je=d(J,"CODE",{});var Do=f(Je);Xa=s(Do,"scaleLinear()"),Do.forEach(a),Ya=s(J,` does not make sense.
`),Ze=d(J,"CODE",{});var Go=f(Ze);$a=s(Go,"d3-scale"),Go.forEach(a),Ka=s(J," provides another helper function, "),et=d(J,"CODE",{});var Io=f(et);Qa=s(Io,"scaleBand()"),Io.forEach(a),Ja=s(J,` that will help us interpolate the horizontal positions of the bars.
The returned function will give us the horizontal position of the `),tt=d(J,"EM",{});var Oo=f(tt);Za=s(Oo,"left"),Oo.forEach(a),en=s(J," side of the bar (i.e. the start of the bar)"),J.forEach(a),qt=D(e),ye=d(e,"PRE",{class:!0});var xr=f(ye);xr.forEach(a),At=D(e),Ie=d(e,"H3",{});var Vo=f(Ie);tn=s(Vo,"drawing bars"),Vo.forEach(a),jt=D(e),T=d(e,"P",{});var F=f(T);an=s(F,"We can draw bars with "),at=d(F,"CODE",{});var To=f(at);nn=s(To,"<rect>"),To.forEach(a),on=s(F,` svg element.
This element requires us to specify the rectangle\u2019s top left position `),nt=d(F,"CODE",{});var Co=f(nt);rn=s(Co,"x"),Co.forEach(a),ln=s(F," and "),ot=d(F,"CODE",{});var Lo=f(ot);sn=s(Lo,"y"),Lo.forEach(a),un=s(F,", the "),rt=d(F,"CODE",{});var Po=f(rt);fn=s(Po,"height"),Po.forEach(a),hn=s(F," (how far down), and the "),lt=d(F,"CODE",{});var Bo=f(lt);cn=s(Bo,"width"),Bo.forEach(a),dn=s(F," (how far right)."),F.forEach(a),Ut=D(e),$=d(e,"P",{});var Ce=f($);pn=s(Ce,"We can determine the 4 properties for each data point "),it=d(Ce,"CODE",{});var No=f(it);mn=s(No,"(xData, yData)"),No.forEach(a),vn=s(Ce," with the two "),st=d(Ce,"CODE",{});var Ho=f(st);_n=s(Ho,"d3-scale"),Ho.forEach(a),bn=s(Ce," interpolating functions we have created:"),Ce.forEach(a),Xt=D(e),R=d(e,"UL",{});var se=f(R);ge=d(se,"LI",{});var Zt=f(ge);ut=d(Zt,"CODE",{});var zo=f(ut);yn=s(zo,"x"),zo.forEach(a),gn=s(Zt," = "),ft=d(Zt,"CODE",{});var Ro=f(ft);En=s(Ro,"categoricalInterpolate(xData)"),Ro.forEach(a),Zt.forEach(a),wn=D(se),Ee=d(se,"LI",{});var ea=f(Ee);ht=d(ea,"CODE",{});var Fo=f(ht);xn=s(Fo,"width"),Fo.forEach(a),Mn=s(ea," = "),ct=d(ea,"CODE",{});var Wo=f(ct);Sn=s(Wo,"categoricalInterpolate.bandwidth()"),Wo.forEach(a),ea.forEach(a),kn=D(se),le=d(se,"LI",{});var xt=f(le);dt=d(xt,"CODE",{});var qo=f(dt);Dn=s(qo,"y"),qo.forEach(a),Gn=s(xt," = "),pt=d(xt,"CODE",{});var Ao=f(pt);In=s(Ao,"reverseInterpolate(yData)"),Ao.forEach(a),mt=d(xt,"UL",{});var jo=f(mt);ee=d(jo,"LI",{});var Le=f(ee);On=s(Le,"to handle negative "),vt=d(Le,"CODE",{});var Uo=f(vt);Vn=s(Uo,"yData"),Uo.forEach(a),Tn=s(Le,", use "),_t=d(Le,"CODE",{});var Xo=f(_t);Cn=s(Xo,"reverseInterpolate(Math.max(0, yData))"),Xo.forEach(a),Ln=s(Le," to get the yData position if its positive, or the x-axis position if yData is negative"),Le.forEach(a),jo.forEach(a),xt.forEach(a),Pn=D(se),ie=d(se,"LI",{});var Mt=f(ie);bt=d(Mt,"CODE",{});var Yo=f(bt);Bn=s(Yo,"height"),Yo.forEach(a),Nn=s(Mt," = "),yt=d(Mt,"CODE",{});var $o=f(yt);Hn=s($o,"reverseInterpolate(yData) - reverseInterpolate(0)"),$o.forEach(a),gt=d(Mt,"UL",{});var Ko=f(gt);te=d(Ko,"LI",{});var Pe=f(te);zn=s(Pe,"to handle negative "),Et=d(Pe,"CODE",{});var Qo=f(Et);Rn=s(Qo,"yData"),Qo.forEach(a),Fn=s(Pe,", use "),wt=d(Pe,"CODE",{});var Jo=f(wt);Wn=s(Jo,"Math.abs(reverseInterpolate(yData) - reverseInterpolate(0))"),Jo.forEach(a),qn=s(Pe," to get distance between tip of bar and x-axis"),Pe.forEach(a),Ko.forEach(a),Mt.forEach(a),se.forEach(a),Yt=D(e),Ir(we.$$.fragment,e),this.h()},h(){E(_e,"class","language-undefined"),E(be,"class","language-undefined"),E(ye,"class","language-undefined")},m(e,b){v(e,o,b),t(o,l),v(e,r,b),v(e,h,b),t(h,_),v(e,g,b),v(e,m,b),t(m,x),v(e,y,b),v(e,G,b),t(G,M),t(G,p),t(p,w),t(G,u),t(G,I),t(I,H),t(G,L),v(e,Z,b),v(e,V,b),t(V,ce),v(e,de,b),v(e,z,b),t(z,j),t(j,ae),t(z,S),t(z,O),t(O,pe),v(e,ne,b),v(e,U,b),t(U,ta),v(e,kt,b),v(e,me,b),t(me,aa),t(me,Be),t(Be,na),v(e,Dt,b),v(e,xe,b),t(xe,oa),v(e,Gt,b),v(e,ve,b),t(ve,ra),t(ve,Ne),t(Ne,la),v(e,It,b),v(e,Me,b),t(Me,ia),v(e,Ot,b),v(e,X,b),t(X,sa),t(X,He),t(He,ua),t(X,fa),t(X,ze),t(ze,ha),t(X,ca),v(e,Vt,b),v(e,oe,b),t(oe,da),t(oe,Re),t(Re,pa),t(oe,ma),v(e,Tt,b),v(e,re,b),t(re,va),t(re,Fe),t(Fe,_a),t(re,ba),v(e,Ct,b),v(e,Se,b),t(Se,ya),v(e,Lt,b),v(e,ke,b),t(ke,ga),v(e,Pt,b),v(e,Y,b),t(Y,Ea),t(Y,We),t(We,wa),t(Y,xa),t(Y,qe),t(qe,Ma),t(Y,Sa),v(e,Bt,b),v(e,_e,b),_e.innerHTML=br,v(e,Nt,b),v(e,De,b),t(De,ka),v(e,Ht,b),v(e,P,b),t(P,Da),t(P,Ae),t(Ae,Ga),t(P,Ia),t(P,je),t(je,Oa),t(P,Va),t(P,Ue),t(Ue,Ta),t(P,Ca),t(P,Xe),t(Xe,La),t(P,Pa),v(e,zt,b),v(e,be,b),be.innerHTML=yr,v(e,Rt,b),v(e,B,b),t(B,Ba),t(B,Ye),t(Ye,Na),t(B,Ha),t(B,$e),t($e,za),t(B,Ra),t(B,Ke),t(Ke,Fa),t(B,Wa),t(B,Qe),t(Qe,qa),t(B,Aa),v(e,Ft,b),v(e,Ge,b),t(Ge,ja),v(e,Wt,b),v(e,N,b),t(N,Ua),t(N,Je),t(Je,Xa),t(N,Ya),t(N,Ze),t(Ze,$a),t(N,Ka),t(N,et),t(et,Qa),t(N,Ja),t(N,tt),t(tt,Za),t(N,en),v(e,qt,b),v(e,ye,b),ye.innerHTML=gr,v(e,At,b),v(e,Ie,b),t(Ie,tn),v(e,jt,b),v(e,T,b),t(T,an),t(T,at),t(at,nn),t(T,on),t(T,nt),t(nt,rn),t(T,ln),t(T,ot),t(ot,sn),t(T,un),t(T,rt),t(rt,fn),t(T,hn),t(T,lt),t(lt,cn),t(T,dn),v(e,Ut,b),v(e,$,b),t($,pn),t($,it),t(it,mn),t($,vn),t($,st),t(st,_n),t($,bn),v(e,Xt,b),v(e,R,b),t(R,ge),t(ge,ut),t(ut,yn),t(ge,gn),t(ge,ft),t(ft,En),t(R,wn),t(R,Ee),t(Ee,ht),t(ht,xn),t(Ee,Mn),t(Ee,ct),t(ct,Sn),t(R,kn),t(R,le),t(le,dt),t(dt,Dn),t(le,Gn),t(le,pt),t(pt,In),t(le,mt),t(mt,ee),t(ee,On),t(ee,vt),t(vt,Vn),t(ee,Tn),t(ee,_t),t(_t,Cn),t(ee,Ln),t(R,Pn),t(R,ie),t(ie,bt),t(bt,Bn),t(ie,Nn),t(ie,yt),t(yt,Hn),t(ie,gt),t(gt,te),t(te,zn),t(te,Et),t(Et,Rn),t(te,Fn),t(te,wt),t(wt,Wn),t(te,qn),v(e,Yt,b),Or(we,e,b),$t=!0},p:C,i(e){$t||(ue(we.$$.fragment,e),$t=!0)},o(e){Vr(we.$$.fragment,e),$t=!1},d(e){e&&a(o),e&&a(r),e&&a(h),e&&a(g),e&&a(m),e&&a(y),e&&a(G),e&&a(Z),e&&a(V),e&&a(de),e&&a(z),e&&a(ne),e&&a(U),e&&a(kt),e&&a(me),e&&a(Dt),e&&a(xe),e&&a(Gt),e&&a(ve),e&&a(It),e&&a(Me),e&&a(Ot),e&&a(X),e&&a(Vt),e&&a(oe),e&&a(Tt),e&&a(re),e&&a(Ct),e&&a(Se),e&&a(Lt),e&&a(ke),e&&a(Pt),e&&a(Y),e&&a(Bt),e&&a(_e),e&&a(Nt),e&&a(De),e&&a(Ht),e&&a(P),e&&a(zt),e&&a(be),e&&a(Rt),e&&a(B),e&&a(Ft),e&&a(Ge),e&&a(Wt),e&&a(N),e&&a(qt),e&&a(ye),e&&a(At),e&&a(Ie),e&&a(jt),e&&a(T),e&&a(Ut),e&&a($),e&&a(Xt),e&&a(R),e&&a(Yt),Tr(we,e)}}}const sl={title:"Drawing a Bar Chart",date:"2022-10-19"},{title:ur,date:dl}=sl;class pl extends fr{constructor(o){super(),hr(this,o,null,il,cr,{})}}export{pl as default,sl as metadata};
