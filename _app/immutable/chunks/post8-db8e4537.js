import{S as Md,i as Ad,s as Sd,k as r,q as o,a as c,l as n,m as f,r as a,h as t,c as p,n as u,b as i,B as l,A as yc}from"./index-4cbca6b4.js";function Ud(Ju){let M,Va,_s,Re,Fa,ys,Ie,Ba,ws,Te,qa,bs,He,ja,Ds,Le,za,Os,Ne,Xa,Cs,A,_,Qa,Jt,$a,Ja,Zt,Za,ga,gt,ei,ti,li,g,si,el,oi,ai,Ps,xe,ii,Rs,Me,ri,Is,ee,tl,ni,fi,Ts,Ae,ci,Hs,S,pi,ll,ui,di,Ls,Se,mi,Ns,Ue,Ei,xs,Ye,vi,Ms,U,hi,sl,ki,_i,As,Ke,yi,Ss,E,wi,ol,bi,Di,al,Oi,Ci,il,Pi,Ri,Us,We,Ii,Ys,Y,Ti,rl,Hi,Li,Ks,Ge,Ni,Ws,Ve,xi,Gs,K,Mi,nl,Ai,Si,Vs,Fe,Ui,Fs,Be,Yi,Bs,qe,Ki,qs,je,Wi,js,W,Gi,fl,Vi,Fi,zs,te,Zu=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">FROM</span> apache/spark</span>

<span class="token comment"># to specify a tag</span>
<span class="token instruction"><span class="token keyword">FROM</span> apache/spark:3.3.1</span></code>`,Xs,ze,Bi,Qs,Xe,qi,$s,le,gu=`<code class="language-dockerfile"><span class="token comment"># Shell form (defaults to /bin/sh -c on Linux or cmd /S /C on Windows)</span>
<span class="token instruction"><span class="token keyword">RUN</span> &lt;command></span>

<span class="token comment"># Exec form</span>
<span class="token instruction"><span class="token keyword">RUN</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>]</span></code>`,Js,Qe,ji,Zs,$e,zi,gs,se,ed=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # exec form</span>
<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # default parameters to ENTRYPOINT</span>
<span class="token instruction"><span class="token keyword">CMD</span> command param1 param2 # shell form</span></code>`,eo,Je,Xi,to,Ze,Qi,lo,oe,td=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ENTRYPOINT</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # exec form</span>
<span class="token instruction"><span class="token keyword">ENTRYPOINT</span> command param1 param2 # shell form</span></code>`,so,ge,$i,oo,et,Ji,ao,ae,ld=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">COPY</span> &lt;src>... &lt;dest></span>
<span class="token instruction"><span class="token keyword">COPY</span> [<span class="token string">"&lt;src>"</span>,... <span class="token string">"&lt;dest>"</span>] # used when there are spaces in path</span></code>`,io,b,Zi,cl,gi,er,pl,tr,lr,ro,G,sr,ul,or,ar,no,tt,ir,fo,lt,rr,co,ie,sd=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ADD</span> &lt;src>... &lt;dest></span>
<span class="token instruction"><span class="token keyword">ADD</span> [<span class="token string">"&lt;src>"</span>,... <span class="token string">"&lt;dest>"</span>] # used when there are spaces in path</span></code>`,po,V,nr,dl,fr,cr,uo,D,ml,pr,ur,re,dr,El,mr,Er,vr,vl,hr,mo,ne,hl,kr,_r,Eo,O,yr,kl,wr,br,_l,Dr,Or,vo,F,Cr,yl,Pr,Rr,ho,st,Ir,ko,ot,Tr,_o,fe,od='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ENV</span> &lt;key>=&lt;value></span></code>',yo,at,Hr,wo,it,Lr,bo,ce,ad='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">EXPOSE</span> &lt;port> [&lt;port>/&lt;protocol>]</span></code>',Do,y,wl,Nr,xr,bl,Mr,Ar,Dl,Sr,Ur,Oo,rt,Yr,Co,nt,Kr,Po,pe,id=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">VOLUME</span> &lt;path/to/container/dir> &lt;path/to/container/dir2> # space separated paths</span>
<span class="token instruction"><span class="token keyword">VOLUME</span> [<span class="token string">"&lt;/path/to/dir1>"</span>, <span class="token string">"&lt;/path/to/dir2>"</span>] #json array</span></code>`,Ro,B,Wr,Ol,Gr,Vr,Io,ft,Fr,To,d,Br,Cl,qr,jr,Pl,zr,Xr,Rl,Qr,$r,Il,Jr,Zr,Tl,gr,en,Ho,ue,rd=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">WORKDIR</span> /path/to/workdir # absolute paths, i.e. starts with /</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> path/to/child/dir # relative path, i.e. does not start with /</span></code>`,Lo,q,tn,Hl,ln,sn,No,C,on,Ll,an,rn,Nl,nn,fn,xo,ct,de,cn,xl,pn,un,Mo,P,dn,Ml,mn,En,Al,vn,hn,Ao,pt,kn,So,R,_n,Sl,yn,wn,Ul,bn,Dn,Uo,me,nd='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ARG</span> &lt;name>[=&lt;default value>]</span></code>',Yo,w,Yl,On,Cn,Kl,Pn,Rn,Wl,In,Tn,Ko,ut,Hn,Wo,dt,Ln,Go,Ee,fd='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ONBUILD</span> &lt;INSTRUCTION></span></code>',Vo,mt,Nn,Fo,ve,cd=`<code class="language-dockerfile"><span class="token comment"># copy host files to /contents in the container</span>
<span class="token instruction"><span class="token keyword">ONBUILD</span> <span class="token keyword">ADD</span> . /contents</span>

<span class="token comment"># tar all files in the /contents directory in the container to archive.tar in the container</span>
<span class="token instruction"><span class="token keyword">ONBUILD</span> <span class="token keyword">RUN</span> tar -cfv archive.tar /contents</span></code>`,Bo,I,xn,Gl,Mn,An,Vl,Sn,Un,qo,he,Fl,Yn,Kn,jo,Et,Wn,zo,vt,Gn,Xo,ke,pd='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">STOPSIGNAL</span> signal</span></code>',Qo,T,ht,Vn,Bl,Fn,Bn,x,qn,ql,jn,zn,jl,Xn,Qn,$n,_e,Jn,zl,Zn,gn,$o,kt,ef,Jo,_t,tf,Zo,ye,ud=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">HEALTHCHECK</span> [OPTIONS] CMD command</span>
<span class="token instruction"><span class="token keyword">HEALTHCHECK</span> <span class="token keyword">NONE</span> # disable any healthcheck from base image</span></code>`,go,we,Xl,lf,sf,ea,v,j,Ql,of,af,$l,rf,nf,ff,z,Jl,cf,pf,Zl,uf,df,mf,X,gl,Ef,vf,es,hf,kf,_f,Q,ts,yf,wf,ls,bf,Df,ta,m,Of,ss,Cf,Pf,os,Rf,If,as,Tf,Hf,is,Lf,Nf,rs,xf,Mf,la,H,Af,ns,Sf,Uf,fs,Yf,Kf,sa,L,Wf,cs,Gf,Vf,ps,Ff,Bf,oa,yt,qf,aa,N,jf,us,zf,Xf,ds,Qf,$f,ia,be,dd='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">SHELL</span> [<span class="token string">"executable"</span>, <span class="token string">"parameters"</span>]</span></code>',ra,wt,Jf,na,bt,Zf,fa,De,md=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">USER</span> &lt;user></span>
<span class="token instruction"><span class="token keyword">USER</span> &lt;UID></span></code>`,ca,Dt,gf,pa,Ot,ec,ua,Oe,Ed='<code class="language-undefined"></code>',da,Ct,tc,ma,Pt,ms,lc,Ea,Rt,sc,va,It,oc,ha,Tt,ac,ka,Ht,ic,_a,Lt,rc,ya,Nt,nc,wa,xt,fc,ba,Mt,cc,Da,At,pc,Oa,St,uc,Ca,Ut,dc,Pa,Yt,mc;return{c(){M=r("h1"),Va=o($u),_s=c(),Re=r("p"),Fa=o("Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),ys=c(),Ie=r("p"),Ba=o(`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),ws=c(),Te=r("h2"),qa=o("key concepts"),bs=c(),He=r("h3"),ja=o("Docker images"),Ds=c(),Le=r("p"),za=o(`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),Os=c(),Ne=r("p"),Xa=o("Images are often build on top of one another"),Cs=c(),A=r("ul"),_=r("li"),Qa=o("e.g. you start with "),Jt=r("code"),$a=o("ubuntu"),Ja=o(" image, install "),Zt=r("code"),Za=o("python"),ga=o(" in that ubuntu image, install "),gt=r("code"),ei=o("pytorch"),ti=o(" package, install pretrained models."),li=c(),g=r("li"),si=o("or you can start with a published "),el=r("code"),oi=o("python"),ai=o(" image, and install your packages there."),Ps=c(),xe=r("p"),ii=o("Published images are available for download in Docker registries."),Rs=c(),Me=r("h4"),ri=o("Dockerfile"),Is=c(),ee=r("p"),tl=r("code"),ni=o("Dockerfile"),fi=o("s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),Ts=c(),Ae=r("h3"),ci=o("Docker containers"),Hs=c(),S=r("p"),pi=o(`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),ll=r("code"),ui=o("nodejs"),di=o(" image, but one exposes port 8888 and another exposes port 8899."),Ls=c(),Se=r("h3"),mi=o("Docker registries"),Ns=c(),Ue=r("p"),Ei=o("Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),xs=c(),Ye=r("h3"),vi=o("Docker daemon"),Ms=c(),U=r("p"),hi=o("This is the underlying "),sl=r("code"),ki=o("dockerd"),_i=o(" process that helps you build images and run containers. It will listen for Docker API requests"),As=c(),Ke=r("h3"),yi=o("Docker client"),Ss=c(),E=r("p"),wi=o("The docker client "),ol=r("code"),bi=o("docker"),Di=o(" is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),al=r("code"),Oi=o("docker"),Ci=o(" command sends Docker API requests to "),il=r("code"),Pi=o("dockerd"),Ri=o("."),Us=c(),We=r("h3"),Ii=o("Docker compose"),Ys=c(),Y=r("p"),Ti=o("Docker compose is a tool that helps with running "),rl=r("em"),Hi=o("multi-container"),Li=o(" Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),Ks=c(),Ge=r("p"),Ni=o("For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),Ws=c(),Ve=r("h4"),xi=o("Difference between Kubernetes"),Gs=c(),K=r("p"),Mi=o("Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),nl=r("em"),Ai=o("single-node"),Si=o(", whereas Kubernetes is a full multi-node container manager."),Vs=c(),Fe=r("p"),Ui=o("Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),Fs=c(),Be=r("h2"),Yi=o("Dockerfile"),Bs=c(),qe=r("h3"),Ki=o("Commands"),qs=c(),je=r("h4"),Wi=o("FROM"),js=c(),W=r("p"),Gi=o("All dockerfile starts with the "),fl=r("code"),Vi=o("FROM"),Fi=o(" command. It pulls the base image from Dockerhub to start to build your image."),zs=c(),te=r("pre"),Xs=c(),ze=r("h4"),Bi=o("RUN"),Qs=c(),Xe=r("p"),qi=o("Runs a command or executable. It has two forms"),$s=c(),le=r("pre"),Js=c(),Qe=r("h4"),ji=o("CMD"),Zs=c(),$e=r("p"),zi=o("Provides defaults for an executing container. The arguments will be appended to ENTRYPOINT."),gs=c(),se=r("pre"),eo=c(),Je=r("h4"),Xi=o("ENTRYPOINT"),to=c(),Ze=r("p"),Qi=o(`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),lo=c(),oe=r("pre"),so=c(),ge=r("h4"),$i=o("COPY"),oo=c(),et=r("p"),Ji=o("Copies file from your native host into the container image."),ao=c(),ae=r("pre"),io=c(),b=r("p"),Zi=o("Multiple "),cl=r("code"),gi=o("<src>"),er=o(" can be specified, and the last argument will be treated as the "),pl=r("code"),tr=o("<dest>"),lr=o("."),ro=c(),G=r("p"),sr=o("All "),ul=r("code"),or=o("<src>"),ar=o(" relative paths must be inside context of the build!"),no=c(),tt=r("h4"),ir=o("ADD"),fo=c(),lt=r("p"),rr=o("Copies file from your native host into the container image."),co=c(),ie=r("pre"),po=c(),V=r("p"),nr=o("Compared to COPY, "),dl=r("code"),fr=o("ADD"),cr=o(" has added utilities like:"),uo=c(),D=r("ul"),ml=r("li"),pr=o("being able to download files from URLs then copying them into the image"),ur=c(),re=r("li"),dr=o("extracting contents of "),El=r("code"),mr=o(".tar"),Er=o(" files before copying into image"),vr=c(),vl=r("li"),hr=o("adding contents from a git repo"),mo=c(),ne=r("p"),hl=r("strong"),kr=o("tip: use COPY as default, unless you need the additional features of ADD."),_r=o(" This is to prevent unwanted side effects!"),Eo=c(),O=r("p"),yr=o("Multiple "),kl=r("code"),wr=o("<src>"),br=o(" can be specified, and the last argument will be treated as the "),_l=r("code"),Dr=o("<dest>"),Or=o("."),vo=c(),F=r("p"),Cr=o("All "),yl=r("code"),Pr=o("<src>"),Rr=o(" relative paths must be inside context of the build!"),ho=c(),st=r("h4"),Ir=o("ENV"),ko=c(),ot=r("p"),Tr=o("Sets an environment variable"),_o=c(),fe=r("pre"),yo=c(),at=r("h4"),Hr=o("EXPOSE"),wo=c(),it=r("p"),Lr=o("Instructs Docker that container should listen on specified network ports at runtime."),bo=c(),ce=r("pre"),Do=c(),y=r("p"),wl=r("strong"),Nr=o("Ports are not automatically published"),xr=o(`, and this command is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),bl=r("code"),Mr=o("-P"),Ar=o(" flag (which maps exposed ports in container to random ports in native host machine), or "),Dl=r("code"),Sr=o("-p"),Ur=o(" to explicitly map ports from containers to your localhost."),Oo=c(),rt=r("h4"),Yr=o("VOLUME"),Co=c(),nt=r("p"),Kr=o(`Marks the directory(s) within the container as an external drive from native host or other containers.
This allows files to be accessed from outside the containers.`),Po=c(),pe=r("pre"),Ro=c(),B=r("p"),Wr=o("Note that where this (container) directory maps to in your native host is "),Ol=r("strong"),Gr=o("specified when you build or run the container"),Vr=o("."),Io=c(),ft=r("h4"),Fr=o("WORKDIR"),To=c(),d=r("p"),Br=o("Sets working directory for any "),Cl=r("code"),qr=o("RUN"),jr=o(", "),Pl=r("code"),zr=o("CMD"),Xr=o(", "),Rl=r("code"),Qr=o("ENTRYPOINT"),$r=o(", "),Il=r("code"),Jr=o("COPY"),Zr=o(", "),Tl=r("code"),gr=o("ADD"),en=o(" instructions that follows."),Ho=c(),ue=r("pre"),Lo=c(),q=r("p"),tn=o("Multiple "),Hl=r("code"),ln=o("WORKDIR"),sn=o(" can be used in a dockerfile."),No=c(),C=r("p"),on=o("If not specified, default directory is "),Ll=r("code"),an=o("/"),rn=o(`.
But if you are pulling from an image, chances are `),Nl=r("code"),nn=o("WORKDIR"),fn=o(" already been set in your base image and it will be brought over."),xo=c(),ct=r("p"),de=r("strong"),cn=o("tip: explicitly set "),xl=r("code"),pn=o("WORKDIR"),un=o(" to prevent unintended operations in unknown dirs"),Mo=c(),P=r("p"),dn=o("It is also possible to resolve env variables previously set by "),Ml=r("code"),mn=o("ENV"),En=o(", e.g. "),Al=r("code"),vn=o("WORKDIR $DIRPATH_ENV_VAR"),hn=o("."),Ao=c(),pt=r("h4"),kn=o("ARG"),So=c(),R=r("p"),_n=o("Defines a variable that users can pass values into during "),Sl=r("code"),yn=o("docker build"),wn=o(" by using "),Ul=r("code"),bn=o("--build-arg <argname>=<value>"),Dn=o(" flag."),Uo=c(),me=r("pre"),Yo=c(),w=r("p"),Yl=r("code"),On=o("ENV"),Cn=o(" variables will overwrite "),Kl=r("code"),Pn=o("ARG"),Rn=o(" variables if they are the same name (at the point where the "),Wl=r("code"),In=o("ENV"),Tn=o(" variable is defined)."),Ko=c(),ut=r("h4"),Hn=o("ONBUILD"),Wo=c(),dt=r("p"),Ln=o("Adds a trigger to the image that will execute dockerfile instructions when the current image is used as the base for another build."),Go=c(),Ee=r("pre"),Vo=c(),mt=r("p"),Nn=o("This command is usful when when you are building a base image that will be distributed to other people, and instructions that depend on other people\u2019s files needs to be run. Example, you could add:"),Fo=c(),ve=r("pre"),Bo=c(),I=r("p"),xn=o("The instructions specified are triggered "),Gl=r("em"),Mn=o("immediately"),An=o(" after the "),Vl=r("code"),Sn=o("FROM"),Un=o(" instruction in the child image."),qo=c(),he=r("p"),Fl=r("code"),Yn=o("ONBUILD"),Kn=o(" triggers are not inherited by children images."),jo=c(),Et=r("h4"),Wn=o("STOPSIGNAL"),zo=c(),vt=r("p"),Gn=o("Sets the system call signal that will cause the container to exit."),Xo=c(),ke=r("pre"),Qo=c(),T=r("ul"),ht=r("li"),Vn=o("Default is "),Bl=r("code"),Fn=o("SIGTERM"),Bn=c(),x=r("li"),qn=o("Can be in "),ql=r("code"),jn=o("SIG<NAME>"),zn=o(" format (e.g. "),jl=r("code"),Xn=o("SIGKILL"),Qn=o(")"),$n=c(),_e=r("li"),Jn=o("Can be an unassigned number in kernel\u2019s syscall table (e.g. "),zl=r("code"),Zn=o("9"),gn=o(")"),$o=c(),kt=r("h4"),ef=o("HEALTHCHECK"),Jo=c(),_t=r("p"),tf=o("Specifies a command to be run inside the container to check container\u2019s health."),Zo=c(),ye=r("pre"),go=c(),we=r("p"),Xl=r("code"),lf=o("OPTIONS"),sf=o(" include:"),ea=c(),v=r("ul"),j=r("li"),Ql=r("code"),of=o("--interval=DURATION"),af=o(" (default "),$l=r("code"),rf=o("30s"),nf=o(")"),ff=c(),z=r("li"),Jl=r("code"),cf=o("--timeout=DURATION"),pf=o(" (default "),Zl=r("code"),uf=o("30s"),df=o(")"),mf=c(),X=r("li"),gl=r("code"),Ef=o("--retries=N"),vf=o(" (default "),es=r("code"),hf=o("3"),kf=o(")"),_f=c(),Q=r("li"),ts=r("code"),yf=o("--start-period=DURATION"),wf=o(" (default "),ls=r("code"),bf=o("0s"),Df=o(")"),ta=c(),m=r("p"),Of=o("A container that has "),ss=r("code"),Cf=o("HEALTHCHECK"),Pf=o(" specified will have a "),os=r("em"),Rf=o("health status"),If=o(" that can take 3 possible states: "),as=r("code"),Tf=o("starting"),Hf=o(" | "),is=r("code"),Lf=o("healthy"),Nf=o(" | "),rs=r("code"),xf=o("unhealthy"),Mf=o("."),la=c(),H=r("p"),Af=o("Whenever a health check passes, health status changes to "),ns=r("code"),Sf=o("healthy"),Uf=o(". After a number of consecutive failures, health status changes to "),fs=r("code"),Yf=o("unhealthy"),Kf=o("."),sa=c(),L=r("p"),Wf=o(`Health checks are run after every interval.
Health checks are considered failed when commands runs for longer than timeout.
When consecutive failures reaches max retries, or command exits with non zero status code `),cs=r("code"),Gf=o("0"),Vf=o(", "),ps=r("em"),Ff=o("health status"),Bf=o(" will change to unhealthy."),oa=c(),yt=r("h4"),qf=o("SHELL"),aa=c(),N=r("p"),jf=o("Specifies the default shell used for shell form of commands. Default is set to "),us=r("code"),zf=o('["/bin/sh", "-c"]'),Xf=o(" for Linux containers and "),ds=r("code"),Qf=o('["cmd", "/S", "/C"]'),$f=o(" for Windows containers."),ia=c(),be=r("pre"),ra=c(),wt=r("h4"),Jf=o("USER"),na=c(),bt=r("p"),Zf=o("Sets the username/UID to use for the remainder of the Docker build stage."),fa=c(),De=r("pre"),ca=c(),Dt=r("p"),gf=o(`This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),pa=c(),Ot=r("h4"),ec=o("LABEL"),ua=c(),Oe=r("pre"),da=c(),Ct=r("h3"),tc=o("Environment Replacement"),ma=c(),Pt=r("h3"),ms=r("code"),lc=o("dockerignore"),Ea=c(),Rt=r("h2"),sc=o("useful docker CLI commands"),va=c(),It=r("h3"),oc=o("docker run"),ha=c(),Tt=r("h3"),ac=o("docker build"),ka=c(),Ht=r("h3"),ic=o("docker logs"),_a=c(),Lt=r("h3"),rc=o("docker image"),ya=c(),Nt=r("h3"),nc=o("docker container"),wa=c(),xt=r("h3"),fc=o("docker network"),ba=c(),Mt=r("h3"),cc=o("docker volume"),Da=c(),At=r("h3"),pc=o("docker inspect"),Oa=c(),St=r("h3"),uc=o("docker ps"),Ca=c(),Ut=r("h2"),dc=o("networking"),Pa=c(),Yt=r("h2"),mc=o("disks"),this.h()},l(e){M=n(e,"H1",{});var s=f(M);Va=a(s,$u),s.forEach(t),_s=p(e),Re=n(e,"P",{});var wc=f(Re);Fa=a(wc,"Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),wc.forEach(t),ys=p(e),Ie=n(e,"P",{});var bc=f(Ie);Ba=a(bc,`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),bc.forEach(t),ws=p(e),Te=n(e,"H2",{});var Dc=f(Te);qa=a(Dc,"key concepts"),Dc.forEach(t),bs=p(e),He=n(e,"H3",{});var Oc=f(He);ja=a(Oc,"Docker images"),Oc.forEach(t),Ds=p(e),Le=n(e,"P",{});var Cc=f(Le);za=a(Cc,`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),Cc.forEach(t),Os=p(e),Ne=n(e,"P",{});var Pc=f(Ne);Xa=a(Pc,"Images are often build on top of one another"),Pc.forEach(t),Cs=p(e),A=n(e,"UL",{});var Ra=f(A);_=n(Ra,"LI",{});var $=f(_);Qa=a($,"e.g. you start with "),Jt=n($,"CODE",{});var Rc=f(Jt);$a=a(Rc,"ubuntu"),Rc.forEach(t),Ja=a($," image, install "),Zt=n($,"CODE",{});var Ic=f(Zt);Za=a(Ic,"python"),Ic.forEach(t),ga=a($," in that ubuntu image, install "),gt=n($,"CODE",{});var Tc=f(gt);ei=a(Tc,"pytorch"),Tc.forEach(t),ti=a($," package, install pretrained models."),$.forEach(t),li=p(Ra),g=n(Ra,"LI",{});var Ia=f(g);si=a(Ia,"or you can start with a published "),el=n(Ia,"CODE",{});var Hc=f(el);oi=a(Hc,"python"),Hc.forEach(t),ai=a(Ia," image, and install your packages there."),Ia.forEach(t),Ra.forEach(t),Ps=p(e),xe=n(e,"P",{});var Lc=f(xe);ii=a(Lc,"Published images are available for download in Docker registries."),Lc.forEach(t),Rs=p(e),Me=n(e,"H4",{});var Nc=f(Me);ri=a(Nc,"Dockerfile"),Nc.forEach(t),Is=p(e),ee=n(e,"P",{});var Ec=f(ee);tl=n(Ec,"CODE",{});var xc=f(tl);ni=a(xc,"Dockerfile"),xc.forEach(t),fi=a(Ec,"s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),Ec.forEach(t),Ts=p(e),Ae=n(e,"H3",{});var Mc=f(Ae);ci=a(Mc,"Docker containers"),Mc.forEach(t),Hs=p(e),S=n(e,"P",{});var Ta=f(S);pi=a(Ta,`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),ll=n(Ta,"CODE",{});var Ac=f(ll);ui=a(Ac,"nodejs"),Ac.forEach(t),di=a(Ta," image, but one exposes port 8888 and another exposes port 8899."),Ta.forEach(t),Ls=p(e),Se=n(e,"H3",{});var Sc=f(Se);mi=a(Sc,"Docker registries"),Sc.forEach(t),Ns=p(e),Ue=n(e,"P",{});var Uc=f(Ue);Ei=a(Uc,"Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),Uc.forEach(t),xs=p(e),Ye=n(e,"H3",{});var Yc=f(Ye);vi=a(Yc,"Docker daemon"),Yc.forEach(t),Ms=p(e),U=n(e,"P",{});var Ha=f(U);hi=a(Ha,"This is the underlying "),sl=n(Ha,"CODE",{});var Kc=f(sl);ki=a(Kc,"dockerd"),Kc.forEach(t),_i=a(Ha," process that helps you build images and run containers. It will listen for Docker API requests"),Ha.forEach(t),As=p(e),Ke=n(e,"H3",{});var Wc=f(Ke);yi=a(Wc,"Docker client"),Wc.forEach(t),Ss=p(e),E=n(e,"P",{});var J=f(E);wi=a(J,"The docker client "),ol=n(J,"CODE",{});var Gc=f(ol);bi=a(Gc,"docker"),Gc.forEach(t),Di=a(J," is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),al=n(J,"CODE",{});var Vc=f(al);Oi=a(Vc,"docker"),Vc.forEach(t),Ci=a(J," command sends Docker API requests to "),il=n(J,"CODE",{});var Fc=f(il);Pi=a(Fc,"dockerd"),Fc.forEach(t),Ri=a(J,"."),J.forEach(t),Us=p(e),We=n(e,"H3",{});var Bc=f(We);Ii=a(Bc,"Docker compose"),Bc.forEach(t),Ys=p(e),Y=n(e,"P",{});var La=f(Y);Ti=a(La,"Docker compose is a tool that helps with running "),rl=n(La,"EM",{});var qc=f(rl);Hi=a(qc,"multi-container"),qc.forEach(t),Li=a(La," Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),La.forEach(t),Ks=p(e),Ge=n(e,"P",{});var jc=f(Ge);Ni=a(jc,"For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),jc.forEach(t),Ws=p(e),Ve=n(e,"H4",{});var zc=f(Ve);xi=a(zc,"Difference between Kubernetes"),zc.forEach(t),Gs=p(e),K=n(e,"P",{});var Na=f(K);Mi=a(Na,"Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),nl=n(Na,"EM",{});var Xc=f(nl);Ai=a(Xc,"single-node"),Xc.forEach(t),Si=a(Na,", whereas Kubernetes is a full multi-node container manager."),Na.forEach(t),Vs=p(e),Fe=n(e,"P",{});var Qc=f(Fe);Ui=a(Qc,"Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),Qc.forEach(t),Fs=p(e),Be=n(e,"H2",{});var $c=f(Be);Yi=a($c,"Dockerfile"),$c.forEach(t),Bs=p(e),qe=n(e,"H3",{});var Jc=f(qe);Ki=a(Jc,"Commands"),Jc.forEach(t),qs=p(e),je=n(e,"H4",{});var Zc=f(je);Wi=a(Zc,"FROM"),Zc.forEach(t),js=p(e),W=n(e,"P",{});var xa=f(W);Gi=a(xa,"All dockerfile starts with the "),fl=n(xa,"CODE",{});var gc=f(fl);Vi=a(gc,"FROM"),gc.forEach(t),Fi=a(xa," command. It pulls the base image from Dockerhub to start to build your image."),xa.forEach(t),zs=p(e),te=n(e,"PRE",{class:!0});var vd=f(te);vd.forEach(t),Xs=p(e),ze=n(e,"H4",{});var ep=f(ze);Bi=a(ep,"RUN"),ep.forEach(t),Qs=p(e),Xe=n(e,"P",{});var tp=f(Xe);qi=a(tp,"Runs a command or executable. It has two forms"),tp.forEach(t),$s=p(e),le=n(e,"PRE",{class:!0});var hd=f(le);hd.forEach(t),Js=p(e),Qe=n(e,"H4",{});var lp=f(Qe);ji=a(lp,"CMD"),lp.forEach(t),Zs=p(e),$e=n(e,"P",{});var sp=f($e);zi=a(sp,"Provides defaults for an executing container. The arguments will be appended to ENTRYPOINT."),sp.forEach(t),gs=p(e),se=n(e,"PRE",{class:!0});var kd=f(se);kd.forEach(t),eo=p(e),Je=n(e,"H4",{});var op=f(Je);Xi=a(op,"ENTRYPOINT"),op.forEach(t),to=p(e),Ze=n(e,"P",{});var ap=f(Ze);Qi=a(ap,`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),ap.forEach(t),lo=p(e),oe=n(e,"PRE",{class:!0});var _d=f(oe);_d.forEach(t),so=p(e),ge=n(e,"H4",{});var ip=f(ge);$i=a(ip,"COPY"),ip.forEach(t),oo=p(e),et=n(e,"P",{});var rp=f(et);Ji=a(rp,"Copies file from your native host into the container image."),rp.forEach(t),ao=p(e),ae=n(e,"PRE",{class:!0});var yd=f(ae);yd.forEach(t),io=p(e),b=n(e,"P",{});var Kt=f(b);Zi=a(Kt,"Multiple "),cl=n(Kt,"CODE",{});var np=f(cl);gi=a(np,"<src>"),np.forEach(t),er=a(Kt," can be specified, and the last argument will be treated as the "),pl=n(Kt,"CODE",{});var fp=f(pl);tr=a(fp,"<dest>"),fp.forEach(t),lr=a(Kt,"."),Kt.forEach(t),ro=p(e),G=n(e,"P",{});var Ma=f(G);sr=a(Ma,"All "),ul=n(Ma,"CODE",{});var cp=f(ul);or=a(cp,"<src>"),cp.forEach(t),ar=a(Ma," relative paths must be inside context of the build!"),Ma.forEach(t),no=p(e),tt=n(e,"H4",{});var pp=f(tt);ir=a(pp,"ADD"),pp.forEach(t),fo=p(e),lt=n(e,"P",{});var up=f(lt);rr=a(up,"Copies file from your native host into the container image."),up.forEach(t),co=p(e),ie=n(e,"PRE",{class:!0});var wd=f(ie);wd.forEach(t),po=p(e),V=n(e,"P",{});var Aa=f(V);nr=a(Aa,"Compared to COPY, "),dl=n(Aa,"CODE",{});var dp=f(dl);fr=a(dp,"ADD"),dp.forEach(t),cr=a(Aa," has added utilities like:"),Aa.forEach(t),uo=p(e),D=n(e,"UL",{});var Wt=f(D);ml=n(Wt,"LI",{});var mp=f(ml);pr=a(mp,"being able to download files from URLs then copying them into the image"),mp.forEach(t),ur=p(Wt),re=n(Wt,"LI",{});var Sa=f(re);dr=a(Sa,"extracting contents of "),El=n(Sa,"CODE",{});var Ep=f(El);mr=a(Ep,".tar"),Ep.forEach(t),Er=a(Sa," files before copying into image"),Sa.forEach(t),vr=p(Wt),vl=n(Wt,"LI",{});var vp=f(vl);hr=a(vp,"adding contents from a git repo"),vp.forEach(t),Wt.forEach(t),mo=p(e),ne=n(e,"P",{});var vc=f(ne);hl=n(vc,"STRONG",{});var hp=f(hl);kr=a(hp,"tip: use COPY as default, unless you need the additional features of ADD."),hp.forEach(t),_r=a(vc," This is to prevent unwanted side effects!"),vc.forEach(t),Eo=p(e),O=n(e,"P",{});var Gt=f(O);yr=a(Gt,"Multiple "),kl=n(Gt,"CODE",{});var kp=f(kl);wr=a(kp,"<src>"),kp.forEach(t),br=a(Gt," can be specified, and the last argument will be treated as the "),_l=n(Gt,"CODE",{});var _p=f(_l);Dr=a(_p,"<dest>"),_p.forEach(t),Or=a(Gt,"."),Gt.forEach(t),vo=p(e),F=n(e,"P",{});var Ua=f(F);Cr=a(Ua,"All "),yl=n(Ua,"CODE",{});var yp=f(yl);Pr=a(yp,"<src>"),yp.forEach(t),Rr=a(Ua," relative paths must be inside context of the build!"),Ua.forEach(t),ho=p(e),st=n(e,"H4",{});var wp=f(st);Ir=a(wp,"ENV"),wp.forEach(t),ko=p(e),ot=n(e,"P",{});var bp=f(ot);Tr=a(bp,"Sets an environment variable"),bp.forEach(t),_o=p(e),fe=n(e,"PRE",{class:!0});var bd=f(fe);bd.forEach(t),yo=p(e),at=n(e,"H4",{});var Dp=f(at);Hr=a(Dp,"EXPOSE"),Dp.forEach(t),wo=p(e),it=n(e,"P",{});var Op=f(it);Lr=a(Op,"Instructs Docker that container should listen on specified network ports at runtime."),Op.forEach(t),bo=p(e),ce=n(e,"PRE",{class:!0});var Dd=f(ce);Dd.forEach(t),Do=p(e),y=n(e,"P",{});var Ce=f(y);wl=n(Ce,"STRONG",{});var Cp=f(wl);Nr=a(Cp,"Ports are not automatically published"),Cp.forEach(t),xr=a(Ce,`, and this command is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),bl=n(Ce,"CODE",{});var Pp=f(bl);Mr=a(Pp,"-P"),Pp.forEach(t),Ar=a(Ce," flag (which maps exposed ports in container to random ports in native host machine), or "),Dl=n(Ce,"CODE",{});var Rp=f(Dl);Sr=a(Rp,"-p"),Rp.forEach(t),Ur=a(Ce," to explicitly map ports from containers to your localhost."),Ce.forEach(t),Oo=p(e),rt=n(e,"H4",{});var Ip=f(rt);Yr=a(Ip,"VOLUME"),Ip.forEach(t),Co=p(e),nt=n(e,"P",{});var Tp=f(nt);Kr=a(Tp,`Marks the directory(s) within the container as an external drive from native host or other containers.
This allows files to be accessed from outside the containers.`),Tp.forEach(t),Po=p(e),pe=n(e,"PRE",{class:!0});var Od=f(pe);Od.forEach(t),Ro=p(e),B=n(e,"P",{});var Ya=f(B);Wr=a(Ya,"Note that where this (container) directory maps to in your native host is "),Ol=n(Ya,"STRONG",{});var Hp=f(Ol);Gr=a(Hp,"specified when you build or run the container"),Hp.forEach(t),Vr=a(Ya,"."),Ya.forEach(t),Io=p(e),ft=n(e,"H4",{});var Lp=f(ft);Fr=a(Lp,"WORKDIR"),Lp.forEach(t),To=p(e),d=n(e,"P",{});var h=f(d);Br=a(h,"Sets working directory for any "),Cl=n(h,"CODE",{});var Np=f(Cl);qr=a(Np,"RUN"),Np.forEach(t),jr=a(h,", "),Pl=n(h,"CODE",{});var xp=f(Pl);zr=a(xp,"CMD"),xp.forEach(t),Xr=a(h,", "),Rl=n(h,"CODE",{});var Mp=f(Rl);Qr=a(Mp,"ENTRYPOINT"),Mp.forEach(t),$r=a(h,", "),Il=n(h,"CODE",{});var Ap=f(Il);Jr=a(Ap,"COPY"),Ap.forEach(t),Zr=a(h,", "),Tl=n(h,"CODE",{});var Sp=f(Tl);gr=a(Sp,"ADD"),Sp.forEach(t),en=a(h," instructions that follows."),h.forEach(t),Ho=p(e),ue=n(e,"PRE",{class:!0});var Cd=f(ue);Cd.forEach(t),Lo=p(e),q=n(e,"P",{});var Ka=f(q);tn=a(Ka,"Multiple "),Hl=n(Ka,"CODE",{});var Up=f(Hl);ln=a(Up,"WORKDIR"),Up.forEach(t),sn=a(Ka," can be used in a dockerfile."),Ka.forEach(t),No=p(e),C=n(e,"P",{});var Vt=f(C);on=a(Vt,"If not specified, default directory is "),Ll=n(Vt,"CODE",{});var Yp=f(Ll);an=a(Yp,"/"),Yp.forEach(t),rn=a(Vt,`.
But if you are pulling from an image, chances are `),Nl=n(Vt,"CODE",{});var Kp=f(Nl);nn=a(Kp,"WORKDIR"),Kp.forEach(t),fn=a(Vt," already been set in your base image and it will be brought over."),Vt.forEach(t),xo=p(e),ct=n(e,"P",{});var Wp=f(ct);de=n(Wp,"STRONG",{});var Wa=f(de);cn=a(Wa,"tip: explicitly set "),xl=n(Wa,"CODE",{});var Gp=f(xl);pn=a(Gp,"WORKDIR"),Gp.forEach(t),un=a(Wa," to prevent unintended operations in unknown dirs"),Wa.forEach(t),Wp.forEach(t),Mo=p(e),P=n(e,"P",{});var Ft=f(P);dn=a(Ft,"It is also possible to resolve env variables previously set by "),Ml=n(Ft,"CODE",{});var Vp=f(Ml);mn=a(Vp,"ENV"),Vp.forEach(t),En=a(Ft,", e.g. "),Al=n(Ft,"CODE",{});var Fp=f(Al);vn=a(Fp,"WORKDIR $DIRPATH_ENV_VAR"),Fp.forEach(t),hn=a(Ft,"."),Ft.forEach(t),Ao=p(e),pt=n(e,"H4",{});var Bp=f(pt);kn=a(Bp,"ARG"),Bp.forEach(t),So=p(e),R=n(e,"P",{});var Bt=f(R);_n=a(Bt,"Defines a variable that users can pass values into during "),Sl=n(Bt,"CODE",{});var qp=f(Sl);yn=a(qp,"docker build"),qp.forEach(t),wn=a(Bt," by using "),Ul=n(Bt,"CODE",{});var jp=f(Ul);bn=a(jp,"--build-arg <argname>=<value>"),jp.forEach(t),Dn=a(Bt," flag."),Bt.forEach(t),Uo=p(e),me=n(e,"PRE",{class:!0});var Pd=f(me);Pd.forEach(t),Yo=p(e),w=n(e,"P",{});var Pe=f(w);Yl=n(Pe,"CODE",{});var zp=f(Yl);On=a(zp,"ENV"),zp.forEach(t),Cn=a(Pe," variables will overwrite "),Kl=n(Pe,"CODE",{});var Xp=f(Kl);Pn=a(Xp,"ARG"),Xp.forEach(t),Rn=a(Pe," variables if they are the same name (at the point where the "),Wl=n(Pe,"CODE",{});var Qp=f(Wl);In=a(Qp,"ENV"),Qp.forEach(t),Tn=a(Pe," variable is defined)."),Pe.forEach(t),Ko=p(e),ut=n(e,"H4",{});var $p=f(ut);Hn=a($p,"ONBUILD"),$p.forEach(t),Wo=p(e),dt=n(e,"P",{});var Jp=f(dt);Ln=a(Jp,"Adds a trigger to the image that will execute dockerfile instructions when the current image is used as the base for another build."),Jp.forEach(t),Go=p(e),Ee=n(e,"PRE",{class:!0});var Rd=f(Ee);Rd.forEach(t),Vo=p(e),mt=n(e,"P",{});var Zp=f(mt);Nn=a(Zp,"This command is usful when when you are building a base image that will be distributed to other people, and instructions that depend on other people\u2019s files needs to be run. Example, you could add:"),Zp.forEach(t),Fo=p(e),ve=n(e,"PRE",{class:!0});var Id=f(ve);Id.forEach(t),Bo=p(e),I=n(e,"P",{});var qt=f(I);xn=a(qt,"The instructions specified are triggered "),Gl=n(qt,"EM",{});var gp=f(Gl);Mn=a(gp,"immediately"),gp.forEach(t),An=a(qt," after the "),Vl=n(qt,"CODE",{});var eu=f(Vl);Sn=a(eu,"FROM"),eu.forEach(t),Un=a(qt," instruction in the child image."),qt.forEach(t),qo=p(e),he=n(e,"P",{});var hc=f(he);Fl=n(hc,"CODE",{});var tu=f(Fl);Yn=a(tu,"ONBUILD"),tu.forEach(t),Kn=a(hc," triggers are not inherited by children images."),hc.forEach(t),jo=p(e),Et=n(e,"H4",{});var lu=f(Et);Wn=a(lu,"STOPSIGNAL"),lu.forEach(t),zo=p(e),vt=n(e,"P",{});var su=f(vt);Gn=a(su,"Sets the system call signal that will cause the container to exit."),su.forEach(t),Xo=p(e),ke=n(e,"PRE",{class:!0});var Td=f(ke);Td.forEach(t),Qo=p(e),T=n(e,"UL",{});var jt=f(T);ht=n(jt,"LI",{});var kc=f(ht);Vn=a(kc,"Default is "),Bl=n(kc,"CODE",{});var ou=f(Bl);Fn=a(ou,"SIGTERM"),ou.forEach(t),kc.forEach(t),Bn=p(jt),x=n(jt,"LI",{});var zt=f(x);qn=a(zt,"Can be in "),ql=n(zt,"CODE",{});var au=f(ql);jn=a(au,"SIG<NAME>"),au.forEach(t),zn=a(zt," format (e.g. "),jl=n(zt,"CODE",{});var iu=f(jl);Xn=a(iu,"SIGKILL"),iu.forEach(t),Qn=a(zt,")"),zt.forEach(t),$n=p(jt),_e=n(jt,"LI",{});var Ga=f(_e);Jn=a(Ga,"Can be an unassigned number in kernel\u2019s syscall table (e.g. "),zl=n(Ga,"CODE",{});var ru=f(zl);Zn=a(ru,"9"),ru.forEach(t),gn=a(Ga,")"),Ga.forEach(t),jt.forEach(t),$o=p(e),kt=n(e,"H4",{});var nu=f(kt);ef=a(nu,"HEALTHCHECK"),nu.forEach(t),Jo=p(e),_t=n(e,"P",{});var fu=f(_t);tf=a(fu,"Specifies a command to be run inside the container to check container\u2019s health."),fu.forEach(t),Zo=p(e),ye=n(e,"PRE",{class:!0});var Hd=f(ye);Hd.forEach(t),go=p(e),we=n(e,"P",{});var _c=f(we);Xl=n(_c,"CODE",{});var cu=f(Xl);lf=a(cu,"OPTIONS"),cu.forEach(t),sf=a(_c," include:"),_c.forEach(t),ea=p(e),v=n(e,"UL",{});var Z=f(v);j=n(Z,"LI",{});var Es=f(j);Ql=n(Es,"CODE",{});var pu=f(Ql);of=a(pu,"--interval=DURATION"),pu.forEach(t),af=a(Es," (default "),$l=n(Es,"CODE",{});var uu=f($l);rf=a(uu,"30s"),uu.forEach(t),nf=a(Es,")"),Es.forEach(t),ff=p(Z),z=n(Z,"LI",{});var vs=f(z);Jl=n(vs,"CODE",{});var du=f(Jl);cf=a(du,"--timeout=DURATION"),du.forEach(t),pf=a(vs," (default "),Zl=n(vs,"CODE",{});var mu=f(Zl);uf=a(mu,"30s"),mu.forEach(t),df=a(vs,")"),vs.forEach(t),mf=p(Z),X=n(Z,"LI",{});var hs=f(X);gl=n(hs,"CODE",{});var Eu=f(gl);Ef=a(Eu,"--retries=N"),Eu.forEach(t),vf=a(hs," (default "),es=n(hs,"CODE",{});var vu=f(es);hf=a(vu,"3"),vu.forEach(t),kf=a(hs,")"),hs.forEach(t),_f=p(Z),Q=n(Z,"LI",{});var ks=f(Q);ts=n(ks,"CODE",{});var hu=f(ts);yf=a(hu,"--start-period=DURATION"),hu.forEach(t),wf=a(ks," (default "),ls=n(ks,"CODE",{});var ku=f(ls);bf=a(ku,"0s"),ku.forEach(t),Df=a(ks,")"),ks.forEach(t),Z.forEach(t),ta=p(e),m=n(e,"P",{});var k=f(m);Of=a(k,"A container that has "),ss=n(k,"CODE",{});var _u=f(ss);Cf=a(_u,"HEALTHCHECK"),_u.forEach(t),Pf=a(k," specified will have a "),os=n(k,"EM",{});var yu=f(os);Rf=a(yu,"health status"),yu.forEach(t),If=a(k," that can take 3 possible states: "),as=n(k,"CODE",{});var wu=f(as);Tf=a(wu,"starting"),wu.forEach(t),Hf=a(k," | "),is=n(k,"CODE",{});var bu=f(is);Lf=a(bu,"healthy"),bu.forEach(t),Nf=a(k," | "),rs=n(k,"CODE",{});var Du=f(rs);xf=a(Du,"unhealthy"),Du.forEach(t),Mf=a(k,"."),k.forEach(t),la=p(e),H=n(e,"P",{});var Xt=f(H);Af=a(Xt,"Whenever a health check passes, health status changes to "),ns=n(Xt,"CODE",{});var Ou=f(ns);Sf=a(Ou,"healthy"),Ou.forEach(t),Uf=a(Xt,". After a number of consecutive failures, health status changes to "),fs=n(Xt,"CODE",{});var Cu=f(fs);Yf=a(Cu,"unhealthy"),Cu.forEach(t),Kf=a(Xt,"."),Xt.forEach(t),sa=p(e),L=n(e,"P",{});var Qt=f(L);Wf=a(Qt,`Health checks are run after every interval.
Health checks are considered failed when commands runs for longer than timeout.
When consecutive failures reaches max retries, or command exits with non zero status code `),cs=n(Qt,"CODE",{});var Pu=f(cs);Gf=a(Pu,"0"),Pu.forEach(t),Vf=a(Qt,", "),ps=n(Qt,"EM",{});var Ru=f(ps);Ff=a(Ru,"health status"),Ru.forEach(t),Bf=a(Qt," will change to unhealthy."),Qt.forEach(t),oa=p(e),yt=n(e,"H4",{});var Iu=f(yt);qf=a(Iu,"SHELL"),Iu.forEach(t),aa=p(e),N=n(e,"P",{});var $t=f(N);jf=a($t,"Specifies the default shell used for shell form of commands. Default is set to "),us=n($t,"CODE",{});var Tu=f(us);zf=a(Tu,'["/bin/sh", "-c"]'),Tu.forEach(t),Xf=a($t," for Linux containers and "),ds=n($t,"CODE",{});var Hu=f(ds);Qf=a(Hu,'["cmd", "/S", "/C"]'),Hu.forEach(t),$f=a($t," for Windows containers."),$t.forEach(t),ia=p(e),be=n(e,"PRE",{class:!0});var Ld=f(be);Ld.forEach(t),ra=p(e),wt=n(e,"H4",{});var Lu=f(wt);Jf=a(Lu,"USER"),Lu.forEach(t),na=p(e),bt=n(e,"P",{});var Nu=f(bt);Zf=a(Nu,"Sets the username/UID to use for the remainder of the Docker build stage."),Nu.forEach(t),fa=p(e),De=n(e,"PRE",{class:!0});var Nd=f(De);Nd.forEach(t),ca=p(e),Dt=n(e,"P",{});var xu=f(Dt);gf=a(xu,`This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),xu.forEach(t),pa=p(e),Ot=n(e,"H4",{});var Mu=f(Ot);ec=a(Mu,"LABEL"),Mu.forEach(t),ua=p(e),Oe=n(e,"PRE",{class:!0});var xd=f(Oe);xd.forEach(t),da=p(e),Ct=n(e,"H3",{});var Au=f(Ct);tc=a(Au,"Environment Replacement"),Au.forEach(t),ma=p(e),Pt=n(e,"H3",{});var Su=f(Pt);ms=n(Su,"CODE",{});var Uu=f(ms);lc=a(Uu,"dockerignore"),Uu.forEach(t),Su.forEach(t),Ea=p(e),Rt=n(e,"H2",{});var Yu=f(Rt);sc=a(Yu,"useful docker CLI commands"),Yu.forEach(t),va=p(e),It=n(e,"H3",{});var Ku=f(It);oc=a(Ku,"docker run"),Ku.forEach(t),ha=p(e),Tt=n(e,"H3",{});var Wu=f(Tt);ac=a(Wu,"docker build"),Wu.forEach(t),ka=p(e),Ht=n(e,"H3",{});var Gu=f(Ht);ic=a(Gu,"docker logs"),Gu.forEach(t),_a=p(e),Lt=n(e,"H3",{});var Vu=f(Lt);rc=a(Vu,"docker image"),Vu.forEach(t),ya=p(e),Nt=n(e,"H3",{});var Fu=f(Nt);nc=a(Fu,"docker container"),Fu.forEach(t),wa=p(e),xt=n(e,"H3",{});var Bu=f(xt);fc=a(Bu,"docker network"),Bu.forEach(t),ba=p(e),Mt=n(e,"H3",{});var qu=f(Mt);cc=a(qu,"docker volume"),qu.forEach(t),Da=p(e),At=n(e,"H3",{});var ju=f(At);pc=a(ju,"docker inspect"),ju.forEach(t),Oa=p(e),St=n(e,"H3",{});var zu=f(St);uc=a(zu,"docker ps"),zu.forEach(t),Ca=p(e),Ut=n(e,"H2",{});var Xu=f(Ut);dc=a(Xu,"networking"),Xu.forEach(t),Pa=p(e),Yt=n(e,"H2",{});var Qu=f(Yt);mc=a(Qu,"disks"),Qu.forEach(t),this.h()},h(){u(te,"class","language-dockerfile"),u(le,"class","language-dockerfile"),u(se,"class","language-dockerfile"),u(oe,"class","language-dockerfile"),u(ae,"class","language-dockerfile"),u(ie,"class","language-dockerfile"),u(fe,"class","language-dockerfile"),u(ce,"class","language-dockerfile"),u(pe,"class","language-dockerfile"),u(ue,"class","language-dockerfile"),u(me,"class","language-dockerfile"),u(Ee,"class","language-dockerfile"),u(ve,"class","language-dockerfile"),u(ke,"class","language-dockerfile"),u(ye,"class","language-dockerfile"),u(be,"class","language-dockerfile"),u(De,"class","language-dockerfile"),u(Oe,"class","language-undefined")},m(e,s){i(e,M,s),l(M,Va),i(e,_s,s),i(e,Re,s),l(Re,Fa),i(e,ys,s),i(e,Ie,s),l(Ie,Ba),i(e,ws,s),i(e,Te,s),l(Te,qa),i(e,bs,s),i(e,He,s),l(He,ja),i(e,Ds,s),i(e,Le,s),l(Le,za),i(e,Os,s),i(e,Ne,s),l(Ne,Xa),i(e,Cs,s),i(e,A,s),l(A,_),l(_,Qa),l(_,Jt),l(Jt,$a),l(_,Ja),l(_,Zt),l(Zt,Za),l(_,ga),l(_,gt),l(gt,ei),l(_,ti),l(A,li),l(A,g),l(g,si),l(g,el),l(el,oi),l(g,ai),i(e,Ps,s),i(e,xe,s),l(xe,ii),i(e,Rs,s),i(e,Me,s),l(Me,ri),i(e,Is,s),i(e,ee,s),l(ee,tl),l(tl,ni),l(ee,fi),i(e,Ts,s),i(e,Ae,s),l(Ae,ci),i(e,Hs,s),i(e,S,s),l(S,pi),l(S,ll),l(ll,ui),l(S,di),i(e,Ls,s),i(e,Se,s),l(Se,mi),i(e,Ns,s),i(e,Ue,s),l(Ue,Ei),i(e,xs,s),i(e,Ye,s),l(Ye,vi),i(e,Ms,s),i(e,U,s),l(U,hi),l(U,sl),l(sl,ki),l(U,_i),i(e,As,s),i(e,Ke,s),l(Ke,yi),i(e,Ss,s),i(e,E,s),l(E,wi),l(E,ol),l(ol,bi),l(E,Di),l(E,al),l(al,Oi),l(E,Ci),l(E,il),l(il,Pi),l(E,Ri),i(e,Us,s),i(e,We,s),l(We,Ii),i(e,Ys,s),i(e,Y,s),l(Y,Ti),l(Y,rl),l(rl,Hi),l(Y,Li),i(e,Ks,s),i(e,Ge,s),l(Ge,Ni),i(e,Ws,s),i(e,Ve,s),l(Ve,xi),i(e,Gs,s),i(e,K,s),l(K,Mi),l(K,nl),l(nl,Ai),l(K,Si),i(e,Vs,s),i(e,Fe,s),l(Fe,Ui),i(e,Fs,s),i(e,Be,s),l(Be,Yi),i(e,Bs,s),i(e,qe,s),l(qe,Ki),i(e,qs,s),i(e,je,s),l(je,Wi),i(e,js,s),i(e,W,s),l(W,Gi),l(W,fl),l(fl,Vi),l(W,Fi),i(e,zs,s),i(e,te,s),te.innerHTML=Zu,i(e,Xs,s),i(e,ze,s),l(ze,Bi),i(e,Qs,s),i(e,Xe,s),l(Xe,qi),i(e,$s,s),i(e,le,s),le.innerHTML=gu,i(e,Js,s),i(e,Qe,s),l(Qe,ji),i(e,Zs,s),i(e,$e,s),l($e,zi),i(e,gs,s),i(e,se,s),se.innerHTML=ed,i(e,eo,s),i(e,Je,s),l(Je,Xi),i(e,to,s),i(e,Ze,s),l(Ze,Qi),i(e,lo,s),i(e,oe,s),oe.innerHTML=td,i(e,so,s),i(e,ge,s),l(ge,$i),i(e,oo,s),i(e,et,s),l(et,Ji),i(e,ao,s),i(e,ae,s),ae.innerHTML=ld,i(e,io,s),i(e,b,s),l(b,Zi),l(b,cl),l(cl,gi),l(b,er),l(b,pl),l(pl,tr),l(b,lr),i(e,ro,s),i(e,G,s),l(G,sr),l(G,ul),l(ul,or),l(G,ar),i(e,no,s),i(e,tt,s),l(tt,ir),i(e,fo,s),i(e,lt,s),l(lt,rr),i(e,co,s),i(e,ie,s),ie.innerHTML=sd,i(e,po,s),i(e,V,s),l(V,nr),l(V,dl),l(dl,fr),l(V,cr),i(e,uo,s),i(e,D,s),l(D,ml),l(ml,pr),l(D,ur),l(D,re),l(re,dr),l(re,El),l(El,mr),l(re,Er),l(D,vr),l(D,vl),l(vl,hr),i(e,mo,s),i(e,ne,s),l(ne,hl),l(hl,kr),l(ne,_r),i(e,Eo,s),i(e,O,s),l(O,yr),l(O,kl),l(kl,wr),l(O,br),l(O,_l),l(_l,Dr),l(O,Or),i(e,vo,s),i(e,F,s),l(F,Cr),l(F,yl),l(yl,Pr),l(F,Rr),i(e,ho,s),i(e,st,s),l(st,Ir),i(e,ko,s),i(e,ot,s),l(ot,Tr),i(e,_o,s),i(e,fe,s),fe.innerHTML=od,i(e,yo,s),i(e,at,s),l(at,Hr),i(e,wo,s),i(e,it,s),l(it,Lr),i(e,bo,s),i(e,ce,s),ce.innerHTML=ad,i(e,Do,s),i(e,y,s),l(y,wl),l(wl,Nr),l(y,xr),l(y,bl),l(bl,Mr),l(y,Ar),l(y,Dl),l(Dl,Sr),l(y,Ur),i(e,Oo,s),i(e,rt,s),l(rt,Yr),i(e,Co,s),i(e,nt,s),l(nt,Kr),i(e,Po,s),i(e,pe,s),pe.innerHTML=id,i(e,Ro,s),i(e,B,s),l(B,Wr),l(B,Ol),l(Ol,Gr),l(B,Vr),i(e,Io,s),i(e,ft,s),l(ft,Fr),i(e,To,s),i(e,d,s),l(d,Br),l(d,Cl),l(Cl,qr),l(d,jr),l(d,Pl),l(Pl,zr),l(d,Xr),l(d,Rl),l(Rl,Qr),l(d,$r),l(d,Il),l(Il,Jr),l(d,Zr),l(d,Tl),l(Tl,gr),l(d,en),i(e,Ho,s),i(e,ue,s),ue.innerHTML=rd,i(e,Lo,s),i(e,q,s),l(q,tn),l(q,Hl),l(Hl,ln),l(q,sn),i(e,No,s),i(e,C,s),l(C,on),l(C,Ll),l(Ll,an),l(C,rn),l(C,Nl),l(Nl,nn),l(C,fn),i(e,xo,s),i(e,ct,s),l(ct,de),l(de,cn),l(de,xl),l(xl,pn),l(de,un),i(e,Mo,s),i(e,P,s),l(P,dn),l(P,Ml),l(Ml,mn),l(P,En),l(P,Al),l(Al,vn),l(P,hn),i(e,Ao,s),i(e,pt,s),l(pt,kn),i(e,So,s),i(e,R,s),l(R,_n),l(R,Sl),l(Sl,yn),l(R,wn),l(R,Ul),l(Ul,bn),l(R,Dn),i(e,Uo,s),i(e,me,s),me.innerHTML=nd,i(e,Yo,s),i(e,w,s),l(w,Yl),l(Yl,On),l(w,Cn),l(w,Kl),l(Kl,Pn),l(w,Rn),l(w,Wl),l(Wl,In),l(w,Tn),i(e,Ko,s),i(e,ut,s),l(ut,Hn),i(e,Wo,s),i(e,dt,s),l(dt,Ln),i(e,Go,s),i(e,Ee,s),Ee.innerHTML=fd,i(e,Vo,s),i(e,mt,s),l(mt,Nn),i(e,Fo,s),i(e,ve,s),ve.innerHTML=cd,i(e,Bo,s),i(e,I,s),l(I,xn),l(I,Gl),l(Gl,Mn),l(I,An),l(I,Vl),l(Vl,Sn),l(I,Un),i(e,qo,s),i(e,he,s),l(he,Fl),l(Fl,Yn),l(he,Kn),i(e,jo,s),i(e,Et,s),l(Et,Wn),i(e,zo,s),i(e,vt,s),l(vt,Gn),i(e,Xo,s),i(e,ke,s),ke.innerHTML=pd,i(e,Qo,s),i(e,T,s),l(T,ht),l(ht,Vn),l(ht,Bl),l(Bl,Fn),l(T,Bn),l(T,x),l(x,qn),l(x,ql),l(ql,jn),l(x,zn),l(x,jl),l(jl,Xn),l(x,Qn),l(T,$n),l(T,_e),l(_e,Jn),l(_e,zl),l(zl,Zn),l(_e,gn),i(e,$o,s),i(e,kt,s),l(kt,ef),i(e,Jo,s),i(e,_t,s),l(_t,tf),i(e,Zo,s),i(e,ye,s),ye.innerHTML=ud,i(e,go,s),i(e,we,s),l(we,Xl),l(Xl,lf),l(we,sf),i(e,ea,s),i(e,v,s),l(v,j),l(j,Ql),l(Ql,of),l(j,af),l(j,$l),l($l,rf),l(j,nf),l(v,ff),l(v,z),l(z,Jl),l(Jl,cf),l(z,pf),l(z,Zl),l(Zl,uf),l(z,df),l(v,mf),l(v,X),l(X,gl),l(gl,Ef),l(X,vf),l(X,es),l(es,hf),l(X,kf),l(v,_f),l(v,Q),l(Q,ts),l(ts,yf),l(Q,wf),l(Q,ls),l(ls,bf),l(Q,Df),i(e,ta,s),i(e,m,s),l(m,Of),l(m,ss),l(ss,Cf),l(m,Pf),l(m,os),l(os,Rf),l(m,If),l(m,as),l(as,Tf),l(m,Hf),l(m,is),l(is,Lf),l(m,Nf),l(m,rs),l(rs,xf),l(m,Mf),i(e,la,s),i(e,H,s),l(H,Af),l(H,ns),l(ns,Sf),l(H,Uf),l(H,fs),l(fs,Yf),l(H,Kf),i(e,sa,s),i(e,L,s),l(L,Wf),l(L,cs),l(cs,Gf),l(L,Vf),l(L,ps),l(ps,Ff),l(L,Bf),i(e,oa,s),i(e,yt,s),l(yt,qf),i(e,aa,s),i(e,N,s),l(N,jf),l(N,us),l(us,zf),l(N,Xf),l(N,ds),l(ds,Qf),l(N,$f),i(e,ia,s),i(e,be,s),be.innerHTML=dd,i(e,ra,s),i(e,wt,s),l(wt,Jf),i(e,na,s),i(e,bt,s),l(bt,Zf),i(e,fa,s),i(e,De,s),De.innerHTML=md,i(e,ca,s),i(e,Dt,s),l(Dt,gf),i(e,pa,s),i(e,Ot,s),l(Ot,ec),i(e,ua,s),i(e,Oe,s),Oe.innerHTML=Ed,i(e,da,s),i(e,Ct,s),l(Ct,tc),i(e,ma,s),i(e,Pt,s),l(Pt,ms),l(ms,lc),i(e,Ea,s),i(e,Rt,s),l(Rt,sc),i(e,va,s),i(e,It,s),l(It,oc),i(e,ha,s),i(e,Tt,s),l(Tt,ac),i(e,ka,s),i(e,Ht,s),l(Ht,ic),i(e,_a,s),i(e,Lt,s),l(Lt,rc),i(e,ya,s),i(e,Nt,s),l(Nt,nc),i(e,wa,s),i(e,xt,s),l(xt,fc),i(e,ba,s),i(e,Mt,s),l(Mt,cc),i(e,Da,s),i(e,At,s),l(At,pc),i(e,Oa,s),i(e,St,s),l(St,uc),i(e,Ca,s),i(e,Ut,s),l(Ut,dc),i(e,Pa,s),i(e,Yt,s),l(Yt,mc)},p:yc,i:yc,o:yc,d(e){e&&t(M),e&&t(_s),e&&t(Re),e&&t(ys),e&&t(Ie),e&&t(ws),e&&t(Te),e&&t(bs),e&&t(He),e&&t(Ds),e&&t(Le),e&&t(Os),e&&t(Ne),e&&t(Cs),e&&t(A),e&&t(Ps),e&&t(xe),e&&t(Rs),e&&t(Me),e&&t(Is),e&&t(ee),e&&t(Ts),e&&t(Ae),e&&t(Hs),e&&t(S),e&&t(Ls),e&&t(Se),e&&t(Ns),e&&t(Ue),e&&t(xs),e&&t(Ye),e&&t(Ms),e&&t(U),e&&t(As),e&&t(Ke),e&&t(Ss),e&&t(E),e&&t(Us),e&&t(We),e&&t(Ys),e&&t(Y),e&&t(Ks),e&&t(Ge),e&&t(Ws),e&&t(Ve),e&&t(Gs),e&&t(K),e&&t(Vs),e&&t(Fe),e&&t(Fs),e&&t(Be),e&&t(Bs),e&&t(qe),e&&t(qs),e&&t(je),e&&t(js),e&&t(W),e&&t(zs),e&&t(te),e&&t(Xs),e&&t(ze),e&&t(Qs),e&&t(Xe),e&&t($s),e&&t(le),e&&t(Js),e&&t(Qe),e&&t(Zs),e&&t($e),e&&t(gs),e&&t(se),e&&t(eo),e&&t(Je),e&&t(to),e&&t(Ze),e&&t(lo),e&&t(oe),e&&t(so),e&&t(ge),e&&t(oo),e&&t(et),e&&t(ao),e&&t(ae),e&&t(io),e&&t(b),e&&t(ro),e&&t(G),e&&t(no),e&&t(tt),e&&t(fo),e&&t(lt),e&&t(co),e&&t(ie),e&&t(po),e&&t(V),e&&t(uo),e&&t(D),e&&t(mo),e&&t(ne),e&&t(Eo),e&&t(O),e&&t(vo),e&&t(F),e&&t(ho),e&&t(st),e&&t(ko),e&&t(ot),e&&t(_o),e&&t(fe),e&&t(yo),e&&t(at),e&&t(wo),e&&t(it),e&&t(bo),e&&t(ce),e&&t(Do),e&&t(y),e&&t(Oo),e&&t(rt),e&&t(Co),e&&t(nt),e&&t(Po),e&&t(pe),e&&t(Ro),e&&t(B),e&&t(Io),e&&t(ft),e&&t(To),e&&t(d),e&&t(Ho),e&&t(ue),e&&t(Lo),e&&t(q),e&&t(No),e&&t(C),e&&t(xo),e&&t(ct),e&&t(Mo),e&&t(P),e&&t(Ao),e&&t(pt),e&&t(So),e&&t(R),e&&t(Uo),e&&t(me),e&&t(Yo),e&&t(w),e&&t(Ko),e&&t(ut),e&&t(Wo),e&&t(dt),e&&t(Go),e&&t(Ee),e&&t(Vo),e&&t(mt),e&&t(Fo),e&&t(ve),e&&t(Bo),e&&t(I),e&&t(qo),e&&t(he),e&&t(jo),e&&t(Et),e&&t(zo),e&&t(vt),e&&t(Xo),e&&t(ke),e&&t(Qo),e&&t(T),e&&t($o),e&&t(kt),e&&t(Jo),e&&t(_t),e&&t(Zo),e&&t(ye),e&&t(go),e&&t(we),e&&t(ea),e&&t(v),e&&t(ta),e&&t(m),e&&t(la),e&&t(H),e&&t(sa),e&&t(L),e&&t(oa),e&&t(yt),e&&t(aa),e&&t(N),e&&t(ia),e&&t(be),e&&t(ra),e&&t(wt),e&&t(na),e&&t(bt),e&&t(fa),e&&t(De),e&&t(ca),e&&t(Dt),e&&t(pa),e&&t(Ot),e&&t(ua),e&&t(Oe),e&&t(da),e&&t(Ct),e&&t(ma),e&&t(Pt),e&&t(Ea),e&&t(Rt),e&&t(va),e&&t(It),e&&t(ha),e&&t(Tt),e&&t(ka),e&&t(Ht),e&&t(_a),e&&t(Lt),e&&t(ya),e&&t(Nt),e&&t(wa),e&&t(xt),e&&t(ba),e&&t(Mt),e&&t(Da),e&&t(At),e&&t(Oa),e&&t(St),e&&t(Ca),e&&t(Ut),e&&t(Pa),e&&t(Yt)}}}const Yd={title:"Docker Intro",date:"2022-12-01"},{title:$u,date:Wd}=Yd;class Gd extends Md{constructor(M){super(),Ad(this,M,null,Ud,Sd,{})}}export{Gd as default,Yd as metadata};
