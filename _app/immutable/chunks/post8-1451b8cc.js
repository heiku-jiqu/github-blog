import{S as C6,i as I6,s as P6,k as a,q as l,a as f,l as r,m as i,r as s,h as o,c as d,n as p,b as c,B as t,A as b2}from"./index-4cbca6b4.js";function L6(LD){let De,pd,Wi,$t,ud,Vi,jt,md,Fi,Xt,Ed,Bi,Qt,vd,qi,Zt,hd,zi,Jt,kd,$i,ye,K,_d,ts,wd,Dd,os,yd,bd,ls,Od,Cd,Id,ot,Pd,ss,Ld,Rd,ji,gt,Td,Xi,eo,Nd,Qi,lt,as,Hd,Md,Zi,to,Sd,Ji,be,Ad,rs,xd,Ud,gi,oo,Yd,en,lo,Gd,tn,so,Kd,on,Oe,Wd,is,Vd,Fd,ln,ao,Bd,sn,R,qd,ns,zd,$d,cs,jd,Xd,fs,Qd,Zd,an,ro,Jd,rn,Ce,gd,ds,ep,tp,nn,io,op,cn,no,lp,fn,Ie,sp,ps,ap,rp,dn,co,ip,pn,un,mn,fo,np,En,po,cp,vn,uo,fp,hn,Pe,dp,us,pp,up,kn,st,RD=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">FROM</span> apache/spark</span>

<span class="token comment"># to specify a tag</span>
<span class="token instruction"><span class="token keyword">FROM</span> apache/spark:3.3.1</span></code>`,_n,mo,mp,wn,Eo,Ep,Dn,at,TD=`<code class="language-dockerfile"><span class="token comment"># Shell form (defaults to /bin/sh -c on Linux or cmd /S /C on Windows)</span>
<span class="token instruction"><span class="token keyword">RUN</span> &lt;command></span>

<span class="token comment"># Exec form</span>
<span class="token instruction"><span class="token keyword">RUN</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>]</span></code>`,yn,vo,vp,bn,ho,hp,On,rt,ND=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # exec form</span>
<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # default parameters to ENTRYPOINT</span>
<span class="token instruction"><span class="token keyword">CMD</span> command param1 param2 # shell form</span></code>`,Cn,ko,kp,In,_o,_p,Pn,it,HD=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ENTRYPOINT</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # exec form</span>
<span class="token instruction"><span class="token keyword">ENTRYPOINT</span> command param1 param2 # shell form</span></code>`,Ln,wo,wp,Rn,Do,Dp,Tn,nt,MD=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">COPY</span> &lt;src>... &lt;dest></span>
<span class="token instruction"><span class="token keyword">COPY</span> [<span class="token string">"&lt;src>"</span>,... <span class="token string">"&lt;dest>"</span>] # used when there are spaces in path</span></code>`,Nn,z,yp,ms,bp,Op,Es,Cp,Ip,Hn,Le,Pp,vs,Lp,Rp,Mn,yo,Tp,Sn,bo,Np,An,ct,SD=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ADD</span> &lt;src>... &lt;dest></span>
<span class="token instruction"><span class="token keyword">ADD</span> [<span class="token string">"&lt;src>"</span>,... <span class="token string">"&lt;dest>"</span>] # used when there are spaces in path</span></code>`,xn,Re,Hp,hs,Mp,Sp,Un,$,ks,Ap,xp,ft,Up,_s,Yp,Gp,Kp,ws,Wp,Yn,dt,Ds,Vp,Fp,Gn,j,Bp,ys,qp,zp,bs,$p,jp,Kn,Te,Xp,Os,Qp,Zp,Wn,Oo,Jp,Vn,Co,gp,Fn,pt,AD='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ENV</span> &lt;key>=&lt;value></span></code>',Bn,Io,eu,qn,Po,tu,zn,ut,xD='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">EXPOSE</span> &lt;port> [&lt;port>/&lt;protocol>]</span></code>',$n,W,Cs,ou,lu,Is,su,au,Ps,ru,iu,jn,Lo,nu,Xn,Ro,cu,Qn,mt,UD=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">VOLUME</span> &lt;path/to/container/dir> &lt;path/to/container/dir2> # space separated paths</span>
<span class="token instruction"><span class="token keyword">VOLUME</span> [<span class="token string">"&lt;/path/to/dir1>"</span>, <span class="token string">"&lt;/path/to/dir2>"</span>] #json array</span></code>`,Zn,Ne,fu,Ls,du,pu,Jn,To,uu,gn,h,mu,Rs,Eu,vu,Ts,hu,ku,Ns,_u,wu,Hs,Du,yu,Ms,bu,Ou,ec,Et,YD=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">WORKDIR</span> /path/to/workdir # absolute paths, i.e. starts with /</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> path/to/child/dir # relative path, i.e. does not start with /</span></code>`,tc,He,Cu,Ss,Iu,Pu,oc,X,Lu,As,Ru,Tu,xs,Nu,Hu,lc,No,vt,Mu,Us,Su,Au,sc,Q,xu,Ys,Uu,Yu,Gs,Gu,Ku,ac,Ho,Wu,rc,Z,Vu,Ks,Fu,Bu,Ws,qu,zu,ic,ht,GD='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ARG</span> &lt;name>[=&lt;default value>]</span></code>',nc,V,Vs,$u,ju,Fs,Xu,Qu,Bs,Zu,Ju,cc,Mo,gu,fc,So,em,dc,kt,KD='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ONBUILD</span> &lt;INSTRUCTION></span></code>',pc,Ao,tm,uc,_t,WD=`<code class="language-dockerfile"><span class="token comment"># copy host files to /contents in the container</span>
<span class="token instruction"><span class="token keyword">ONBUILD</span> <span class="token keyword">ADD</span> . /contents</span>

<span class="token comment"># tar all files in the /contents directory in the container to archive.tar in the container</span>
<span class="token instruction"><span class="token keyword">ONBUILD</span> <span class="token keyword">RUN</span> tar -cfv archive.tar /contents</span></code>`,mc,J,om,qs,lm,sm,zs,am,rm,Ec,wt,$s,im,nm,vc,xo,cm,hc,Uo,fm,kc,Dt,VD='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">STOPSIGNAL</span> signal</span></code>',_c,g,Yo,dm,js,pm,um,Ee,mm,Xs,Em,vm,Qs,hm,km,_m,yt,wm,Zs,Dm,ym,wc,Go,bm,Dc,Ko,Om,yc,bt,FD=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">HEALTHCHECK</span> [OPTIONS] CMD command</span>
<span class="token instruction"><span class="token keyword">HEALTHCHECK</span> <span class="token keyword">NONE</span> # disable any healthcheck from base image</span></code>`,bc,Ot,Js,Cm,Im,Oc,T,Me,gs,Pm,Lm,ea,Rm,Tm,Nm,Se,ta,Hm,Mm,oa,Sm,Am,xm,Ae,la,Um,Ym,sa,Gm,Km,Wm,xe,aa,Vm,Fm,ra,Bm,qm,Cc,k,zm,ia,$m,jm,na,Xm,Qm,ca,Zm,Jm,fa,gm,eE,da,tE,oE,Ic,ee,lE,pa,sE,aE,ua,rE,iE,Pc,te,nE,ma,cE,fE,Ea,dE,pE,Lc,Wo,uE,Rc,oe,mE,va,EE,vE,ha,hE,kE,Tc,Ct,BD='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">SHELL</span> [<span class="token string">"executable"</span>, <span class="token string">"parameters"</span>]</span></code>',Nc,Vo,_E,Hc,Fo,wE,Mc,It,qD=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">USER</span> &lt;user></span>
<span class="token instruction"><span class="token keyword">USER</span> &lt;UID></span></code>`,Sc,Bo,DE,Ac,qo,yE,xc,Ue,bE,ka,OE,CE,Uc,Pt,zD='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">LABEL</span> &lt;key>=&lt;value> &lt;key>=&lt;value> ...</span></code>',Yc,zo,IE,Gc,Ye,PE,_a,LE,RE,Kc,le,TE,wa,NE,HE,Da,ME,SE,Wc,Ge,se,ya,AE,xE,ba,UE,YE,Oa,GE,KE,WE,w,Ca,VE,FE,Ia,BE,qE,Pa,zE,$E,La,jE,XE,Ra,QE,ZE,Vc,u,JE,Ta,gE,ev,Na,tv,ov,Ha,lv,sv,Ma,av,rv,Sa,iv,nv,Aa,cv,fv,xa,dv,pv,Ua,uv,mv,Ya,Ev,vv,Ga,hv,kv,Ka,_v,wv,Fc,Lt,$D=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">FROM</span> example</span>
<span class="token instruction"><span class="token keyword">ENV</span> var=/bar</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token variable">$&#123;var&#125;</span> # WORKDIR /bar</span>
<span class="token instruction"><span class="token keyword">ADD</span> . <span class="token variable">$FOO</span>     # ADD . /bar</span></code>`,Bc,$o,Wa,Dv,qc,N,yv,Va,bv,Ov,Fa,Cv,Iv,Ba,Pv,Lv,zc,jo,Rv,$c,jc,Xc,Xo,Tv,Qc,Qo,Nv,Zc,Zo,Hv,Jc,Rt,jD='<code class="language-undefined">docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]</code>',gc,ae,qa,Mv,Sv,za,D,$a,Av,xv,ja,Uv,Yv,Xa,Gv,Kv,Qa,Wv,Vv,Za,Fv,Bv,qv,Jo,zv,Ja,$v,ef,Tt,ga,jv,Xv,tf,y,er,Qv,Zv,tr,Jv,gv,or,e1,t1,lr,o1,l1,sr,s1,of,go,a1,lf,E,el,ar,r1,i1,n1,F,rr,c1,f1,ir,d1,p1,nr,u1,m1,cr,E1,v1,H,fr,h1,k1,dr,_1,w1,pr,D1,y1,ur,b1,O1,C1,M,mr,I1,P1,Er,L1,R1,vr,T1,N1,hr,H1,M1,S1,Ke,kr,A1,x1,_r,U1,Y1,G1,tl,wr,K1,W1,V1,S,Dr,F1,B1,yr,q1,z1,br,$1,j1,Nt,X1,Q1,sf,We,Or,Z1,J1,ve,g1,Ht,eh,th,Mt,oh,lh,af,ol,sh,rf,ll,ah,nf,sl,rh,cf,al,ih,ff,rl,nh,df,St,XD='<code class="language-undefined">docker network COMMAND</code>',pf,il,ch,uf,_,nl,Cr,fh,dh,ph,Ve,Ir,uh,mh,Pr,Eh,vh,hh,cl,Lr,kh,_h,wh,fl,Rr,Dh,yh,bh,dl,Tr,Oh,Ch,Ih,pl,Nr,Ph,Lh,mf,ul,Rh,Ef,ml,Th,vf,re,Nh,Hr,Hh,Mh,Mr,Sh,Ah,hf,At,QD='<code class="language-undefined">docker logs [OPTIONS] CONTAINER</code>',kf,El,xh,_f,b,Fe,Sr,Uh,Yh,Ar,Gh,Kh,Wh,Be,xr,Vh,Fh,Ur,Bh,qh,zh,ie,Yr,$h,jh,Gr,Xh,Qh,Kr,Zh,Jh,gh,A,Wr,e3,t3,Vr,o3,l3,Fr,s3,a3,Br,r3,i3,n3,qe,qr,c3,f3,zr,d3,p3,wf,vl,u3,Df,hl,m3,yf,xt,ZD='<code class="language-undefined">docker inspect [OPTIONS] NAME|ID</code>',bf,kl,E3,Of,_l,v3,Cf,Ut,JD='<code class="language-undefined">docker ps [OPTIONS]</code>',If,wl,h3,Pf,O,ze,$r,k3,_3,jr,w3,D3,y3,ne,Xr,b3,O3,Qr,C3,I3,Zr,P3,L3,R3,Dl,Jr,T3,N3,H3,ce,gr,M3,S3,ei,A3,x3,ti,U3,Y3,G3,L,oi,K3,W3,li,V3,F3,si,B3,q3,ai,z3,$3,Yt,$e,ri,j3,X3,ii,Q3,Z3,J3,yl,ni,g3,e4,Lf,bl,t4,Rf,Ol,o4,Tf,Gt,gD='<code class="language-undefined">docker stats [OPTIONS] [CONTAINER...]</code>',Nf,Cl,l4,Hf,x,je,ci,s4,a4,fi,r4,i4,n4,Il,di,c4,f4,d4,Pl,pi,p4,u4,m4,Ll,ui,E4,v4,Mf,Sf,Af,Rl,h4,xf,Tl,k4,Uf,Nl,_4,Yf,v,Kt,mi,w4,D4,Ei,y4,b4,Xe,vi,O4,C4,hi,I4,P4,L4,Hl,ki,R4,T4,N4,Ml,_i,H4,M4,S4,Sl,wi,A4,x4,U4,Al,Di,Y4,G4,K4,yi,W4,Gf,Kf,Wf,xl,V4,Vf,Ul,F4,Ff,Yl,B4,Bf,C,bi,q4,z4,Oi,$4,j4,Ci,X4,Q4,Ii,Z4,J4,Pi,g4;return{c(){De=a("h1"),pd=l(PD),Wi=f(),$t=a("p"),ud=l("Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),Vi=f(),jt=a("p"),md=l(`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),Fi=f(),Xt=a("h2"),Ed=l("key concepts"),Bi=f(),Qt=a("h3"),vd=l("Docker images"),qi=f(),Zt=a("p"),hd=l(`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),zi=f(),Jt=a("p"),kd=l("Images are often build on top of one another"),$i=f(),ye=a("ul"),K=a("li"),_d=l("e.g. you start with "),ts=a("code"),wd=l("ubuntu"),Dd=l(" image, install "),os=a("code"),yd=l("python"),bd=l(" in that ubuntu image, install "),ls=a("code"),Od=l("pytorch"),Cd=l(" package, install pretrained models."),Id=f(),ot=a("li"),Pd=l("or you can start with a published "),ss=a("code"),Ld=l("python"),Rd=l(" image, and install your packages there."),ji=f(),gt=a("p"),Td=l("Published images are available for download in Docker registries."),Xi=f(),eo=a("h4"),Nd=l("Dockerfile"),Qi=f(),lt=a("p"),as=a("code"),Hd=l("Dockerfile"),Md=l("s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),Zi=f(),to=a("h3"),Sd=l("Docker containers"),Ji=f(),be=a("p"),Ad=l(`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),rs=a("code"),xd=l("nodejs"),Ud=l(" image, but one exposes port 8888 and another exposes port 8899."),gi=f(),oo=a("h3"),Yd=l("Docker registries"),en=f(),lo=a("p"),Gd=l("Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),tn=f(),so=a("h3"),Kd=l("Docker daemon"),on=f(),Oe=a("p"),Wd=l("This is the underlying "),is=a("code"),Vd=l("dockerd"),Fd=l(" process that helps you build images and run containers. It will listen for Docker API requests"),ln=f(),ao=a("h3"),Bd=l("Docker client"),sn=f(),R=a("p"),qd=l("The docker client "),ns=a("code"),zd=l("docker"),$d=l(" is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),cs=a("code"),jd=l("docker"),Xd=l(" command sends Docker API requests to "),fs=a("code"),Qd=l("dockerd"),Zd=l("."),an=f(),ro=a("h3"),Jd=l("Docker compose"),rn=f(),Ce=a("p"),gd=l("Docker compose is a tool that helps with running "),ds=a("em"),ep=l("multi-container"),tp=l(" Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),nn=f(),io=a("p"),op=l("For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),cn=f(),no=a("h4"),lp=l("Difference between Kubernetes"),fn=f(),Ie=a("p"),sp=l("Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),ps=a("em"),ap=l("single-node"),rp=l(", whereas Kubernetes is a full multi-node container manager."),dn=f(),co=a("p"),ip=l("Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),pn=f(),un=a("hr"),mn=f(),fo=a("h2"),np=l("Dockerfile"),En=f(),po=a("h3"),cp=l("Commands"),vn=f(),uo=a("h4"),fp=l("FROM"),hn=f(),Pe=a("p"),dp=l("All dockerfile starts with the "),us=a("code"),pp=l("FROM"),up=l(" command. It pulls the base image from Dockerhub to start to build your image."),kn=f(),st=a("pre"),_n=f(),mo=a("h4"),mp=l("RUN"),wn=f(),Eo=a("p"),Ep=l("Runs a command or executable. It has two forms"),Dn=f(),at=a("pre"),yn=f(),vo=a("h4"),vp=l("CMD"),bn=f(),ho=a("p"),hp=l("Provides defaults for an executing container. The arguments will be appended to ENTRYPOINT."),On=f(),rt=a("pre"),Cn=f(),ko=a("h4"),kp=l("ENTRYPOINT"),In=f(),_o=a("p"),_p=l(`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),Pn=f(),it=a("pre"),Ln=f(),wo=a("h4"),wp=l("COPY"),Rn=f(),Do=a("p"),Dp=l("Copies file from your native host into the container image."),Tn=f(),nt=a("pre"),Nn=f(),z=a("p"),yp=l("Multiple "),ms=a("code"),bp=l("<src>"),Op=l(" can be specified, and the last argument will be treated as the "),Es=a("code"),Cp=l("<dest>"),Ip=l("."),Hn=f(),Le=a("p"),Pp=l("All "),vs=a("code"),Lp=l("<src>"),Rp=l(" relative paths must be inside context of the build!"),Mn=f(),yo=a("h4"),Tp=l("ADD"),Sn=f(),bo=a("p"),Np=l("Copies file from your native host into the container image."),An=f(),ct=a("pre"),xn=f(),Re=a("p"),Hp=l("Compared to COPY, "),hs=a("code"),Mp=l("ADD"),Sp=l(" has added utilities like:"),Un=f(),$=a("ul"),ks=a("li"),Ap=l("being able to download files from URLs then copying them into the image"),xp=f(),ft=a("li"),Up=l("extracting contents of "),_s=a("code"),Yp=l(".tar"),Gp=l(" files before copying into image"),Kp=f(),ws=a("li"),Wp=l("adding contents from a git repo"),Yn=f(),dt=a("p"),Ds=a("strong"),Vp=l("tip: use COPY as default, unless you need the additional features of ADD."),Fp=l(" This is to prevent unwanted side effects!"),Gn=f(),j=a("p"),Bp=l("Multiple "),ys=a("code"),qp=l("<src>"),zp=l(" can be specified, and the last argument will be treated as the "),bs=a("code"),$p=l("<dest>"),jp=l("."),Kn=f(),Te=a("p"),Xp=l("All "),Os=a("code"),Qp=l("<src>"),Zp=l(" relative paths must be inside context of the build!"),Wn=f(),Oo=a("h4"),Jp=l("ENV"),Vn=f(),Co=a("p"),gp=l("Sets an environment variable"),Fn=f(),pt=a("pre"),Bn=f(),Io=a("h4"),eu=l("EXPOSE"),qn=f(),Po=a("p"),tu=l("Instructs Docker that container should listen on specified network ports at runtime."),zn=f(),ut=a("pre"),$n=f(),W=a("p"),Cs=a("strong"),ou=l("Ports are not automatically published"),lu=l(`, and this command is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),Is=a("code"),su=l("-P"),au=l(" flag (which maps exposed ports in container to random ports in native host machine), or "),Ps=a("code"),ru=l("-p"),iu=l(" to explicitly map ports from containers to your localhost."),jn=f(),Lo=a("h4"),nu=l("VOLUME"),Xn=f(),Ro=a("p"),cu=l(`Marks the directory(s) within the container as an external drive from native host or other containers.
This allows files to be accessed from outside the containers.`),Qn=f(),mt=a("pre"),Zn=f(),Ne=a("p"),fu=l("Note that where this (container) directory maps to in your native host is "),Ls=a("strong"),du=l("specified when you build or run the container"),pu=l("."),Jn=f(),To=a("h4"),uu=l("WORKDIR"),gn=f(),h=a("p"),mu=l("Sets working directory for any "),Rs=a("code"),Eu=l("RUN"),vu=l(", "),Ts=a("code"),hu=l("CMD"),ku=l(", "),Ns=a("code"),_u=l("ENTRYPOINT"),wu=l(", "),Hs=a("code"),Du=l("COPY"),yu=l(", "),Ms=a("code"),bu=l("ADD"),Ou=l(" instructions that follows."),ec=f(),Et=a("pre"),tc=f(),He=a("p"),Cu=l("Multiple "),Ss=a("code"),Iu=l("WORKDIR"),Pu=l(" can be used in a dockerfile."),oc=f(),X=a("p"),Lu=l("If not specified, default directory is "),As=a("code"),Ru=l("/"),Tu=l(`.
But if you are pulling from an image, chances are `),xs=a("code"),Nu=l("WORKDIR"),Hu=l(" already been set in your base image and it will be brought over."),lc=f(),No=a("p"),vt=a("strong"),Mu=l("tip: explicitly set "),Us=a("code"),Su=l("WORKDIR"),Au=l(" to prevent unintended operations in unknown dirs"),sc=f(),Q=a("p"),xu=l("It is also possible to resolve env variables previously set by "),Ys=a("code"),Uu=l("ENV"),Yu=l(", e.g. "),Gs=a("code"),Gu=l("WORKDIR $DIRPATH_ENV_VAR"),Ku=l("."),ac=f(),Ho=a("h4"),Wu=l("ARG"),rc=f(),Z=a("p"),Vu=l("Defines a variable that users can pass values into during "),Ks=a("code"),Fu=l("docker build"),Bu=l(" by using "),Ws=a("code"),qu=l("--build-arg <argname>=<value>"),zu=l(" flag."),ic=f(),ht=a("pre"),nc=f(),V=a("p"),Vs=a("code"),$u=l("ENV"),ju=l(" variables will overwrite "),Fs=a("code"),Xu=l("ARG"),Qu=l(" variables if they are the same name (at the point where the "),Bs=a("code"),Zu=l("ENV"),Ju=l(" variable is defined)."),cc=f(),Mo=a("h4"),gu=l("ONBUILD"),fc=f(),So=a("p"),em=l("Adds a trigger to the image that will execute dockerfile instructions when the current image is used as the base for another build."),dc=f(),kt=a("pre"),pc=f(),Ao=a("p"),tm=l("This command is usful when when you are building a base image that will be distributed to other people, and instructions that depend on other people\u2019s files needs to be run. Example, you could add:"),uc=f(),_t=a("pre"),mc=f(),J=a("p"),om=l("The instructions specified are triggered "),qs=a("em"),lm=l("immediately"),sm=l(" after the "),zs=a("code"),am=l("FROM"),rm=l(" instruction in the child image."),Ec=f(),wt=a("p"),$s=a("code"),im=l("ONBUILD"),nm=l(" triggers are not inherited by children images."),vc=f(),xo=a("h4"),cm=l("STOPSIGNAL"),hc=f(),Uo=a("p"),fm=l("Sets the system call signal that will cause the container to exit."),kc=f(),Dt=a("pre"),_c=f(),g=a("ul"),Yo=a("li"),dm=l("Default is "),js=a("code"),pm=l("SIGTERM"),um=f(),Ee=a("li"),mm=l("Can be in "),Xs=a("code"),Em=l("SIG<NAME>"),vm=l(" format (e.g. "),Qs=a("code"),hm=l("SIGKILL"),km=l(")"),_m=f(),yt=a("li"),wm=l("Can be an unassigned number in kernel\u2019s syscall table (e.g. "),Zs=a("code"),Dm=l("9"),ym=l(")"),wc=f(),Go=a("h4"),bm=l("HEALTHCHECK"),Dc=f(),Ko=a("p"),Om=l("Specifies a command to be run inside the container to check container\u2019s health."),yc=f(),bt=a("pre"),bc=f(),Ot=a("p"),Js=a("code"),Cm=l("OPTIONS"),Im=l(" include:"),Oc=f(),T=a("ul"),Me=a("li"),gs=a("code"),Pm=l("--interval=DURATION"),Lm=l(" (default "),ea=a("code"),Rm=l("30s"),Tm=l(")"),Nm=f(),Se=a("li"),ta=a("code"),Hm=l("--timeout=DURATION"),Mm=l(" (default "),oa=a("code"),Sm=l("30s"),Am=l(")"),xm=f(),Ae=a("li"),la=a("code"),Um=l("--retries=N"),Ym=l(" (default "),sa=a("code"),Gm=l("3"),Km=l(")"),Wm=f(),xe=a("li"),aa=a("code"),Vm=l("--start-period=DURATION"),Fm=l(" (default "),ra=a("code"),Bm=l("0s"),qm=l(")"),Cc=f(),k=a("p"),zm=l("A container that has "),ia=a("code"),$m=l("HEALTHCHECK"),jm=l(" specified will have a "),na=a("em"),Xm=l("health status"),Qm=l(" that can take 3 possible states: "),ca=a("code"),Zm=l("starting"),Jm=l(" | "),fa=a("code"),gm=l("healthy"),eE=l(" | "),da=a("code"),tE=l("unhealthy"),oE=l("."),Ic=f(),ee=a("p"),lE=l("Whenever a health check passes, health status changes to "),pa=a("code"),sE=l("healthy"),aE=l(". After a number of consecutive failures, health status changes to "),ua=a("code"),rE=l("unhealthy"),iE=l("."),Pc=f(),te=a("p"),nE=l(`Health checks are run after every interval.
Health checks are considered failed when commands runs for longer than timeout.
When consecutive failures reaches max retries, or command exits with non zero status code `),ma=a("code"),cE=l("0"),fE=l(", "),Ea=a("em"),dE=l("health status"),pE=l(" will change to unhealthy."),Lc=f(),Wo=a("h4"),uE=l("SHELL"),Rc=f(),oe=a("p"),mE=l("Specifies the default shell used for shell form of commands. Default is set to "),va=a("code"),EE=l('["/bin/sh", "-c"]'),vE=l(" for Linux containers and "),ha=a("code"),hE=l('["cmd", "/S", "/C"]'),kE=l(" for Windows containers."),Tc=f(),Ct=a("pre"),Nc=f(),Vo=a("h4"),_E=l("USER"),Hc=f(),Fo=a("p"),wE=l("Sets the username/UID to use for the remainder of the Docker build stage."),Mc=f(),It=a("pre"),Sc=f(),Bo=a("p"),DE=l(`This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),Ac=f(),qo=a("h4"),yE=l("LABEL"),xc=f(),Ue=a("p"),bE=l("Adds metadata to an image and are inherited by child images. You can view an image\u2019s labels using "),ka=a("code"),OE=l("docker image inspect"),CE=l("."),Uc=f(),Pt=a("pre"),Yc=f(),zo=a("h3"),IE=l("Environment Replacement"),Gc=f(),Ye=a("p"),PE=l("Some Dockerfile instructions are able to read environment variables created by "),_a=a("code"),LE=l("ENV"),RE=l(" commands, and replace them with the values that those environment variables hold."),Kc=f(),le=a("p"),TE=l("The syntax is "),wa=a("code"),NE=l("$variable_name"),HE=l(" or "),Da=a("code"),ME=l("${variable_name}"),SE=l(" within a Dockerfile."),Wc=f(),Ge=a("ul"),se=a("li"),ya=a("code"),AE=l("${variable:-word}"),xE=l(" to set "),ba=a("code"),UE=l("word"),YE=l(" as default value when "),Oa=a("code"),GE=l("variable"),KE=l(" is not set"),WE=f(),w=a("li"),Ca=a("code"),VE=l("${variable:+word}"),FE=l(" to set "),Ia=a("code"),BE=l("word"),qE=l(" as "),Pa=a("code"),zE=l("variable"),$E=l(" when "),La=a("code"),jE=l("variable"),XE=l(" has already been set, otherwise "),Ra=a("code"),QE=l("variable"),ZE=l(" will be empty string."),Vc=f(),u=a("p"),JE=l("Dockerfile instructions that support environment variables are: "),Ta=a("code"),gE=l("ADD"),ev=l(", "),Na=a("code"),tv=l("COPY"),ov=l(", "),Ha=a("code"),lv=l("ENV"),sv=l(", "),Ma=a("code"),av=l("EXPOSE"),rv=l(", "),Sa=a("code"),iv=l("FROM"),nv=l(", "),Aa=a("code"),cv=l("LABEL"),fv=l(", "),xa=a("code"),dv=l("STOPSIGNAL"),pv=l(", "),Ua=a("code"),uv=l("USER"),mv=l(", "),Ya=a("code"),Ev=l("VOLUME"),vv=l(", "),Ga=a("code"),hv=l("WORKDIR"),kv=l(", "),Ka=a("code"),_v=l("ONBUILD"),wv=l("."),Fc=f(),Lt=a("pre"),Bc=f(),$o=a("h3"),Wa=a("code"),Dv=l(".dockerignore"),qc=f(),N=a("p"),yv=l("Similar to "),Va=a("code"),bv=l(".gitignore"),Ov=l(", this file contains a list of files and directories that docker should "),Fa=a("strong"),Cv=l("exclude"),Iv=l(" from the "),Ba=a("em"),Pv=l("context"),Lv=l(" of a docker build."),zc=f(),jo=a("p"),Rv=l("This is useful for preventing sending of large or sensitive files to docker daemon."),$c=f(),jc=a("hr"),Xc=f(),Xo=a("h2"),Tv=l("useful docker CLI commands"),Qc=f(),Qo=a("h3"),Nv=l("docker run"),Zc=f(),Zo=a("p"),Hv=l("Runs your images as isolated containers."),Jc=f(),Rt=a("pre"),gc=f(),ae=a("details"),qa=a("summary"),Mv=l("details"),Sv=f(),za=a("p"),D=a("em"),$a=a("code"),Av=l("docker run"),xv=l("\u2019s "),ja=a("code"),Uv=l("[OPTIONS]"),Yv=l(" are specified "),Xa=a("strong"),Gv=l("before"),Kv=l(" the image name, whilst arguments ("),Qa=a("code"),Wv=l("[ARG...]"),Vv=l(") for the command to be executed within the container is "),Za=a("strong"),Fv=l("AFTER"),Bv=l(" the image name and command."),qv=f(),Jo=a("p"),zv=l("for example: "),Ja=a("code"),$v=l("docker run -ti ubuntu-image touch /path/to/file"),ef=f(),Tt=a("p"),ga=a("code"),jv=l("docker run"),Xv=l(" is able to set many runtime options and override default settings defined by images, these include:"),tf=f(),y=a("ul"),er=a("li"),Qv=l("running container in foreground or detached mode"),Zv=f(),tr=a("li"),Jv=l("name of container"),gv=f(),or=a("li"),e1=l("network settings"),t1=f(),lr=a("li"),o1=l("volume settings"),l1=f(),sr=a("li"),s1=l("cpu / memory limits"),of=f(),go=a("p"),a1=l("Common options to specify:"),lf=f(),E=a("ul"),el=a("li"),ar=a("code"),r1=l("--name"),i1=l(" : assign a name to container (defaults to randomly generated words)"),n1=f(),F=a("li"),rr=a("code"),c1=l("--detach"),f1=l(" / "),ir=a("code"),d1=l("-d"),p1=l(" : run in detached mode so the terminal of the machine does not continouously stream container\u2019s "),nr=a("code"),u1=l("STDOUT"),m1=l(" / "),cr=a("code"),E1=l("STDERR"),v1=f(),H=a("li"),fr=a("code"),h1=l("--interactive"),k1=l(" / "),dr=a("code"),_1=l("-i"),w1=l(" : keep "),pr=a("code"),D1=l("STDIN"),y1=l(" open even if not attached (usually used with "),ur=a("code"),b1=l("-t"),O1=l(")"),C1=f(),M=a("li"),mr=a("code"),I1=l("--tty"),P1=l(" / "),Er=a("code"),L1=l("-t"),R1=l(" : allocate pseudo-TTY to connect to container\u2019s "),vr=a("code"),T1=l("STDIN"),N1=l(" (usually used with "),hr=a("code"),H1=l("-i"),M1=l(")"),S1=f(),Ke=a("li"),kr=a("code"),A1=l("--expose"),x1=l(" / "),_r=a("code"),U1=l("-p"),Y1=l(" : expose container\u2019s ports to other containers and/or the host machine."),G1=f(),tl=a("li"),wr=a("code"),K1=l("--mount"),W1=l(" : mount volumes or directories to container"),V1=f(),S=a("li"),Dr=a("code"),F1=l("--volume"),B1=l(" / "),yr=a("code"),q1=l("-v"),z1=l(" : mount volumes or directories to container (use of "),br=a("code"),$1=l("--mount"),j1=l(" is recommended, "),Nt=a("a"),X1=l("see differences here"),Q1=l(")"),sf=f(),We=a("details"),Or=a("summary"),Z1=l("note on docker run documentation"),J1=f(),ve=a("p"),g1=l("there are two pages for docker run, a "),Ht=a("a"),eh=l("generic one"),th=l(" that lists all commands and "),Mt=a("a"),oh=l("another one"),lh=l(" that provides more explanation"),af=f(),ol=a("h3"),sh=l("docker build"),rf=f(),ll=a("h3"),ah=l("docker image"),nf=f(),sl=a("h3"),rh=l("docker container"),cf=f(),al=a("h3"),ih=l("docker network"),ff=f(),rl=a("p"),nh=l("Manages Docker networks"),df=f(),St=a("pre"),pf=f(),il=a("p"),ch=l("Common commands:"),uf=f(),_=a("ul"),nl=a("li"),Cr=a("code"),fh=l("create"),dh=l(" : creates a docker network"),ph=f(),Ve=a("li"),Ir=a("code"),uh=l("connect"),mh=l(" / "),Pr=a("code"),Eh=l("disconnect"),vh=l(" : connect / disconnect a container to a network"),hh=f(),cl=a("li"),Lr=a("code"),kh=l("inspect"),_h=l(" : get detailed info about network(s)"),wh=f(),fl=a("li"),Rr=a("code"),Dh=l("ls"),yh=l(" : list docker networks"),bh=f(),dl=a("li"),Tr=a("code"),Oh=l("rm"),Ch=l(" : removes docker network(s)"),Ih=f(),pl=a("li"),Nr=a("code"),Ph=l("prune"),Lh=l(" : removes all unused networks"),mf=f(),ul=a("h3"),Rh=l("docker volume"),Ef=f(),ml=a("h3"),Th=l("docker logs"),vf=f(),re=a("p"),Nh=l("Retrieves container\u2019s logs (to "),Hr=a("code"),Hh=l("STDOUT"),Mh=l(" and "),Mr=a("code"),Sh=l("STDERR"),Ah=l(") to your CLI."),hf=f(),At=a("pre"),kf=f(),El=a("p"),xh=l("Common options to specify:"),_f=f(),b=a("ul"),Fe=a("li"),Sr=a("code"),Uh=l("--follow"),Yh=l(" / "),Ar=a("code"),Gh=l("-f"),Kh=l(" : continuously streams the log output"),Wh=f(),Be=a("li"),xr=a("code"),Vh=l("--timestamps"),Fh=l(" / "),Ur=a("code"),Bh=l("-t"),qh=l(" : show timestamps of logs"),zh=f(),ie=a("li"),Yr=a("code"),$h=l("--tail"),jh=l(" / "),Gr=a("code"),Xh=l("-n"),Qh=l(" : number of lines to show from end of the log (defaults to "),Kr=a("code"),Zh=l("all"),Jh=l(")"),gh=f(),A=a("li"),Wr=a("code"),e3=l("--since"),t3=l(" : show logs "),Vr=a("em"),o3=l("since"),l3=l(" timestamp ("),Fr=a("code"),s3=l("2013-01-02T13:37:00Z"),a3=l(") or relative ("),Br=a("code"),r3=l("42m"),i3=l(")"),n3=f(),qe=a("li"),qr=a("code"),c3=l("--until"),f3=l(" : show logs "),zr=a("em"),d3=l("before"),p3=l(" timestamp or relative"),wf=f(),vl=a("h3"),u3=l("docker inspect"),Df=f(),hl=a("p"),m3=l(`Returns detailed information about docker objects.
Objects can be images, containers, networks, volumes, etc.`),yf=f(),xt=a("pre"),bf=f(),kl=a("h3"),E3=l("docker ps"),Of=f(),_l=a("p"),v3=l(`List all containers and information about them (such as ID, image name, ports etc.)
Defaults to listing running containers only.`),Cf=f(),Ut=a("pre"),If=f(),wl=a("p"),h3=l("Useful options:"),Pf=f(),O=a("ul"),ze=a("li"),$r=a("code"),k3=l("--all"),_3=l(" / "),jr=a("code"),w3=l("-a"),D3=l(" : lists all containers, including those that are not running"),y3=f(),ne=a("li"),Xr=a("code"),b3=l("--size"),O3=l(" / "),Qr=a("code"),C3=l("-s"),I3=l(" : include size of the container in output. Shows both size of container (i.e. writable layer), and "),Zr=a("code"),P3=l("virtual"),L3=l(" size of total disk-space used, i.e. container + image."),R3=f(),Dl=a("li"),Jr=a("code"),T3=l("--no-trunc"),N3=l(" : prevent truncation in table output"),H3=f(),ce=a("li"),gr=a("code"),M3=l("--filter"),S3=l(" / "),ei=a("code"),A3=l("-f"),x3=l(" : filters the output with key-value pairs. E.g. "),ti=a("code"),U3=l('docker ps -f "name=mysparkcontainer"'),Y3=l("."),G3=f(),L=a("li"),oi=a("code"),K3=l("--format"),W3=l(" : formats the output using Go template. Placeholder information include "),li=a("code"),V3=l(".ID"),F3=l(", "),si=a("code"),B3=l(".Image"),q3=l(", "),ai=a("code"),z3=l(".Names"),$3=l(" etc."),Yt=a("ul"),$e=a("li"),ri=a("code"),j3=l('docker ps --format "{{.ID}}: {{.Name}}"'),X3=l(" will print out "),ii=a("code"),Q3=l("abcdef: name1"),Z3=l(" etc."),J3=f(),yl=a("li"),ni=a("code"),g3=l('docker ps --format "table {{.ID}}\\t{{.Name}}"'),e4=l(" will print the output in a table with header row."),Lf=f(),bl=a("h3"),t4=l("docker stats"),Rf=f(),Ol=a("p"),o4=l(`Display live info about containers\u2019 resource usage (kind of like Window\u2019s task manager).
Defaults to only showing running containers.`),Tf=f(),Gt=a("pre"),Nf=f(),Cl=a("p"),l4=l("Useful options:"),Hf=f(),x=a("ul"),je=a("li"),ci=a("code"),s4=l("--all"),a4=l(" / "),fi=a("code"),r4=l("-a"),i4=l(" : lists all containers, including those that are not running"),n4=f(),Il=a("li"),di=a("code"),c4=l("--no-trunc"),f4=l(" : Prevent truncation in table output"),d4=f(),Pl=a("li"),pi=a("code"),p4=l("--no-stream"),u4=l(" : get only a \u2018snapshot\u2019 of the current stats"),m4=f(),Ll=a("li"),ui=a("code"),E4=l("--format"),v4=l(" : formats the output using Go template."),Mf=f(),Sf=a("hr"),Af=f(),Rl=a("h2"),h4=l("networking"),xf=f(),Tl=a("p"),k4=l("Docker containers can communicate with each other, and they can also communicate with non-Docker programs in your host machine network."),Uf=f(),Nl=a("p"),_4=l("There are several types of network drivers that help you connect your containers, programs, nodes:"),Yf=f(),v=a("ul"),Kt=a("li"),mi=a("code"),w4=l("bridge"),D4=l(" : (default) Docker managed network, isolated from host machine; used when connecting multiple containers on the "),Ei=a("em"),y4=l("same Docker host"),b4=f(),Xe=a("li"),vi=a("code"),O4=l("host"),C4=l(" : (linux only) shares host networking (i.e. ip address) with the container; container which binds to port 80 will be accessible on port 80 on "),hi=a("em"),I4=l("host\u2019s"),P4=l(" IP address"),L4=f(),Hl=a("li"),ki=a("code"),R4=l("overlay"),T4=l(" : connects multiple Docker daemons together; used when trying to connect containers running on separate Docker host machine"),N4=f(),Ml=a("li"),_i=a("code"),H4=l("ipvlan"),M4=l(" : attaches your containers to the host machine\u2019s network, giving the containers their own IP address in the network; use when you want to connect the container to host machine\u2019s network"),S4=f(),Sl=a("li"),wi=a("code"),A4=l("macvlan"),x4=l(" : assigns a new mac address so it appears as a physical device in your network; use for linking with legacy applications that require containers to appear as physical device"),U4=f(),Al=a("li"),Di=a("code"),Y4=l("none"),G4=l(" : disables all networking for the container"),K4=f(),yi=a("li"),W4=l("third party network plugins can also be intalled from Docker Hub / other vendors"),Gf=f(),Kf=a("hr"),Wf=f(),xl=a("h2"),V4=l("storage"),Vf=f(),Ul=a("p"),F4=l("By default, Docker containers store data in the container\u2019s writable layer, using a storage driver, and is not persisted."),Ff=f(),Yl=a("p"),B4=l("5 types of storage in Docker to put container\u2019s data"),Bf=f(),C=a("ul"),bi=a("li"),q4=l("default container\u2019s writable layer : does not persist. optimized for space efficiency, so write speeds are lower than native."),z4=f(),Oi=a("li"),$4=l("volumes : isolated, Docker managed, can store in remote drives, can share volumes with multiple containers"),j4=f(),Ci=a("li"),X4=l("bind mount : directly mount a specific directory on host machine to the container"),Q4=f(),Ii=a("li"),Z4=l("tmpfs mount (linux only) : store container data in memory, not persistent, but faster performance since its using RAM"),J4=f(),Pi=a("li"),g4=l("npipe mount (named pipes) (Windows only) : used to store data in memory for Windows"),this.h()},l(e){De=r(e,"H1",{});var n=i(De);pd=s(n,PD),n.forEach(o),Wi=d(e),$t=r(e,"P",{});var O2=i($t);ud=s(O2,"Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),O2.forEach(o),Vi=d(e),jt=r(e,"P",{});var C2=i(jt);md=s(C2,`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),C2.forEach(o),Fi=d(e),Xt=r(e,"H2",{});var I2=i(Xt);Ed=s(I2,"key concepts"),I2.forEach(o),Bi=d(e),Qt=r(e,"H3",{});var P2=i(Qt);vd=s(P2,"Docker images"),P2.forEach(o),qi=d(e),Zt=r(e,"P",{});var L2=i(Zt);hd=s(L2,`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),L2.forEach(o),zi=d(e),Jt=r(e,"P",{});var R2=i(Jt);kd=s(R2,"Images are often build on top of one another"),R2.forEach(o),$i=d(e),ye=r(e,"UL",{});var qf=i(ye);K=r(qf,"LI",{});var Qe=i(K);_d=s(Qe,"e.g. you start with "),ts=r(Qe,"CODE",{});var T2=i(ts);wd=s(T2,"ubuntu"),T2.forEach(o),Dd=s(Qe," image, install "),os=r(Qe,"CODE",{});var N2=i(os);yd=s(N2,"python"),N2.forEach(o),bd=s(Qe," in that ubuntu image, install "),ls=r(Qe,"CODE",{});var H2=i(ls);Od=s(H2,"pytorch"),H2.forEach(o),Cd=s(Qe," package, install pretrained models."),Qe.forEach(o),Id=d(qf),ot=r(qf,"LI",{});var zf=i(ot);Pd=s(zf,"or you can start with a published "),ss=r(zf,"CODE",{});var M2=i(ss);Ld=s(M2,"python"),M2.forEach(o),Rd=s(zf," image, and install your packages there."),zf.forEach(o),qf.forEach(o),ji=d(e),gt=r(e,"P",{});var S2=i(gt);Td=s(S2,"Published images are available for download in Docker registries."),S2.forEach(o),Xi=d(e),eo=r(e,"H4",{});var A2=i(eo);Nd=s(A2,"Dockerfile"),A2.forEach(o),Qi=d(e),lt=r(e,"P",{});var e2=i(lt);as=r(e2,"CODE",{});var x2=i(as);Hd=s(x2,"Dockerfile"),x2.forEach(o),Md=s(e2,"s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),e2.forEach(o),Zi=d(e),to=r(e,"H3",{});var U2=i(to);Sd=s(U2,"Docker containers"),U2.forEach(o),Ji=d(e),be=r(e,"P",{});var $f=i(be);Ad=s($f,`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),rs=r($f,"CODE",{});var Y2=i(rs);xd=s(Y2,"nodejs"),Y2.forEach(o),Ud=s($f," image, but one exposes port 8888 and another exposes port 8899."),$f.forEach(o),gi=d(e),oo=r(e,"H3",{});var G2=i(oo);Yd=s(G2,"Docker registries"),G2.forEach(o),en=d(e),lo=r(e,"P",{});var K2=i(lo);Gd=s(K2,"Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),K2.forEach(o),tn=d(e),so=r(e,"H3",{});var W2=i(so);Kd=s(W2,"Docker daemon"),W2.forEach(o),on=d(e),Oe=r(e,"P",{});var jf=i(Oe);Wd=s(jf,"This is the underlying "),is=r(jf,"CODE",{});var V2=i(is);Vd=s(V2,"dockerd"),V2.forEach(o),Fd=s(jf," process that helps you build images and run containers. It will listen for Docker API requests"),jf.forEach(o),ln=d(e),ao=r(e,"H3",{});var F2=i(ao);Bd=s(F2,"Docker client"),F2.forEach(o),sn=d(e),R=r(e,"P",{});var Ze=i(R);qd=s(Ze,"The docker client "),ns=r(Ze,"CODE",{});var B2=i(ns);zd=s(B2,"docker"),B2.forEach(o),$d=s(Ze," is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),cs=r(Ze,"CODE",{});var q2=i(cs);jd=s(q2,"docker"),q2.forEach(o),Xd=s(Ze," command sends Docker API requests to "),fs=r(Ze,"CODE",{});var z2=i(fs);Qd=s(z2,"dockerd"),z2.forEach(o),Zd=s(Ze,"."),Ze.forEach(o),an=d(e),ro=r(e,"H3",{});var $2=i(ro);Jd=s($2,"Docker compose"),$2.forEach(o),rn=d(e),Ce=r(e,"P",{});var Xf=i(Ce);gd=s(Xf,"Docker compose is a tool that helps with running "),ds=r(Xf,"EM",{});var j2=i(ds);ep=s(j2,"multi-container"),j2.forEach(o),tp=s(Xf," Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),Xf.forEach(o),nn=d(e),io=r(e,"P",{});var X2=i(io);op=s(X2,"For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),X2.forEach(o),cn=d(e),no=r(e,"H4",{});var Q2=i(no);lp=s(Q2,"Difference between Kubernetes"),Q2.forEach(o),fn=d(e),Ie=r(e,"P",{});var Qf=i(Ie);sp=s(Qf,"Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),ps=r(Qf,"EM",{});var Z2=i(ps);ap=s(Z2,"single-node"),Z2.forEach(o),rp=s(Qf,", whereas Kubernetes is a full multi-node container manager."),Qf.forEach(o),dn=d(e),co=r(e,"P",{});var J2=i(co);ip=s(J2,"Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),J2.forEach(o),pn=d(e),un=r(e,"HR",{}),mn=d(e),fo=r(e,"H2",{});var g2=i(fo);np=s(g2,"Dockerfile"),g2.forEach(o),En=d(e),po=r(e,"H3",{});var ek=i(po);cp=s(ek,"Commands"),ek.forEach(o),vn=d(e),uo=r(e,"H4",{});var tk=i(uo);fp=s(tk,"FROM"),tk.forEach(o),hn=d(e),Pe=r(e,"P",{});var Zf=i(Pe);dp=s(Zf,"All dockerfile starts with the "),us=r(Zf,"CODE",{});var ok=i(us);pp=s(ok,"FROM"),ok.forEach(o),up=s(Zf," command. It pulls the base image from Dockerhub to start to build your image."),Zf.forEach(o),kn=d(e),st=r(e,"PRE",{class:!0});var e6=i(st);e6.forEach(o),_n=d(e),mo=r(e,"H4",{});var lk=i(mo);mp=s(lk,"RUN"),lk.forEach(o),wn=d(e),Eo=r(e,"P",{});var sk=i(Eo);Ep=s(sk,"Runs a command or executable. It has two forms"),sk.forEach(o),Dn=d(e),at=r(e,"PRE",{class:!0});var t6=i(at);t6.forEach(o),yn=d(e),vo=r(e,"H4",{});var ak=i(vo);vp=s(ak,"CMD"),ak.forEach(o),bn=d(e),ho=r(e,"P",{});var rk=i(ho);hp=s(rk,"Provides defaults for an executing container. The arguments will be appended to ENTRYPOINT."),rk.forEach(o),On=d(e),rt=r(e,"PRE",{class:!0});var o6=i(rt);o6.forEach(o),Cn=d(e),ko=r(e,"H4",{});var ik=i(ko);kp=s(ik,"ENTRYPOINT"),ik.forEach(o),In=d(e),_o=r(e,"P",{});var nk=i(_o);_p=s(nk,`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),nk.forEach(o),Pn=d(e),it=r(e,"PRE",{class:!0});var l6=i(it);l6.forEach(o),Ln=d(e),wo=r(e,"H4",{});var ck=i(wo);wp=s(ck,"COPY"),ck.forEach(o),Rn=d(e),Do=r(e,"P",{});var fk=i(Do);Dp=s(fk,"Copies file from your native host into the container image."),fk.forEach(o),Tn=d(e),nt=r(e,"PRE",{class:!0});var s6=i(nt);s6.forEach(o),Nn=d(e),z=r(e,"P",{});var Gl=i(z);yp=s(Gl,"Multiple "),ms=r(Gl,"CODE",{});var dk=i(ms);bp=s(dk,"<src>"),dk.forEach(o),Op=s(Gl," can be specified, and the last argument will be treated as the "),Es=r(Gl,"CODE",{});var pk=i(Es);Cp=s(pk,"<dest>"),pk.forEach(o),Ip=s(Gl,"."),Gl.forEach(o),Hn=d(e),Le=r(e,"P",{});var Jf=i(Le);Pp=s(Jf,"All "),vs=r(Jf,"CODE",{});var uk=i(vs);Lp=s(uk,"<src>"),uk.forEach(o),Rp=s(Jf," relative paths must be inside context of the build!"),Jf.forEach(o),Mn=d(e),yo=r(e,"H4",{});var mk=i(yo);Tp=s(mk,"ADD"),mk.forEach(o),Sn=d(e),bo=r(e,"P",{});var Ek=i(bo);Np=s(Ek,"Copies file from your native host into the container image."),Ek.forEach(o),An=d(e),ct=r(e,"PRE",{class:!0});var a6=i(ct);a6.forEach(o),xn=d(e),Re=r(e,"P",{});var gf=i(Re);Hp=s(gf,"Compared to COPY, "),hs=r(gf,"CODE",{});var vk=i(hs);Mp=s(vk,"ADD"),vk.forEach(o),Sp=s(gf," has added utilities like:"),gf.forEach(o),Un=d(e),$=r(e,"UL",{});var Kl=i($);ks=r(Kl,"LI",{});var hk=i(ks);Ap=s(hk,"being able to download files from URLs then copying them into the image"),hk.forEach(o),xp=d(Kl),ft=r(Kl,"LI",{});var ed=i(ft);Up=s(ed,"extracting contents of "),_s=r(ed,"CODE",{});var kk=i(_s);Yp=s(kk,".tar"),kk.forEach(o),Gp=s(ed," files before copying into image"),ed.forEach(o),Kp=d(Kl),ws=r(Kl,"LI",{});var _k=i(ws);Wp=s(_k,"adding contents from a git repo"),_k.forEach(o),Kl.forEach(o),Yn=d(e),dt=r(e,"P",{});var t2=i(dt);Ds=r(t2,"STRONG",{});var wk=i(Ds);Vp=s(wk,"tip: use COPY as default, unless you need the additional features of ADD."),wk.forEach(o),Fp=s(t2," This is to prevent unwanted side effects!"),t2.forEach(o),Gn=d(e),j=r(e,"P",{});var Wl=i(j);Bp=s(Wl,"Multiple "),ys=r(Wl,"CODE",{});var Dk=i(ys);qp=s(Dk,"<src>"),Dk.forEach(o),zp=s(Wl," can be specified, and the last argument will be treated as the "),bs=r(Wl,"CODE",{});var yk=i(bs);$p=s(yk,"<dest>"),yk.forEach(o),jp=s(Wl,"."),Wl.forEach(o),Kn=d(e),Te=r(e,"P",{});var td=i(Te);Xp=s(td,"All "),Os=r(td,"CODE",{});var bk=i(Os);Qp=s(bk,"<src>"),bk.forEach(o),Zp=s(td," relative paths must be inside context of the build!"),td.forEach(o),Wn=d(e),Oo=r(e,"H4",{});var Ok=i(Oo);Jp=s(Ok,"ENV"),Ok.forEach(o),Vn=d(e),Co=r(e,"P",{});var Ck=i(Co);gp=s(Ck,"Sets an environment variable"),Ck.forEach(o),Fn=d(e),pt=r(e,"PRE",{class:!0});var r6=i(pt);r6.forEach(o),Bn=d(e),Io=r(e,"H4",{});var Ik=i(Io);eu=s(Ik,"EXPOSE"),Ik.forEach(o),qn=d(e),Po=r(e,"P",{});var Pk=i(Po);tu=s(Pk,"Instructs Docker that container should listen on specified network ports at runtime."),Pk.forEach(o),zn=d(e),ut=r(e,"PRE",{class:!0});var i6=i(ut);i6.forEach(o),$n=d(e),W=r(e,"P",{});var Wt=i(W);Cs=r(Wt,"STRONG",{});var Lk=i(Cs);ou=s(Lk,"Ports are not automatically published"),Lk.forEach(o),lu=s(Wt,`, and this command is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),Is=r(Wt,"CODE",{});var Rk=i(Is);su=s(Rk,"-P"),Rk.forEach(o),au=s(Wt," flag (which maps exposed ports in container to random ports in native host machine), or "),Ps=r(Wt,"CODE",{});var Tk=i(Ps);ru=s(Tk,"-p"),Tk.forEach(o),iu=s(Wt," to explicitly map ports from containers to your localhost."),Wt.forEach(o),jn=d(e),Lo=r(e,"H4",{});var Nk=i(Lo);nu=s(Nk,"VOLUME"),Nk.forEach(o),Xn=d(e),Ro=r(e,"P",{});var Hk=i(Ro);cu=s(Hk,`Marks the directory(s) within the container as an external drive from native host or other containers.
This allows files to be accessed from outside the containers.`),Hk.forEach(o),Qn=d(e),mt=r(e,"PRE",{class:!0});var n6=i(mt);n6.forEach(o),Zn=d(e),Ne=r(e,"P",{});var od=i(Ne);fu=s(od,"Note that where this (container) directory maps to in your native host is "),Ls=r(od,"STRONG",{});var Mk=i(Ls);du=s(Mk,"specified when you build or run the container"),Mk.forEach(o),pu=s(od,"."),od.forEach(o),Jn=d(e),To=r(e,"H4",{});var Sk=i(To);uu=s(Sk,"WORKDIR"),Sk.forEach(o),gn=d(e),h=r(e,"P",{});var U=i(h);mu=s(U,"Sets working directory for any "),Rs=r(U,"CODE",{});var Ak=i(Rs);Eu=s(Ak,"RUN"),Ak.forEach(o),vu=s(U,", "),Ts=r(U,"CODE",{});var xk=i(Ts);hu=s(xk,"CMD"),xk.forEach(o),ku=s(U,", "),Ns=r(U,"CODE",{});var Uk=i(Ns);_u=s(Uk,"ENTRYPOINT"),Uk.forEach(o),wu=s(U,", "),Hs=r(U,"CODE",{});var Yk=i(Hs);Du=s(Yk,"COPY"),Yk.forEach(o),yu=s(U,", "),Ms=r(U,"CODE",{});var Gk=i(Ms);bu=s(Gk,"ADD"),Gk.forEach(o),Ou=s(U," instructions that follows."),U.forEach(o),ec=d(e),Et=r(e,"PRE",{class:!0});var c6=i(Et);c6.forEach(o),tc=d(e),He=r(e,"P",{});var ld=i(He);Cu=s(ld,"Multiple "),Ss=r(ld,"CODE",{});var Kk=i(Ss);Iu=s(Kk,"WORKDIR"),Kk.forEach(o),Pu=s(ld," can be used in a dockerfile."),ld.forEach(o),oc=d(e),X=r(e,"P",{});var Vl=i(X);Lu=s(Vl,"If not specified, default directory is "),As=r(Vl,"CODE",{});var Wk=i(As);Ru=s(Wk,"/"),Wk.forEach(o),Tu=s(Vl,`.
But if you are pulling from an image, chances are `),xs=r(Vl,"CODE",{});var Vk=i(xs);Nu=s(Vk,"WORKDIR"),Vk.forEach(o),Hu=s(Vl," already been set in your base image and it will be brought over."),Vl.forEach(o),lc=d(e),No=r(e,"P",{});var Fk=i(No);vt=r(Fk,"STRONG",{});var sd=i(vt);Mu=s(sd,"tip: explicitly set "),Us=r(sd,"CODE",{});var Bk=i(Us);Su=s(Bk,"WORKDIR"),Bk.forEach(o),Au=s(sd," to prevent unintended operations in unknown dirs"),sd.forEach(o),Fk.forEach(o),sc=d(e),Q=r(e,"P",{});var Fl=i(Q);xu=s(Fl,"It is also possible to resolve env variables previously set by "),Ys=r(Fl,"CODE",{});var qk=i(Ys);Uu=s(qk,"ENV"),qk.forEach(o),Yu=s(Fl,", e.g. "),Gs=r(Fl,"CODE",{});var zk=i(Gs);Gu=s(zk,"WORKDIR $DIRPATH_ENV_VAR"),zk.forEach(o),Ku=s(Fl,"."),Fl.forEach(o),ac=d(e),Ho=r(e,"H4",{});var $k=i(Ho);Wu=s($k,"ARG"),$k.forEach(o),rc=d(e),Z=r(e,"P",{});var Bl=i(Z);Vu=s(Bl,"Defines a variable that users can pass values into during "),Ks=r(Bl,"CODE",{});var jk=i(Ks);Fu=s(jk,"docker build"),jk.forEach(o),Bu=s(Bl," by using "),Ws=r(Bl,"CODE",{});var Xk=i(Ws);qu=s(Xk,"--build-arg <argname>=<value>"),Xk.forEach(o),zu=s(Bl," flag."),Bl.forEach(o),ic=d(e),ht=r(e,"PRE",{class:!0});var f6=i(ht);f6.forEach(o),nc=d(e),V=r(e,"P",{});var Vt=i(V);Vs=r(Vt,"CODE",{});var Qk=i(Vs);$u=s(Qk,"ENV"),Qk.forEach(o),ju=s(Vt," variables will overwrite "),Fs=r(Vt,"CODE",{});var Zk=i(Fs);Xu=s(Zk,"ARG"),Zk.forEach(o),Qu=s(Vt," variables if they are the same name (at the point where the "),Bs=r(Vt,"CODE",{});var Jk=i(Bs);Zu=s(Jk,"ENV"),Jk.forEach(o),Ju=s(Vt," variable is defined)."),Vt.forEach(o),cc=d(e),Mo=r(e,"H4",{});var gk=i(Mo);gu=s(gk,"ONBUILD"),gk.forEach(o),fc=d(e),So=r(e,"P",{});var e_=i(So);em=s(e_,"Adds a trigger to the image that will execute dockerfile instructions when the current image is used as the base for another build."),e_.forEach(o),dc=d(e),kt=r(e,"PRE",{class:!0});var d6=i(kt);d6.forEach(o),pc=d(e),Ao=r(e,"P",{});var t_=i(Ao);tm=s(t_,"This command is usful when when you are building a base image that will be distributed to other people, and instructions that depend on other people\u2019s files needs to be run. Example, you could add:"),t_.forEach(o),uc=d(e),_t=r(e,"PRE",{class:!0});var p6=i(_t);p6.forEach(o),mc=d(e),J=r(e,"P",{});var ql=i(J);om=s(ql,"The instructions specified are triggered "),qs=r(ql,"EM",{});var o_=i(qs);lm=s(o_,"immediately"),o_.forEach(o),sm=s(ql," after the "),zs=r(ql,"CODE",{});var l_=i(zs);am=s(l_,"FROM"),l_.forEach(o),rm=s(ql," instruction in the child image."),ql.forEach(o),Ec=d(e),wt=r(e,"P",{});var o2=i(wt);$s=r(o2,"CODE",{});var s_=i($s);im=s(s_,"ONBUILD"),s_.forEach(o),nm=s(o2," triggers are not inherited by children images."),o2.forEach(o),vc=d(e),xo=r(e,"H4",{});var a_=i(xo);cm=s(a_,"STOPSIGNAL"),a_.forEach(o),hc=d(e),Uo=r(e,"P",{});var r_=i(Uo);fm=s(r_,"Sets the system call signal that will cause the container to exit."),r_.forEach(o),kc=d(e),Dt=r(e,"PRE",{class:!0});var u6=i(Dt);u6.forEach(o),_c=d(e),g=r(e,"UL",{});var zl=i(g);Yo=r(zl,"LI",{});var l2=i(Yo);dm=s(l2,"Default is "),js=r(l2,"CODE",{});var i_=i(js);pm=s(i_,"SIGTERM"),i_.forEach(o),l2.forEach(o),um=d(zl),Ee=r(zl,"LI",{});var $l=i(Ee);mm=s($l,"Can be in "),Xs=r($l,"CODE",{});var n_=i(Xs);Em=s(n_,"SIG<NAME>"),n_.forEach(o),vm=s($l," format (e.g. "),Qs=r($l,"CODE",{});var c_=i(Qs);hm=s(c_,"SIGKILL"),c_.forEach(o),km=s($l,")"),$l.forEach(o),_m=d(zl),yt=r(zl,"LI",{});var ad=i(yt);wm=s(ad,"Can be an unassigned number in kernel\u2019s syscall table (e.g. "),Zs=r(ad,"CODE",{});var f_=i(Zs);Dm=s(f_,"9"),f_.forEach(o),ym=s(ad,")"),ad.forEach(o),zl.forEach(o),wc=d(e),Go=r(e,"H4",{});var d_=i(Go);bm=s(d_,"HEALTHCHECK"),d_.forEach(o),Dc=d(e),Ko=r(e,"P",{});var p_=i(Ko);Om=s(p_,"Specifies a command to be run inside the container to check container\u2019s health."),p_.forEach(o),yc=d(e),bt=r(e,"PRE",{class:!0});var m6=i(bt);m6.forEach(o),bc=d(e),Ot=r(e,"P",{});var s2=i(Ot);Js=r(s2,"CODE",{});var u_=i(Js);Cm=s(u_,"OPTIONS"),u_.forEach(o),Im=s(s2," include:"),s2.forEach(o),Oc=d(e),T=r(e,"UL",{});var Je=i(T);Me=r(Je,"LI",{});var Li=i(Me);gs=r(Li,"CODE",{});var m_=i(gs);Pm=s(m_,"--interval=DURATION"),m_.forEach(o),Lm=s(Li," (default "),ea=r(Li,"CODE",{});var E_=i(ea);Rm=s(E_,"30s"),E_.forEach(o),Tm=s(Li,")"),Li.forEach(o),Nm=d(Je),Se=r(Je,"LI",{});var Ri=i(Se);ta=r(Ri,"CODE",{});var v_=i(ta);Hm=s(v_,"--timeout=DURATION"),v_.forEach(o),Mm=s(Ri," (default "),oa=r(Ri,"CODE",{});var h_=i(oa);Sm=s(h_,"30s"),h_.forEach(o),Am=s(Ri,")"),Ri.forEach(o),xm=d(Je),Ae=r(Je,"LI",{});var Ti=i(Ae);la=r(Ti,"CODE",{});var k_=i(la);Um=s(k_,"--retries=N"),k_.forEach(o),Ym=s(Ti," (default "),sa=r(Ti,"CODE",{});var __=i(sa);Gm=s(__,"3"),__.forEach(o),Km=s(Ti,")"),Ti.forEach(o),Wm=d(Je),xe=r(Je,"LI",{});var Ni=i(xe);aa=r(Ni,"CODE",{});var w_=i(aa);Vm=s(w_,"--start-period=DURATION"),w_.forEach(o),Fm=s(Ni," (default "),ra=r(Ni,"CODE",{});var D_=i(ra);Bm=s(D_,"0s"),D_.forEach(o),qm=s(Ni,")"),Ni.forEach(o),Je.forEach(o),Cc=d(e),k=r(e,"P",{});var Y=i(k);zm=s(Y,"A container that has "),ia=r(Y,"CODE",{});var y_=i(ia);$m=s(y_,"HEALTHCHECK"),y_.forEach(o),jm=s(Y," specified will have a "),na=r(Y,"EM",{});var b_=i(na);Xm=s(b_,"health status"),b_.forEach(o),Qm=s(Y," that can take 3 possible states: "),ca=r(Y,"CODE",{});var O_=i(ca);Zm=s(O_,"starting"),O_.forEach(o),Jm=s(Y," | "),fa=r(Y,"CODE",{});var C_=i(fa);gm=s(C_,"healthy"),C_.forEach(o),eE=s(Y," | "),da=r(Y,"CODE",{});var I_=i(da);tE=s(I_,"unhealthy"),I_.forEach(o),oE=s(Y,"."),Y.forEach(o),Ic=d(e),ee=r(e,"P",{});var jl=i(ee);lE=s(jl,"Whenever a health check passes, health status changes to "),pa=r(jl,"CODE",{});var P_=i(pa);sE=s(P_,"healthy"),P_.forEach(o),aE=s(jl,". After a number of consecutive failures, health status changes to "),ua=r(jl,"CODE",{});var L_=i(ua);rE=s(L_,"unhealthy"),L_.forEach(o),iE=s(jl,"."),jl.forEach(o),Pc=d(e),te=r(e,"P",{});var Xl=i(te);nE=s(Xl,`Health checks are run after every interval.
Health checks are considered failed when commands runs for longer than timeout.
When consecutive failures reaches max retries, or command exits with non zero status code `),ma=r(Xl,"CODE",{});var R_=i(ma);cE=s(R_,"0"),R_.forEach(o),fE=s(Xl,", "),Ea=r(Xl,"EM",{});var T_=i(Ea);dE=s(T_,"health status"),T_.forEach(o),pE=s(Xl," will change to unhealthy."),Xl.forEach(o),Lc=d(e),Wo=r(e,"H4",{});var N_=i(Wo);uE=s(N_,"SHELL"),N_.forEach(o),Rc=d(e),oe=r(e,"P",{});var Ql=i(oe);mE=s(Ql,"Specifies the default shell used for shell form of commands. Default is set to "),va=r(Ql,"CODE",{});var H_=i(va);EE=s(H_,'["/bin/sh", "-c"]'),H_.forEach(o),vE=s(Ql," for Linux containers and "),ha=r(Ql,"CODE",{});var M_=i(ha);hE=s(M_,'["cmd", "/S", "/C"]'),M_.forEach(o),kE=s(Ql," for Windows containers."),Ql.forEach(o),Tc=d(e),Ct=r(e,"PRE",{class:!0});var E6=i(Ct);E6.forEach(o),Nc=d(e),Vo=r(e,"H4",{});var S_=i(Vo);_E=s(S_,"USER"),S_.forEach(o),Hc=d(e),Fo=r(e,"P",{});var A_=i(Fo);wE=s(A_,"Sets the username/UID to use for the remainder of the Docker build stage."),A_.forEach(o),Mc=d(e),It=r(e,"PRE",{class:!0});var v6=i(It);v6.forEach(o),Sc=d(e),Bo=r(e,"P",{});var x_=i(Bo);DE=s(x_,`This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),x_.forEach(o),Ac=d(e),qo=r(e,"H4",{});var U_=i(qo);yE=s(U_,"LABEL"),U_.forEach(o),xc=d(e),Ue=r(e,"P",{});var rd=i(Ue);bE=s(rd,"Adds metadata to an image and are inherited by child images. You can view an image\u2019s labels using "),ka=r(rd,"CODE",{});var Y_=i(ka);OE=s(Y_,"docker image inspect"),Y_.forEach(o),CE=s(rd,"."),rd.forEach(o),Uc=d(e),Pt=r(e,"PRE",{class:!0});var h6=i(Pt);h6.forEach(o),Yc=d(e),zo=r(e,"H3",{});var G_=i(zo);IE=s(G_,"Environment Replacement"),G_.forEach(o),Gc=d(e),Ye=r(e,"P",{});var id=i(Ye);PE=s(id,"Some Dockerfile instructions are able to read environment variables created by "),_a=r(id,"CODE",{});var K_=i(_a);LE=s(K_,"ENV"),K_.forEach(o),RE=s(id," commands, and replace them with the values that those environment variables hold."),id.forEach(o),Kc=d(e),le=r(e,"P",{});var Zl=i(le);TE=s(Zl,"The syntax is "),wa=r(Zl,"CODE",{});var W_=i(wa);NE=s(W_,"$variable_name"),W_.forEach(o),HE=s(Zl," or "),Da=r(Zl,"CODE",{});var V_=i(Da);ME=s(V_,"${variable_name}"),V_.forEach(o),SE=s(Zl," within a Dockerfile."),Zl.forEach(o),Wc=d(e),Ge=r(e,"UL",{});var nd=i(Ge);se=r(nd,"LI",{});var Ft=i(se);ya=r(Ft,"CODE",{});var F_=i(ya);AE=s(F_,"${variable:-word}"),F_.forEach(o),xE=s(Ft," to set "),ba=r(Ft,"CODE",{});var B_=i(ba);UE=s(B_,"word"),B_.forEach(o),YE=s(Ft," as default value when "),Oa=r(Ft,"CODE",{});var q_=i(Oa);GE=s(q_,"variable"),q_.forEach(o),KE=s(Ft," is not set"),Ft.forEach(o),WE=d(nd),w=r(nd,"LI",{});var B=i(w);Ca=r(B,"CODE",{});var z_=i(Ca);VE=s(z_,"${variable:+word}"),z_.forEach(o),FE=s(B," to set "),Ia=r(B,"CODE",{});var $_=i(Ia);BE=s($_,"word"),$_.forEach(o),qE=s(B," as "),Pa=r(B,"CODE",{});var j_=i(Pa);zE=s(j_,"variable"),j_.forEach(o),$E=s(B," when "),La=r(B,"CODE",{});var X_=i(La);jE=s(X_,"variable"),X_.forEach(o),XE=s(B," has already been set, otherwise "),Ra=r(B,"CODE",{});var Q_=i(Ra);QE=s(Q_,"variable"),Q_.forEach(o),ZE=s(B," will be empty string."),B.forEach(o),nd.forEach(o),Vc=d(e),u=r(e,"P",{});var m=i(u);JE=s(m,"Dockerfile instructions that support environment variables are: "),Ta=r(m,"CODE",{});var Z_=i(Ta);gE=s(Z_,"ADD"),Z_.forEach(o),ev=s(m,", "),Na=r(m,"CODE",{});var J_=i(Na);tv=s(J_,"COPY"),J_.forEach(o),ov=s(m,", "),Ha=r(m,"CODE",{});var g_=i(Ha);lv=s(g_,"ENV"),g_.forEach(o),sv=s(m,", "),Ma=r(m,"CODE",{});var e5=i(Ma);av=s(e5,"EXPOSE"),e5.forEach(o),rv=s(m,", "),Sa=r(m,"CODE",{});var t5=i(Sa);iv=s(t5,"FROM"),t5.forEach(o),nv=s(m,", "),Aa=r(m,"CODE",{});var o5=i(Aa);cv=s(o5,"LABEL"),o5.forEach(o),fv=s(m,", "),xa=r(m,"CODE",{});var l5=i(xa);dv=s(l5,"STOPSIGNAL"),l5.forEach(o),pv=s(m,", "),Ua=r(m,"CODE",{});var s5=i(Ua);uv=s(s5,"USER"),s5.forEach(o),mv=s(m,", "),Ya=r(m,"CODE",{});var a5=i(Ya);Ev=s(a5,"VOLUME"),a5.forEach(o),vv=s(m,", "),Ga=r(m,"CODE",{});var r5=i(Ga);hv=s(r5,"WORKDIR"),r5.forEach(o),kv=s(m,", "),Ka=r(m,"CODE",{});var i5=i(Ka);_v=s(i5,"ONBUILD"),i5.forEach(o),wv=s(m,"."),m.forEach(o),Fc=d(e),Lt=r(e,"PRE",{class:!0});var k6=i(Lt);k6.forEach(o),Bc=d(e),$o=r(e,"H3",{});var n5=i($o);Wa=r(n5,"CODE",{});var c5=i(Wa);Dv=s(c5,".dockerignore"),c5.forEach(o),n5.forEach(o),qc=d(e),N=r(e,"P",{});var ge=i(N);yv=s(ge,"Similar to "),Va=r(ge,"CODE",{});var f5=i(Va);bv=s(f5,".gitignore"),f5.forEach(o),Ov=s(ge,", this file contains a list of files and directories that docker should "),Fa=r(ge,"STRONG",{});var d5=i(Fa);Cv=s(d5,"exclude"),d5.forEach(o),Iv=s(ge," from the "),Ba=r(ge,"EM",{});var p5=i(Ba);Pv=s(p5,"context"),p5.forEach(o),Lv=s(ge," of a docker build."),ge.forEach(o),zc=d(e),jo=r(e,"P",{});var u5=i(jo);Rv=s(u5,"This is useful for preventing sending of large or sensitive files to docker daemon."),u5.forEach(o),$c=d(e),jc=r(e,"HR",{}),Xc=d(e),Xo=r(e,"H2",{});var m5=i(Xo);Tv=s(m5,"useful docker CLI commands"),m5.forEach(o),Qc=d(e),Qo=r(e,"H3",{});var E5=i(Qo);Nv=s(E5,"docker run"),E5.forEach(o),Zc=d(e),Zo=r(e,"P",{});var v5=i(Zo);Hv=s(v5,"Runs your images as isolated containers."),v5.forEach(o),Jc=d(e),Rt=r(e,"PRE",{class:!0});var _6=i(Rt);_6.forEach(o),gc=d(e),ae=r(e,"DETAILS",{});var Jl=i(ae);qa=r(Jl,"SUMMARY",{});var h5=i(qa);Mv=s(h5,"details"),h5.forEach(o),Sv=d(Jl),za=r(Jl,"P",{});var k5=i(za);D=r(k5,"EM",{});var q=i(D);$a=r(q,"CODE",{});var _5=i($a);Av=s(_5,"docker run"),_5.forEach(o),xv=s(q,"\u2019s "),ja=r(q,"CODE",{});var w5=i(ja);Uv=s(w5,"[OPTIONS]"),w5.forEach(o),Yv=s(q," are specified "),Xa=r(q,"STRONG",{});var D5=i(Xa);Gv=s(D5,"before"),D5.forEach(o),Kv=s(q," the image name, whilst arguments ("),Qa=r(q,"CODE",{});var y5=i(Qa);Wv=s(y5,"[ARG...]"),y5.forEach(o),Vv=s(q,") for the command to be executed within the container is "),Za=r(q,"STRONG",{});var b5=i(Za);Fv=s(b5,"AFTER"),b5.forEach(o),Bv=s(q," the image name and command."),q.forEach(o),k5.forEach(o),qv=d(Jl),Jo=r(Jl,"P",{});var a2=i(Jo);zv=s(a2,"for example: "),Ja=r(a2,"CODE",{});var O5=i(Ja);$v=s(O5,"docker run -ti ubuntu-image touch /path/to/file"),O5.forEach(o),a2.forEach(o),Jl.forEach(o),ef=d(e),Tt=r(e,"P",{});var r2=i(Tt);ga=r(r2,"CODE",{});var C5=i(ga);jv=s(C5,"docker run"),C5.forEach(o),Xv=s(r2," is able to set many runtime options and override default settings defined by images, these include:"),r2.forEach(o),tf=d(e),y=r(e,"UL",{});var fe=i(y);er=r(fe,"LI",{});var I5=i(er);Qv=s(I5,"running container in foreground or detached mode"),I5.forEach(o),Zv=d(fe),tr=r(fe,"LI",{});var P5=i(tr);Jv=s(P5,"name of container"),P5.forEach(o),gv=d(fe),or=r(fe,"LI",{});var L5=i(or);e1=s(L5,"network settings"),L5.forEach(o),t1=d(fe),lr=r(fe,"LI",{});var R5=i(lr);o1=s(R5,"volume settings"),R5.forEach(o),l1=d(fe),sr=r(fe,"LI",{});var T5=i(sr);s1=s(T5,"cpu / memory limits"),T5.forEach(o),fe.forEach(o),of=d(e),go=r(e,"P",{});var N5=i(go);a1=s(N5,"Common options to specify:"),N5.forEach(o),lf=d(e),E=r(e,"UL",{});var I=i(E);el=r(I,"LI",{});var i2=i(el);ar=r(i2,"CODE",{});var H5=i(ar);r1=s(H5,"--name"),H5.forEach(o),i1=s(i2," : assign a name to container (defaults to randomly generated words)"),i2.forEach(o),n1=d(I),F=r(I,"LI",{});var et=i(F);rr=r(et,"CODE",{});var M5=i(rr);c1=s(M5,"--detach"),M5.forEach(o),f1=s(et," / "),ir=r(et,"CODE",{});var S5=i(ir);d1=s(S5,"-d"),S5.forEach(o),p1=s(et," : run in detached mode so the terminal of the machine does not continouously stream container\u2019s "),nr=r(et,"CODE",{});var A5=i(nr);u1=s(A5,"STDOUT"),A5.forEach(o),m1=s(et," / "),cr=r(et,"CODE",{});var x5=i(cr);E1=s(x5,"STDERR"),x5.forEach(o),et.forEach(o),v1=d(I),H=r(I,"LI",{});var he=i(H);fr=r(he,"CODE",{});var U5=i(fr);h1=s(U5,"--interactive"),U5.forEach(o),k1=s(he," / "),dr=r(he,"CODE",{});var Y5=i(dr);_1=s(Y5,"-i"),Y5.forEach(o),w1=s(he," : keep "),pr=r(he,"CODE",{});var G5=i(pr);D1=s(G5,"STDIN"),G5.forEach(o),y1=s(he," open even if not attached (usually used with "),ur=r(he,"CODE",{});var K5=i(ur);b1=s(K5,"-t"),K5.forEach(o),O1=s(he,")"),he.forEach(o),C1=d(I),M=r(I,"LI",{});var ke=i(M);mr=r(ke,"CODE",{});var W5=i(mr);I1=s(W5,"--tty"),W5.forEach(o),P1=s(ke," / "),Er=r(ke,"CODE",{});var V5=i(Er);L1=s(V5,"-t"),V5.forEach(o),R1=s(ke," : allocate pseudo-TTY to connect to container\u2019s "),vr=r(ke,"CODE",{});var F5=i(vr);T1=s(F5,"STDIN"),F5.forEach(o),N1=s(ke," (usually used with "),hr=r(ke,"CODE",{});var B5=i(hr);H1=s(B5,"-i"),B5.forEach(o),M1=s(ke,")"),ke.forEach(o),S1=d(I),Ke=r(I,"LI",{});var Hi=i(Ke);kr=r(Hi,"CODE",{});var q5=i(kr);A1=s(q5,"--expose"),q5.forEach(o),x1=s(Hi," / "),_r=r(Hi,"CODE",{});var z5=i(_r);U1=s(z5,"-p"),z5.forEach(o),Y1=s(Hi," : expose container\u2019s ports to other containers and/or the host machine."),Hi.forEach(o),G1=d(I),tl=r(I,"LI",{});var n2=i(tl);wr=r(n2,"CODE",{});var $5=i(wr);K1=s($5,"--mount"),$5.forEach(o),W1=s(n2," : mount volumes or directories to container"),n2.forEach(o),V1=d(I),S=r(I,"LI",{});var _e=i(S);Dr=r(_e,"CODE",{});var j5=i(Dr);F1=s(j5,"--volume"),j5.forEach(o),B1=s(_e," / "),yr=r(_e,"CODE",{});var X5=i(yr);q1=s(X5,"-v"),X5.forEach(o),z1=s(_e," : mount volumes or directories to container (use of "),br=r(_e,"CODE",{});var Q5=i(br);$1=s(Q5,"--mount"),Q5.forEach(o),j1=s(_e," is recommended, "),Nt=r(_e,"A",{href:!0,rel:!0});var Z5=i(Nt);X1=s(Z5,"see differences here"),Z5.forEach(o),Q1=s(_e,")"),_e.forEach(o),I.forEach(o),sf=d(e),We=r(e,"DETAILS",{});var cd=i(We);Or=r(cd,"SUMMARY",{});var J5=i(Or);Z1=s(J5,"note on docker run documentation"),J5.forEach(o),J1=d(cd),ve=r(cd,"P",{});var gl=i(ve);g1=s(gl,"there are two pages for docker run, a "),Ht=r(gl,"A",{href:!0,rel:!0});var g5=i(Ht);eh=s(g5,"generic one"),g5.forEach(o),th=s(gl," that lists all commands and "),Mt=r(gl,"A",{href:!0,rel:!0});var ew=i(Mt);oh=s(ew,"another one"),ew.forEach(o),lh=s(gl," that provides more explanation"),gl.forEach(o),cd.forEach(o),af=d(e),ol=r(e,"H3",{});var tw=i(ol);sh=s(tw,"docker build"),tw.forEach(o),rf=d(e),ll=r(e,"H3",{});var ow=i(ll);ah=s(ow,"docker image"),ow.forEach(o),nf=d(e),sl=r(e,"H3",{});var lw=i(sl);rh=s(lw,"docker container"),lw.forEach(o),cf=d(e),al=r(e,"H3",{});var sw=i(al);ih=s(sw,"docker network"),sw.forEach(o),ff=d(e),rl=r(e,"P",{});var aw=i(rl);nh=s(aw,"Manages Docker networks"),aw.forEach(o),df=d(e),St=r(e,"PRE",{class:!0});var w6=i(St);w6.forEach(o),pf=d(e),il=r(e,"P",{});var rw=i(il);ch=s(rw,"Common commands:"),rw.forEach(o),uf=d(e),_=r(e,"UL",{});var G=i(_);nl=r(G,"LI",{});var c2=i(nl);Cr=r(c2,"CODE",{});var iw=i(Cr);fh=s(iw,"create"),iw.forEach(o),dh=s(c2," : creates a docker network"),c2.forEach(o),ph=d(G),Ve=r(G,"LI",{});var Mi=i(Ve);Ir=r(Mi,"CODE",{});var nw=i(Ir);uh=s(nw,"connect"),nw.forEach(o),mh=s(Mi," / "),Pr=r(Mi,"CODE",{});var cw=i(Pr);Eh=s(cw,"disconnect"),cw.forEach(o),vh=s(Mi," : connect / disconnect a container to a network"),Mi.forEach(o),hh=d(G),cl=r(G,"LI",{});var f2=i(cl);Lr=r(f2,"CODE",{});var fw=i(Lr);kh=s(fw,"inspect"),fw.forEach(o),_h=s(f2," : get detailed info about network(s)"),f2.forEach(o),wh=d(G),fl=r(G,"LI",{});var d2=i(fl);Rr=r(d2,"CODE",{});var dw=i(Rr);Dh=s(dw,"ls"),dw.forEach(o),yh=s(d2," : list docker networks"),d2.forEach(o),bh=d(G),dl=r(G,"LI",{});var p2=i(dl);Tr=r(p2,"CODE",{});var pw=i(Tr);Oh=s(pw,"rm"),pw.forEach(o),Ch=s(p2," : removes docker network(s)"),p2.forEach(o),Ih=d(G),pl=r(G,"LI",{});var u2=i(pl);Nr=r(u2,"CODE",{});var uw=i(Nr);Ph=s(uw,"prune"),uw.forEach(o),Lh=s(u2," : removes all unused networks"),u2.forEach(o),G.forEach(o),mf=d(e),ul=r(e,"H3",{});var mw=i(ul);Rh=s(mw,"docker volume"),mw.forEach(o),Ef=d(e),ml=r(e,"H3",{});var Ew=i(ml);Th=s(Ew,"docker logs"),Ew.forEach(o),vf=d(e),re=r(e,"P",{});var es=i(re);Nh=s(es,"Retrieves container\u2019s logs (to "),Hr=r(es,"CODE",{});var vw=i(Hr);Hh=s(vw,"STDOUT"),vw.forEach(o),Mh=s(es," and "),Mr=r(es,"CODE",{});var hw=i(Mr);Sh=s(hw,"STDERR"),hw.forEach(o),Ah=s(es,") to your CLI."),es.forEach(o),hf=d(e),At=r(e,"PRE",{class:!0});var D6=i(At);D6.forEach(o),kf=d(e),El=r(e,"P",{});var kw=i(El);xh=s(kw,"Common options to specify:"),kw.forEach(o),_f=d(e),b=r(e,"UL",{});var de=i(b);Fe=r(de,"LI",{});var Si=i(Fe);Sr=r(Si,"CODE",{});var _w=i(Sr);Uh=s(_w,"--follow"),_w.forEach(o),Yh=s(Si," / "),Ar=r(Si,"CODE",{});var ww=i(Ar);Gh=s(ww,"-f"),ww.forEach(o),Kh=s(Si," : continuously streams the log output"),Si.forEach(o),Wh=d(de),Be=r(de,"LI",{});var Ai=i(Be);xr=r(Ai,"CODE",{});var Dw=i(xr);Vh=s(Dw,"--timestamps"),Dw.forEach(o),Fh=s(Ai," / "),Ur=r(Ai,"CODE",{});var yw=i(Ur);Bh=s(yw,"-t"),yw.forEach(o),qh=s(Ai," : show timestamps of logs"),Ai.forEach(o),zh=d(de),ie=r(de,"LI",{});var Bt=i(ie);Yr=r(Bt,"CODE",{});var bw=i(Yr);$h=s(bw,"--tail"),bw.forEach(o),jh=s(Bt," / "),Gr=r(Bt,"CODE",{});var Ow=i(Gr);Xh=s(Ow,"-n"),Ow.forEach(o),Qh=s(Bt," : number of lines to show from end of the log (defaults to "),Kr=r(Bt,"CODE",{});var Cw=i(Kr);Zh=s(Cw,"all"),Cw.forEach(o),Jh=s(Bt,")"),Bt.forEach(o),gh=d(de),A=r(de,"LI",{});var we=i(A);Wr=r(we,"CODE",{});var Iw=i(Wr);e3=s(Iw,"--since"),Iw.forEach(o),t3=s(we," : show logs "),Vr=r(we,"EM",{});var Pw=i(Vr);o3=s(Pw,"since"),Pw.forEach(o),l3=s(we," timestamp ("),Fr=r(we,"CODE",{});var Lw=i(Fr);s3=s(Lw,"2013-01-02T13:37:00Z"),Lw.forEach(o),a3=s(we,") or relative ("),Br=r(we,"CODE",{});var Rw=i(Br);r3=s(Rw,"42m"),Rw.forEach(o),i3=s(we,")"),we.forEach(o),n3=d(de),qe=r(de,"LI",{});var xi=i(qe);qr=r(xi,"CODE",{});var Tw=i(qr);c3=s(Tw,"--until"),Tw.forEach(o),f3=s(xi," : show logs "),zr=r(xi,"EM",{});var Nw=i(zr);d3=s(Nw,"before"),Nw.forEach(o),p3=s(xi," timestamp or relative"),xi.forEach(o),de.forEach(o),wf=d(e),vl=r(e,"H3",{});var Hw=i(vl);u3=s(Hw,"docker inspect"),Hw.forEach(o),Df=d(e),hl=r(e,"P",{});var Mw=i(hl);m3=s(Mw,`Returns detailed information about docker objects.
Objects can be images, containers, networks, volumes, etc.`),Mw.forEach(o),yf=d(e),xt=r(e,"PRE",{class:!0});var y6=i(xt);y6.forEach(o),bf=d(e),kl=r(e,"H3",{});var Sw=i(kl);E3=s(Sw,"docker ps"),Sw.forEach(o),Of=d(e),_l=r(e,"P",{});var Aw=i(_l);v3=s(Aw,`List all containers and information about them (such as ID, image name, ports etc.)
Defaults to listing running containers only.`),Aw.forEach(o),Cf=d(e),Ut=r(e,"PRE",{class:!0});var b6=i(Ut);b6.forEach(o),If=d(e),wl=r(e,"P",{});var xw=i(wl);h3=s(xw,"Useful options:"),xw.forEach(o),Pf=d(e),O=r(e,"UL",{});var pe=i(O);ze=r(pe,"LI",{});var Ui=i(ze);$r=r(Ui,"CODE",{});var Uw=i($r);k3=s(Uw,"--all"),Uw.forEach(o),_3=s(Ui," / "),jr=r(Ui,"CODE",{});var Yw=i(jr);w3=s(Yw,"-a"),Yw.forEach(o),D3=s(Ui," : lists all containers, including those that are not running"),Ui.forEach(o),y3=d(pe),ne=r(pe,"LI",{});var qt=i(ne);Xr=r(qt,"CODE",{});var Gw=i(Xr);b3=s(Gw,"--size"),Gw.forEach(o),O3=s(qt," / "),Qr=r(qt,"CODE",{});var Kw=i(Qr);C3=s(Kw,"-s"),Kw.forEach(o),I3=s(qt," : include size of the container in output. Shows both size of container (i.e. writable layer), and "),Zr=r(qt,"CODE",{});var Ww=i(Zr);P3=s(Ww,"virtual"),Ww.forEach(o),L3=s(qt," size of total disk-space used, i.e. container + image."),qt.forEach(o),R3=d(pe),Dl=r(pe,"LI",{});var m2=i(Dl);Jr=r(m2,"CODE",{});var Vw=i(Jr);T3=s(Vw,"--no-trunc"),Vw.forEach(o),N3=s(m2," : prevent truncation in table output"),m2.forEach(o),H3=d(pe),ce=r(pe,"LI",{});var zt=i(ce);gr=r(zt,"CODE",{});var Fw=i(gr);M3=s(Fw,"--filter"),Fw.forEach(o),S3=s(zt," / "),ei=r(zt,"CODE",{});var Bw=i(ei);A3=s(Bw,"-f"),Bw.forEach(o),x3=s(zt," : filters the output with key-value pairs. E.g. "),ti=r(zt,"CODE",{});var qw=i(ti);U3=s(qw,'docker ps -f "name=mysparkcontainer"'),qw.forEach(o),Y3=s(zt,"."),zt.forEach(o),G3=d(pe),L=r(pe,"LI",{});var ue=i(L);oi=r(ue,"CODE",{});var zw=i(oi);K3=s(zw,"--format"),zw.forEach(o),W3=s(ue," : formats the output using Go template. Placeholder information include "),li=r(ue,"CODE",{});var $w=i(li);V3=s($w,".ID"),$w.forEach(o),F3=s(ue,", "),si=r(ue,"CODE",{});var jw=i(si);B3=s(jw,".Image"),jw.forEach(o),q3=s(ue,", "),ai=r(ue,"CODE",{});var Xw=i(ai);z3=s(Xw,".Names"),Xw.forEach(o),$3=s(ue," etc."),Yt=r(ue,"UL",{});var fd=i(Yt);$e=r(fd,"LI",{});var Yi=i($e);ri=r(Yi,"CODE",{});var Qw=i(ri);j3=s(Qw,'docker ps --format "{{.ID}}: {{.Name}}"'),Qw.forEach(o),X3=s(Yi," will print out "),ii=r(Yi,"CODE",{});var Zw=i(ii);Q3=s(Zw,"abcdef: name1"),Zw.forEach(o),Z3=s(Yi," etc."),Yi.forEach(o),J3=d(fd),yl=r(fd,"LI",{});var E2=i(yl);ni=r(E2,"CODE",{});var Jw=i(ni);g3=s(Jw,'docker ps --format "table {{.ID}}\\t{{.Name}}"'),Jw.forEach(o),e4=s(E2," will print the output in a table with header row."),E2.forEach(o),fd.forEach(o),ue.forEach(o),pe.forEach(o),Lf=d(e),bl=r(e,"H3",{});var gw=i(bl);t4=s(gw,"docker stats"),gw.forEach(o),Rf=d(e),Ol=r(e,"P",{});var eD=i(Ol);o4=s(eD,`Display live info about containers\u2019 resource usage (kind of like Window\u2019s task manager).
Defaults to only showing running containers.`),eD.forEach(o),Tf=d(e),Gt=r(e,"PRE",{class:!0});var O6=i(Gt);O6.forEach(o),Nf=d(e),Cl=r(e,"P",{});var tD=i(Cl);l4=s(tD,"Useful options:"),tD.forEach(o),Hf=d(e),x=r(e,"UL",{});var tt=i(x);je=r(tt,"LI",{});var Gi=i(je);ci=r(Gi,"CODE",{});var oD=i(ci);s4=s(oD,"--all"),oD.forEach(o),a4=s(Gi," / "),fi=r(Gi,"CODE",{});var lD=i(fi);r4=s(lD,"-a"),lD.forEach(o),i4=s(Gi," : lists all containers, including those that are not running"),Gi.forEach(o),n4=d(tt),Il=r(tt,"LI",{});var v2=i(Il);di=r(v2,"CODE",{});var sD=i(di);c4=s(sD,"--no-trunc"),sD.forEach(o),f4=s(v2," : Prevent truncation in table output"),v2.forEach(o),d4=d(tt),Pl=r(tt,"LI",{});var h2=i(Pl);pi=r(h2,"CODE",{});var aD=i(pi);p4=s(aD,"--no-stream"),aD.forEach(o),u4=s(h2," : get only a \u2018snapshot\u2019 of the current stats"),h2.forEach(o),m4=d(tt),Ll=r(tt,"LI",{});var k2=i(Ll);ui=r(k2,"CODE",{});var rD=i(ui);E4=s(rD,"--format"),rD.forEach(o),v4=s(k2," : formats the output using Go template."),k2.forEach(o),tt.forEach(o),Mf=d(e),Sf=r(e,"HR",{}),Af=d(e),Rl=r(e,"H2",{});var iD=i(Rl);h4=s(iD,"networking"),iD.forEach(o),xf=d(e),Tl=r(e,"P",{});var nD=i(Tl);k4=s(nD,"Docker containers can communicate with each other, and they can also communicate with non-Docker programs in your host machine network."),nD.forEach(o),Uf=d(e),Nl=r(e,"P",{});var cD=i(Nl);_4=s(cD,"There are several types of network drivers that help you connect your containers, programs, nodes:"),cD.forEach(o),Yf=d(e),v=r(e,"UL",{});var P=i(v);Kt=r(P,"LI",{});var dd=i(Kt);mi=r(dd,"CODE",{});var fD=i(mi);w4=s(fD,"bridge"),fD.forEach(o),D4=s(dd," : (default) Docker managed network, isolated from host machine; used when connecting multiple containers on the "),Ei=r(dd,"EM",{});var dD=i(Ei);y4=s(dD,"same Docker host"),dD.forEach(o),dd.forEach(o),b4=d(P),Xe=r(P,"LI",{});var Ki=i(Xe);vi=r(Ki,"CODE",{});var pD=i(vi);O4=s(pD,"host"),pD.forEach(o),C4=s(Ki," : (linux only) shares host networking (i.e. ip address) with the container; container which binds to port 80 will be accessible on port 80 on "),hi=r(Ki,"EM",{});var uD=i(hi);I4=s(uD,"host\u2019s"),uD.forEach(o),P4=s(Ki," IP address"),Ki.forEach(o),L4=d(P),Hl=r(P,"LI",{});var _2=i(Hl);ki=r(_2,"CODE",{});var mD=i(ki);R4=s(mD,"overlay"),mD.forEach(o),T4=s(_2," : connects multiple Docker daemons together; used when trying to connect containers running on separate Docker host machine"),_2.forEach(o),N4=d(P),Ml=r(P,"LI",{});var w2=i(Ml);_i=r(w2,"CODE",{});var ED=i(_i);H4=s(ED,"ipvlan"),ED.forEach(o),M4=s(w2," : attaches your containers to the host machine\u2019s network, giving the containers their own IP address in the network; use when you want to connect the container to host machine\u2019s network"),w2.forEach(o),S4=d(P),Sl=r(P,"LI",{});var D2=i(Sl);wi=r(D2,"CODE",{});var vD=i(wi);A4=s(vD,"macvlan"),vD.forEach(o),x4=s(D2," : assigns a new mac address so it appears as a physical device in your network; use for linking with legacy applications that require containers to appear as physical device"),D2.forEach(o),U4=d(P),Al=r(P,"LI",{});var y2=i(Al);Di=r(y2,"CODE",{});var hD=i(Di);Y4=s(hD,"none"),hD.forEach(o),G4=s(y2," : disables all networking for the container"),y2.forEach(o),K4=d(P),yi=r(P,"LI",{});var kD=i(yi);W4=s(kD,"third party network plugins can also be intalled from Docker Hub / other vendors"),kD.forEach(o),P.forEach(o),Gf=d(e),Kf=r(e,"HR",{}),Wf=d(e),xl=r(e,"H2",{});var _D=i(xl);V4=s(_D,"storage"),_D.forEach(o),Vf=d(e),Ul=r(e,"P",{});var wD=i(Ul);F4=s(wD,"By default, Docker containers store data in the container\u2019s writable layer, using a storage driver, and is not persisted."),wD.forEach(o),Ff=d(e),Yl=r(e,"P",{});var DD=i(Yl);B4=s(DD,"5 types of storage in Docker to put container\u2019s data"),DD.forEach(o),Bf=d(e),C=r(e,"UL",{});var me=i(C);bi=r(me,"LI",{});var yD=i(bi);q4=s(yD,"default container\u2019s writable layer : does not persist. optimized for space efficiency, so write speeds are lower than native."),yD.forEach(o),z4=d(me),Oi=r(me,"LI",{});var bD=i(Oi);$4=s(bD,"volumes : isolated, Docker managed, can store in remote drives, can share volumes with multiple containers"),bD.forEach(o),j4=d(me),Ci=r(me,"LI",{});var OD=i(Ci);X4=s(OD,"bind mount : directly mount a specific directory on host machine to the container"),OD.forEach(o),Q4=d(me),Ii=r(me,"LI",{});var CD=i(Ii);Z4=s(CD,"tmpfs mount (linux only) : store container data in memory, not persistent, but faster performance since its using RAM"),CD.forEach(o),J4=d(me),Pi=r(me,"LI",{});var ID=i(Pi);g4=s(ID,"npipe mount (named pipes) (Windows only) : used to store data in memory for Windows"),ID.forEach(o),me.forEach(o),this.h()},h(){p(st,"class","language-dockerfile"),p(at,"class","language-dockerfile"),p(rt,"class","language-dockerfile"),p(it,"class","language-dockerfile"),p(nt,"class","language-dockerfile"),p(ct,"class","language-dockerfile"),p(pt,"class","language-dockerfile"),p(ut,"class","language-dockerfile"),p(mt,"class","language-dockerfile"),p(Et,"class","language-dockerfile"),p(ht,"class","language-dockerfile"),p(kt,"class","language-dockerfile"),p(_t,"class","language-dockerfile"),p(Dt,"class","language-dockerfile"),p(bt,"class","language-dockerfile"),p(Ct,"class","language-dockerfile"),p(It,"class","language-dockerfile"),p(Pt,"class","language-dockerfile"),p(Lt,"class","language-dockerfile"),p(Rt,"class","language-undefined"),p(Nt,"href","https://docs.docker.com/engine/reference/commandline/service_create/#differences-between---mount-and---volume"),p(Nt,"rel","nofollow"),p(Ht,"href","https://docs.docker.com/engine/reference/commandline/run/"),p(Ht,"rel","nofollow"),p(Mt,"href","https://docs.docker.com/engine/reference/run/"),p(Mt,"rel","nofollow"),p(St,"class","language-undefined"),p(At,"class","language-undefined"),p(xt,"class","language-undefined"),p(Ut,"class","language-undefined"),p(Gt,"class","language-undefined")},m(e,n){c(e,De,n),t(De,pd),c(e,Wi,n),c(e,$t,n),t($t,ud),c(e,Vi,n),c(e,jt,n),t(jt,md),c(e,Fi,n),c(e,Xt,n),t(Xt,Ed),c(e,Bi,n),c(e,Qt,n),t(Qt,vd),c(e,qi,n),c(e,Zt,n),t(Zt,hd),c(e,zi,n),c(e,Jt,n),t(Jt,kd),c(e,$i,n),c(e,ye,n),t(ye,K),t(K,_d),t(K,ts),t(ts,wd),t(K,Dd),t(K,os),t(os,yd),t(K,bd),t(K,ls),t(ls,Od),t(K,Cd),t(ye,Id),t(ye,ot),t(ot,Pd),t(ot,ss),t(ss,Ld),t(ot,Rd),c(e,ji,n),c(e,gt,n),t(gt,Td),c(e,Xi,n),c(e,eo,n),t(eo,Nd),c(e,Qi,n),c(e,lt,n),t(lt,as),t(as,Hd),t(lt,Md),c(e,Zi,n),c(e,to,n),t(to,Sd),c(e,Ji,n),c(e,be,n),t(be,Ad),t(be,rs),t(rs,xd),t(be,Ud),c(e,gi,n),c(e,oo,n),t(oo,Yd),c(e,en,n),c(e,lo,n),t(lo,Gd),c(e,tn,n),c(e,so,n),t(so,Kd),c(e,on,n),c(e,Oe,n),t(Oe,Wd),t(Oe,is),t(is,Vd),t(Oe,Fd),c(e,ln,n),c(e,ao,n),t(ao,Bd),c(e,sn,n),c(e,R,n),t(R,qd),t(R,ns),t(ns,zd),t(R,$d),t(R,cs),t(cs,jd),t(R,Xd),t(R,fs),t(fs,Qd),t(R,Zd),c(e,an,n),c(e,ro,n),t(ro,Jd),c(e,rn,n),c(e,Ce,n),t(Ce,gd),t(Ce,ds),t(ds,ep),t(Ce,tp),c(e,nn,n),c(e,io,n),t(io,op),c(e,cn,n),c(e,no,n),t(no,lp),c(e,fn,n),c(e,Ie,n),t(Ie,sp),t(Ie,ps),t(ps,ap),t(Ie,rp),c(e,dn,n),c(e,co,n),t(co,ip),c(e,pn,n),c(e,un,n),c(e,mn,n),c(e,fo,n),t(fo,np),c(e,En,n),c(e,po,n),t(po,cp),c(e,vn,n),c(e,uo,n),t(uo,fp),c(e,hn,n),c(e,Pe,n),t(Pe,dp),t(Pe,us),t(us,pp),t(Pe,up),c(e,kn,n),c(e,st,n),st.innerHTML=RD,c(e,_n,n),c(e,mo,n),t(mo,mp),c(e,wn,n),c(e,Eo,n),t(Eo,Ep),c(e,Dn,n),c(e,at,n),at.innerHTML=TD,c(e,yn,n),c(e,vo,n),t(vo,vp),c(e,bn,n),c(e,ho,n),t(ho,hp),c(e,On,n),c(e,rt,n),rt.innerHTML=ND,c(e,Cn,n),c(e,ko,n),t(ko,kp),c(e,In,n),c(e,_o,n),t(_o,_p),c(e,Pn,n),c(e,it,n),it.innerHTML=HD,c(e,Ln,n),c(e,wo,n),t(wo,wp),c(e,Rn,n),c(e,Do,n),t(Do,Dp),c(e,Tn,n),c(e,nt,n),nt.innerHTML=MD,c(e,Nn,n),c(e,z,n),t(z,yp),t(z,ms),t(ms,bp),t(z,Op),t(z,Es),t(Es,Cp),t(z,Ip),c(e,Hn,n),c(e,Le,n),t(Le,Pp),t(Le,vs),t(vs,Lp),t(Le,Rp),c(e,Mn,n),c(e,yo,n),t(yo,Tp),c(e,Sn,n),c(e,bo,n),t(bo,Np),c(e,An,n),c(e,ct,n),ct.innerHTML=SD,c(e,xn,n),c(e,Re,n),t(Re,Hp),t(Re,hs),t(hs,Mp),t(Re,Sp),c(e,Un,n),c(e,$,n),t($,ks),t(ks,Ap),t($,xp),t($,ft),t(ft,Up),t(ft,_s),t(_s,Yp),t(ft,Gp),t($,Kp),t($,ws),t(ws,Wp),c(e,Yn,n),c(e,dt,n),t(dt,Ds),t(Ds,Vp),t(dt,Fp),c(e,Gn,n),c(e,j,n),t(j,Bp),t(j,ys),t(ys,qp),t(j,zp),t(j,bs),t(bs,$p),t(j,jp),c(e,Kn,n),c(e,Te,n),t(Te,Xp),t(Te,Os),t(Os,Qp),t(Te,Zp),c(e,Wn,n),c(e,Oo,n),t(Oo,Jp),c(e,Vn,n),c(e,Co,n),t(Co,gp),c(e,Fn,n),c(e,pt,n),pt.innerHTML=AD,c(e,Bn,n),c(e,Io,n),t(Io,eu),c(e,qn,n),c(e,Po,n),t(Po,tu),c(e,zn,n),c(e,ut,n),ut.innerHTML=xD,c(e,$n,n),c(e,W,n),t(W,Cs),t(Cs,ou),t(W,lu),t(W,Is),t(Is,su),t(W,au),t(W,Ps),t(Ps,ru),t(W,iu),c(e,jn,n),c(e,Lo,n),t(Lo,nu),c(e,Xn,n),c(e,Ro,n),t(Ro,cu),c(e,Qn,n),c(e,mt,n),mt.innerHTML=UD,c(e,Zn,n),c(e,Ne,n),t(Ne,fu),t(Ne,Ls),t(Ls,du),t(Ne,pu),c(e,Jn,n),c(e,To,n),t(To,uu),c(e,gn,n),c(e,h,n),t(h,mu),t(h,Rs),t(Rs,Eu),t(h,vu),t(h,Ts),t(Ts,hu),t(h,ku),t(h,Ns),t(Ns,_u),t(h,wu),t(h,Hs),t(Hs,Du),t(h,yu),t(h,Ms),t(Ms,bu),t(h,Ou),c(e,ec,n),c(e,Et,n),Et.innerHTML=YD,c(e,tc,n),c(e,He,n),t(He,Cu),t(He,Ss),t(Ss,Iu),t(He,Pu),c(e,oc,n),c(e,X,n),t(X,Lu),t(X,As),t(As,Ru),t(X,Tu),t(X,xs),t(xs,Nu),t(X,Hu),c(e,lc,n),c(e,No,n),t(No,vt),t(vt,Mu),t(vt,Us),t(Us,Su),t(vt,Au),c(e,sc,n),c(e,Q,n),t(Q,xu),t(Q,Ys),t(Ys,Uu),t(Q,Yu),t(Q,Gs),t(Gs,Gu),t(Q,Ku),c(e,ac,n),c(e,Ho,n),t(Ho,Wu),c(e,rc,n),c(e,Z,n),t(Z,Vu),t(Z,Ks),t(Ks,Fu),t(Z,Bu),t(Z,Ws),t(Ws,qu),t(Z,zu),c(e,ic,n),c(e,ht,n),ht.innerHTML=GD,c(e,nc,n),c(e,V,n),t(V,Vs),t(Vs,$u),t(V,ju),t(V,Fs),t(Fs,Xu),t(V,Qu),t(V,Bs),t(Bs,Zu),t(V,Ju),c(e,cc,n),c(e,Mo,n),t(Mo,gu),c(e,fc,n),c(e,So,n),t(So,em),c(e,dc,n),c(e,kt,n),kt.innerHTML=KD,c(e,pc,n),c(e,Ao,n),t(Ao,tm),c(e,uc,n),c(e,_t,n),_t.innerHTML=WD,c(e,mc,n),c(e,J,n),t(J,om),t(J,qs),t(qs,lm),t(J,sm),t(J,zs),t(zs,am),t(J,rm),c(e,Ec,n),c(e,wt,n),t(wt,$s),t($s,im),t(wt,nm),c(e,vc,n),c(e,xo,n),t(xo,cm),c(e,hc,n),c(e,Uo,n),t(Uo,fm),c(e,kc,n),c(e,Dt,n),Dt.innerHTML=VD,c(e,_c,n),c(e,g,n),t(g,Yo),t(Yo,dm),t(Yo,js),t(js,pm),t(g,um),t(g,Ee),t(Ee,mm),t(Ee,Xs),t(Xs,Em),t(Ee,vm),t(Ee,Qs),t(Qs,hm),t(Ee,km),t(g,_m),t(g,yt),t(yt,wm),t(yt,Zs),t(Zs,Dm),t(yt,ym),c(e,wc,n),c(e,Go,n),t(Go,bm),c(e,Dc,n),c(e,Ko,n),t(Ko,Om),c(e,yc,n),c(e,bt,n),bt.innerHTML=FD,c(e,bc,n),c(e,Ot,n),t(Ot,Js),t(Js,Cm),t(Ot,Im),c(e,Oc,n),c(e,T,n),t(T,Me),t(Me,gs),t(gs,Pm),t(Me,Lm),t(Me,ea),t(ea,Rm),t(Me,Tm),t(T,Nm),t(T,Se),t(Se,ta),t(ta,Hm),t(Se,Mm),t(Se,oa),t(oa,Sm),t(Se,Am),t(T,xm),t(T,Ae),t(Ae,la),t(la,Um),t(Ae,Ym),t(Ae,sa),t(sa,Gm),t(Ae,Km),t(T,Wm),t(T,xe),t(xe,aa),t(aa,Vm),t(xe,Fm),t(xe,ra),t(ra,Bm),t(xe,qm),c(e,Cc,n),c(e,k,n),t(k,zm),t(k,ia),t(ia,$m),t(k,jm),t(k,na),t(na,Xm),t(k,Qm),t(k,ca),t(ca,Zm),t(k,Jm),t(k,fa),t(fa,gm),t(k,eE),t(k,da),t(da,tE),t(k,oE),c(e,Ic,n),c(e,ee,n),t(ee,lE),t(ee,pa),t(pa,sE),t(ee,aE),t(ee,ua),t(ua,rE),t(ee,iE),c(e,Pc,n),c(e,te,n),t(te,nE),t(te,ma),t(ma,cE),t(te,fE),t(te,Ea),t(Ea,dE),t(te,pE),c(e,Lc,n),c(e,Wo,n),t(Wo,uE),c(e,Rc,n),c(e,oe,n),t(oe,mE),t(oe,va),t(va,EE),t(oe,vE),t(oe,ha),t(ha,hE),t(oe,kE),c(e,Tc,n),c(e,Ct,n),Ct.innerHTML=BD,c(e,Nc,n),c(e,Vo,n),t(Vo,_E),c(e,Hc,n),c(e,Fo,n),t(Fo,wE),c(e,Mc,n),c(e,It,n),It.innerHTML=qD,c(e,Sc,n),c(e,Bo,n),t(Bo,DE),c(e,Ac,n),c(e,qo,n),t(qo,yE),c(e,xc,n),c(e,Ue,n),t(Ue,bE),t(Ue,ka),t(ka,OE),t(Ue,CE),c(e,Uc,n),c(e,Pt,n),Pt.innerHTML=zD,c(e,Yc,n),c(e,zo,n),t(zo,IE),c(e,Gc,n),c(e,Ye,n),t(Ye,PE),t(Ye,_a),t(_a,LE),t(Ye,RE),c(e,Kc,n),c(e,le,n),t(le,TE),t(le,wa),t(wa,NE),t(le,HE),t(le,Da),t(Da,ME),t(le,SE),c(e,Wc,n),c(e,Ge,n),t(Ge,se),t(se,ya),t(ya,AE),t(se,xE),t(se,ba),t(ba,UE),t(se,YE),t(se,Oa),t(Oa,GE),t(se,KE),t(Ge,WE),t(Ge,w),t(w,Ca),t(Ca,VE),t(w,FE),t(w,Ia),t(Ia,BE),t(w,qE),t(w,Pa),t(Pa,zE),t(w,$E),t(w,La),t(La,jE),t(w,XE),t(w,Ra),t(Ra,QE),t(w,ZE),c(e,Vc,n),c(e,u,n),t(u,JE),t(u,Ta),t(Ta,gE),t(u,ev),t(u,Na),t(Na,tv),t(u,ov),t(u,Ha),t(Ha,lv),t(u,sv),t(u,Ma),t(Ma,av),t(u,rv),t(u,Sa),t(Sa,iv),t(u,nv),t(u,Aa),t(Aa,cv),t(u,fv),t(u,xa),t(xa,dv),t(u,pv),t(u,Ua),t(Ua,uv),t(u,mv),t(u,Ya),t(Ya,Ev),t(u,vv),t(u,Ga),t(Ga,hv),t(u,kv),t(u,Ka),t(Ka,_v),t(u,wv),c(e,Fc,n),c(e,Lt,n),Lt.innerHTML=$D,c(e,Bc,n),c(e,$o,n),t($o,Wa),t(Wa,Dv),c(e,qc,n),c(e,N,n),t(N,yv),t(N,Va),t(Va,bv),t(N,Ov),t(N,Fa),t(Fa,Cv),t(N,Iv),t(N,Ba),t(Ba,Pv),t(N,Lv),c(e,zc,n),c(e,jo,n),t(jo,Rv),c(e,$c,n),c(e,jc,n),c(e,Xc,n),c(e,Xo,n),t(Xo,Tv),c(e,Qc,n),c(e,Qo,n),t(Qo,Nv),c(e,Zc,n),c(e,Zo,n),t(Zo,Hv),c(e,Jc,n),c(e,Rt,n),Rt.innerHTML=jD,c(e,gc,n),c(e,ae,n),t(ae,qa),t(qa,Mv),t(ae,Sv),t(ae,za),t(za,D),t(D,$a),t($a,Av),t(D,xv),t(D,ja),t(ja,Uv),t(D,Yv),t(D,Xa),t(Xa,Gv),t(D,Kv),t(D,Qa),t(Qa,Wv),t(D,Vv),t(D,Za),t(Za,Fv),t(D,Bv),t(ae,qv),t(ae,Jo),t(Jo,zv),t(Jo,Ja),t(Ja,$v),c(e,ef,n),c(e,Tt,n),t(Tt,ga),t(ga,jv),t(Tt,Xv),c(e,tf,n),c(e,y,n),t(y,er),t(er,Qv),t(y,Zv),t(y,tr),t(tr,Jv),t(y,gv),t(y,or),t(or,e1),t(y,t1),t(y,lr),t(lr,o1),t(y,l1),t(y,sr),t(sr,s1),c(e,of,n),c(e,go,n),t(go,a1),c(e,lf,n),c(e,E,n),t(E,el),t(el,ar),t(ar,r1),t(el,i1),t(E,n1),t(E,F),t(F,rr),t(rr,c1),t(F,f1),t(F,ir),t(ir,d1),t(F,p1),t(F,nr),t(nr,u1),t(F,m1),t(F,cr),t(cr,E1),t(E,v1),t(E,H),t(H,fr),t(fr,h1),t(H,k1),t(H,dr),t(dr,_1),t(H,w1),t(H,pr),t(pr,D1),t(H,y1),t(H,ur),t(ur,b1),t(H,O1),t(E,C1),t(E,M),t(M,mr),t(mr,I1),t(M,P1),t(M,Er),t(Er,L1),t(M,R1),t(M,vr),t(vr,T1),t(M,N1),t(M,hr),t(hr,H1),t(M,M1),t(E,S1),t(E,Ke),t(Ke,kr),t(kr,A1),t(Ke,x1),t(Ke,_r),t(_r,U1),t(Ke,Y1),t(E,G1),t(E,tl),t(tl,wr),t(wr,K1),t(tl,W1),t(E,V1),t(E,S),t(S,Dr),t(Dr,F1),t(S,B1),t(S,yr),t(yr,q1),t(S,z1),t(S,br),t(br,$1),t(S,j1),t(S,Nt),t(Nt,X1),t(S,Q1),c(e,sf,n),c(e,We,n),t(We,Or),t(Or,Z1),t(We,J1),t(We,ve),t(ve,g1),t(ve,Ht),t(Ht,eh),t(ve,th),t(ve,Mt),t(Mt,oh),t(ve,lh),c(e,af,n),c(e,ol,n),t(ol,sh),c(e,rf,n),c(e,ll,n),t(ll,ah),c(e,nf,n),c(e,sl,n),t(sl,rh),c(e,cf,n),c(e,al,n),t(al,ih),c(e,ff,n),c(e,rl,n),t(rl,nh),c(e,df,n),c(e,St,n),St.innerHTML=XD,c(e,pf,n),c(e,il,n),t(il,ch),c(e,uf,n),c(e,_,n),t(_,nl),t(nl,Cr),t(Cr,fh),t(nl,dh),t(_,ph),t(_,Ve),t(Ve,Ir),t(Ir,uh),t(Ve,mh),t(Ve,Pr),t(Pr,Eh),t(Ve,vh),t(_,hh),t(_,cl),t(cl,Lr),t(Lr,kh),t(cl,_h),t(_,wh),t(_,fl),t(fl,Rr),t(Rr,Dh),t(fl,yh),t(_,bh),t(_,dl),t(dl,Tr),t(Tr,Oh),t(dl,Ch),t(_,Ih),t(_,pl),t(pl,Nr),t(Nr,Ph),t(pl,Lh),c(e,mf,n),c(e,ul,n),t(ul,Rh),c(e,Ef,n),c(e,ml,n),t(ml,Th),c(e,vf,n),c(e,re,n),t(re,Nh),t(re,Hr),t(Hr,Hh),t(re,Mh),t(re,Mr),t(Mr,Sh),t(re,Ah),c(e,hf,n),c(e,At,n),At.innerHTML=QD,c(e,kf,n),c(e,El,n),t(El,xh),c(e,_f,n),c(e,b,n),t(b,Fe),t(Fe,Sr),t(Sr,Uh),t(Fe,Yh),t(Fe,Ar),t(Ar,Gh),t(Fe,Kh),t(b,Wh),t(b,Be),t(Be,xr),t(xr,Vh),t(Be,Fh),t(Be,Ur),t(Ur,Bh),t(Be,qh),t(b,zh),t(b,ie),t(ie,Yr),t(Yr,$h),t(ie,jh),t(ie,Gr),t(Gr,Xh),t(ie,Qh),t(ie,Kr),t(Kr,Zh),t(ie,Jh),t(b,gh),t(b,A),t(A,Wr),t(Wr,e3),t(A,t3),t(A,Vr),t(Vr,o3),t(A,l3),t(A,Fr),t(Fr,s3),t(A,a3),t(A,Br),t(Br,r3),t(A,i3),t(b,n3),t(b,qe),t(qe,qr),t(qr,c3),t(qe,f3),t(qe,zr),t(zr,d3),t(qe,p3),c(e,wf,n),c(e,vl,n),t(vl,u3),c(e,Df,n),c(e,hl,n),t(hl,m3),c(e,yf,n),c(e,xt,n),xt.innerHTML=ZD,c(e,bf,n),c(e,kl,n),t(kl,E3),c(e,Of,n),c(e,_l,n),t(_l,v3),c(e,Cf,n),c(e,Ut,n),Ut.innerHTML=JD,c(e,If,n),c(e,wl,n),t(wl,h3),c(e,Pf,n),c(e,O,n),t(O,ze),t(ze,$r),t($r,k3),t(ze,_3),t(ze,jr),t(jr,w3),t(ze,D3),t(O,y3),t(O,ne),t(ne,Xr),t(Xr,b3),t(ne,O3),t(ne,Qr),t(Qr,C3),t(ne,I3),t(ne,Zr),t(Zr,P3),t(ne,L3),t(O,R3),t(O,Dl),t(Dl,Jr),t(Jr,T3),t(Dl,N3),t(O,H3),t(O,ce),t(ce,gr),t(gr,M3),t(ce,S3),t(ce,ei),t(ei,A3),t(ce,x3),t(ce,ti),t(ti,U3),t(ce,Y3),t(O,G3),t(O,L),t(L,oi),t(oi,K3),t(L,W3),t(L,li),t(li,V3),t(L,F3),t(L,si),t(si,B3),t(L,q3),t(L,ai),t(ai,z3),t(L,$3),t(L,Yt),t(Yt,$e),t($e,ri),t(ri,j3),t($e,X3),t($e,ii),t(ii,Q3),t($e,Z3),t(Yt,J3),t(Yt,yl),t(yl,ni),t(ni,g3),t(yl,e4),c(e,Lf,n),c(e,bl,n),t(bl,t4),c(e,Rf,n),c(e,Ol,n),t(Ol,o4),c(e,Tf,n),c(e,Gt,n),Gt.innerHTML=gD,c(e,Nf,n),c(e,Cl,n),t(Cl,l4),c(e,Hf,n),c(e,x,n),t(x,je),t(je,ci),t(ci,s4),t(je,a4),t(je,fi),t(fi,r4),t(je,i4),t(x,n4),t(x,Il),t(Il,di),t(di,c4),t(Il,f4),t(x,d4),t(x,Pl),t(Pl,pi),t(pi,p4),t(Pl,u4),t(x,m4),t(x,Ll),t(Ll,ui),t(ui,E4),t(Ll,v4),c(e,Mf,n),c(e,Sf,n),c(e,Af,n),c(e,Rl,n),t(Rl,h4),c(e,xf,n),c(e,Tl,n),t(Tl,k4),c(e,Uf,n),c(e,Nl,n),t(Nl,_4),c(e,Yf,n),c(e,v,n),t(v,Kt),t(Kt,mi),t(mi,w4),t(Kt,D4),t(Kt,Ei),t(Ei,y4),t(v,b4),t(v,Xe),t(Xe,vi),t(vi,O4),t(Xe,C4),t(Xe,hi),t(hi,I4),t(Xe,P4),t(v,L4),t(v,Hl),t(Hl,ki),t(ki,R4),t(Hl,T4),t(v,N4),t(v,Ml),t(Ml,_i),t(_i,H4),t(Ml,M4),t(v,S4),t(v,Sl),t(Sl,wi),t(wi,A4),t(Sl,x4),t(v,U4),t(v,Al),t(Al,Di),t(Di,Y4),t(Al,G4),t(v,K4),t(v,yi),t(yi,W4),c(e,Gf,n),c(e,Kf,n),c(e,Wf,n),c(e,xl,n),t(xl,V4),c(e,Vf,n),c(e,Ul,n),t(Ul,F4),c(e,Ff,n),c(e,Yl,n),t(Yl,B4),c(e,Bf,n),c(e,C,n),t(C,bi),t(bi,q4),t(C,z4),t(C,Oi),t(Oi,$4),t(C,j4),t(C,Ci),t(Ci,X4),t(C,Q4),t(C,Ii),t(Ii,Z4),t(C,J4),t(C,Pi),t(Pi,g4)},p:b2,i:b2,o:b2,d(e){e&&o(De),e&&o(Wi),e&&o($t),e&&o(Vi),e&&o(jt),e&&o(Fi),e&&o(Xt),e&&o(Bi),e&&o(Qt),e&&o(qi),e&&o(Zt),e&&o(zi),e&&o(Jt),e&&o($i),e&&o(ye),e&&o(ji),e&&o(gt),e&&o(Xi),e&&o(eo),e&&o(Qi),e&&o(lt),e&&o(Zi),e&&o(to),e&&o(Ji),e&&o(be),e&&o(gi),e&&o(oo),e&&o(en),e&&o(lo),e&&o(tn),e&&o(so),e&&o(on),e&&o(Oe),e&&o(ln),e&&o(ao),e&&o(sn),e&&o(R),e&&o(an),e&&o(ro),e&&o(rn),e&&o(Ce),e&&o(nn),e&&o(io),e&&o(cn),e&&o(no),e&&o(fn),e&&o(Ie),e&&o(dn),e&&o(co),e&&o(pn),e&&o(un),e&&o(mn),e&&o(fo),e&&o(En),e&&o(po),e&&o(vn),e&&o(uo),e&&o(hn),e&&o(Pe),e&&o(kn),e&&o(st),e&&o(_n),e&&o(mo),e&&o(wn),e&&o(Eo),e&&o(Dn),e&&o(at),e&&o(yn),e&&o(vo),e&&o(bn),e&&o(ho),e&&o(On),e&&o(rt),e&&o(Cn),e&&o(ko),e&&o(In),e&&o(_o),e&&o(Pn),e&&o(it),e&&o(Ln),e&&o(wo),e&&o(Rn),e&&o(Do),e&&o(Tn),e&&o(nt),e&&o(Nn),e&&o(z),e&&o(Hn),e&&o(Le),e&&o(Mn),e&&o(yo),e&&o(Sn),e&&o(bo),e&&o(An),e&&o(ct),e&&o(xn),e&&o(Re),e&&o(Un),e&&o($),e&&o(Yn),e&&o(dt),e&&o(Gn),e&&o(j),e&&o(Kn),e&&o(Te),e&&o(Wn),e&&o(Oo),e&&o(Vn),e&&o(Co),e&&o(Fn),e&&o(pt),e&&o(Bn),e&&o(Io),e&&o(qn),e&&o(Po),e&&o(zn),e&&o(ut),e&&o($n),e&&o(W),e&&o(jn),e&&o(Lo),e&&o(Xn),e&&o(Ro),e&&o(Qn),e&&o(mt),e&&o(Zn),e&&o(Ne),e&&o(Jn),e&&o(To),e&&o(gn),e&&o(h),e&&o(ec),e&&o(Et),e&&o(tc),e&&o(He),e&&o(oc),e&&o(X),e&&o(lc),e&&o(No),e&&o(sc),e&&o(Q),e&&o(ac),e&&o(Ho),e&&o(rc),e&&o(Z),e&&o(ic),e&&o(ht),e&&o(nc),e&&o(V),e&&o(cc),e&&o(Mo),e&&o(fc),e&&o(So),e&&o(dc),e&&o(kt),e&&o(pc),e&&o(Ao),e&&o(uc),e&&o(_t),e&&o(mc),e&&o(J),e&&o(Ec),e&&o(wt),e&&o(vc),e&&o(xo),e&&o(hc),e&&o(Uo),e&&o(kc),e&&o(Dt),e&&o(_c),e&&o(g),e&&o(wc),e&&o(Go),e&&o(Dc),e&&o(Ko),e&&o(yc),e&&o(bt),e&&o(bc),e&&o(Ot),e&&o(Oc),e&&o(T),e&&o(Cc),e&&o(k),e&&o(Ic),e&&o(ee),e&&o(Pc),e&&o(te),e&&o(Lc),e&&o(Wo),e&&o(Rc),e&&o(oe),e&&o(Tc),e&&o(Ct),e&&o(Nc),e&&o(Vo),e&&o(Hc),e&&o(Fo),e&&o(Mc),e&&o(It),e&&o(Sc),e&&o(Bo),e&&o(Ac),e&&o(qo),e&&o(xc),e&&o(Ue),e&&o(Uc),e&&o(Pt),e&&o(Yc),e&&o(zo),e&&o(Gc),e&&o(Ye),e&&o(Kc),e&&o(le),e&&o(Wc),e&&o(Ge),e&&o(Vc),e&&o(u),e&&o(Fc),e&&o(Lt),e&&o(Bc),e&&o($o),e&&o(qc),e&&o(N),e&&o(zc),e&&o(jo),e&&o($c),e&&o(jc),e&&o(Xc),e&&o(Xo),e&&o(Qc),e&&o(Qo),e&&o(Zc),e&&o(Zo),e&&o(Jc),e&&o(Rt),e&&o(gc),e&&o(ae),e&&o(ef),e&&o(Tt),e&&o(tf),e&&o(y),e&&o(of),e&&o(go),e&&o(lf),e&&o(E),e&&o(sf),e&&o(We),e&&o(af),e&&o(ol),e&&o(rf),e&&o(ll),e&&o(nf),e&&o(sl),e&&o(cf),e&&o(al),e&&o(ff),e&&o(rl),e&&o(df),e&&o(St),e&&o(pf),e&&o(il),e&&o(uf),e&&o(_),e&&o(mf),e&&o(ul),e&&o(Ef),e&&o(ml),e&&o(vf),e&&o(re),e&&o(hf),e&&o(At),e&&o(kf),e&&o(El),e&&o(_f),e&&o(b),e&&o(wf),e&&o(vl),e&&o(Df),e&&o(hl),e&&o(yf),e&&o(xt),e&&o(bf),e&&o(kl),e&&o(Of),e&&o(_l),e&&o(Cf),e&&o(Ut),e&&o(If),e&&o(wl),e&&o(Pf),e&&o(O),e&&o(Lf),e&&o(bl),e&&o(Rf),e&&o(Ol),e&&o(Tf),e&&o(Gt),e&&o(Nf),e&&o(Cl),e&&o(Hf),e&&o(x),e&&o(Mf),e&&o(Sf),e&&o(Af),e&&o(Rl),e&&o(xf),e&&o(Tl),e&&o(Uf),e&&o(Nl),e&&o(Yf),e&&o(v),e&&o(Gf),e&&o(Kf),e&&o(Wf),e&&o(xl),e&&o(Vf),e&&o(Ul),e&&o(Ff),e&&o(Yl),e&&o(Bf),e&&o(C)}}}const R6={title:"Docker Intro",date:"2022-12-01"},{title:PD,date:N6}=R6;class H6 extends C6{constructor(De){super(),I6(this,De,null,L6,P6,{})}}export{H6 as default,R6 as metadata};
