import{S as $i,i as gi,s as ea,k as n,q as i,a as f,l as r,m as p,r as a,h as t,c,n as R,b as s,B as l,A as yl}from"./index-4cbca6b4.js";function ta(Si){let v,_o,tt,q,Do,ot,K,bo,st,B,Po,lt,G,Co,it,V,Oo,at,j,Ro,nt,h,k,To,Ie,xo,Ho,Le,Io,Lo,Me,Mo,No,So,T,Ao,Ne,Yo,Uo,rt,W,Fo,pt,X,qo,ft,x,Se,Ko,Bo,ct,z,Go,ut,y,Vo,Ae,jo,Wo,dt,Q,Xo,mt,J,zo,kt,Z,Qo,Et,w,Jo,Ye,Zo,$o,vt,$,go,ht,d,es,Ue,ts,os,Fe,ss,ls,qe,is,as,yt,g,ns,wt,_,rs,Ke,ps,fs,_t,ee,cs,Dt,te,us,bt,D,ds,Be,ms,ks,Pt,oe,Es,Ct,se,vs,Ot,le,hs,Rt,ie,ys,Tt,b,ws,Ge,_s,Ds,xt,H,Ai=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">FROM</span> apache/spark</span>

<span class="token comment"># to specify a tag</span>
<span class="token instruction"><span class="token keyword">FROM</span> apache/spark:3.3.1</span></code>`,Ht,ae,bs,It,ne,Ps,Lt,I,Yi=`<code class="language-dockerfile"><span class="token comment"># Shell form (defaults to /bin/sh -c on Linux or cmd /S /C on Windows)</span>
<span class="token instruction"><span class="token keyword">RUN</span> &lt;command></span>

<span class="token comment"># Exec form</span>
<span class="token instruction"><span class="token keyword">RUN</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>]</span></code>`,Mt,re,Cs,Nt,pe,Os,St,L,Ui=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # exec form</span>
<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # default parameters to ENTRYPOINT</span>
<span class="token instruction"><span class="token keyword">CMD</span> command param1 param2 # shell form</span></code>`,At,fe,Rs,Yt,ce,Ts,Ut,ue,xs,Ft,de,Hs,qt,M,Fi=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">COPY</span> &lt;src> &lt;dest></span>
<span class="token instruction"><span class="token keyword">COPY</span> [<span class="token string">"&lt;src>"</span>, ... <span class="token string">"&lt;dest>"</span>] # used when there are spaces in path</span></code>`,Kt,N,Ve,Is,Ls,Bt,me,Ms,Gt,P,Ns,je,Ss,As,Vt,ke,We,Ys,jt,Ee,Us,Wt,ve,Fs,Xt,S,qi='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ENV</span> &lt;key>=&lt;value></span></code>',zt,he,qs,Qt,A,Ki='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">EXPOSE</span> &lt;port> [&lt;port>/&lt;protocol>]</span></code>',Jt,E,Ks,Xe,Bs,Gs,ze,Vs,js,Zt,ye,Ws,$t,we,Xs,gt,_e,zs,eo,u,Qs,Qe,Js,Zs,Je,$s,gs,Ze,el,tl,$e,ol,sl,ge,ll,il,to,De,al,oo,Y,nl,et,rl,so,be,pl,lo,Pe,fl,io,Ce,cl,ao,Oe,ul,no,Re,dl,ro,U,Bi=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">USER</span> &lt;user></span>
<span class="token instruction"><span class="token keyword">USER</span> &lt;UID></span></code>`,po,Te,ml,fo,xe,kl,co,F,Gi='<code class="language-undefined"></code>';return{c(){v=n("h1"),_o=i(Ni),tt=f(),q=n("p"),Do=i("Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),ot=f(),K=n("p"),bo=i(`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),st=f(),B=n("h2"),Po=i("key concepts"),lt=f(),G=n("h3"),Co=i("Docker images"),it=f(),V=n("p"),Oo=i(`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),at=f(),j=n("p"),Ro=i("Images are often build on top of one another"),nt=f(),h=n("ul"),k=n("li"),To=i("e.g. you start with "),Ie=n("code"),xo=i("ubuntu"),Ho=i(" image, install "),Le=n("code"),Io=i("python"),Lo=i(" in that ubuntu image, install "),Me=n("code"),Mo=i("pytorch"),No=i(" package, install pretrained models."),So=f(),T=n("li"),Ao=i("or you can start with a published "),Ne=n("code"),Yo=i("python"),Uo=i(" image, and install your packages there."),rt=f(),W=n("p"),Fo=i("Published images are available for download in Docker registries."),pt=f(),X=n("h4"),qo=i("Dockerfile"),ft=f(),x=n("p"),Se=n("code"),Ko=i("Dockerfile"),Bo=i("s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),ct=f(),z=n("h3"),Go=i("Docker containers"),ut=f(),y=n("p"),Vo=i(`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),Ae=n("code"),jo=i("nodejs"),Wo=i(" image, but one exposes port 8888 and another exposes port 8899."),dt=f(),Q=n("h3"),Xo=i("Docker registries"),mt=f(),J=n("p"),zo=i("Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),kt=f(),Z=n("h3"),Qo=i("Docker daemon"),Et=f(),w=n("p"),Jo=i("This is the underlying "),Ye=n("code"),Zo=i("dockerd"),$o=i(" process that helps you build images and run containers. It will listen for Docker API requests"),vt=f(),$=n("h3"),go=i("Docker client"),ht=f(),d=n("p"),es=i("The docker client "),Ue=n("code"),ts=i("docker"),os=i(" is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),Fe=n("code"),ss=i("docker"),ls=i(" command sends Docker API requests to "),qe=n("code"),is=i("dockerd"),as=i("."),yt=f(),g=n("h3"),ns=i("Docker compose"),wt=f(),_=n("p"),rs=i("Docker compose is a tool that helps with running "),Ke=n("em"),ps=i("multi-container"),fs=i(" Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),_t=f(),ee=n("p"),cs=i("For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),Dt=f(),te=n("h4"),us=i("Difference between Kubernetes"),bt=f(),D=n("p"),ds=i("Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),Be=n("em"),ms=i("single-node"),ks=i(", whereas Kubernetes is a full multi-node container manager."),Pt=f(),oe=n("p"),Es=i("Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),Ct=f(),se=n("h2"),vs=i("Dockerfile"),Ot=f(),le=n("h3"),hs=i("Commands"),Rt=f(),ie=n("h4"),ys=i("FROM"),Tt=f(),b=n("p"),ws=i("All dockerfile starts with the "),Ge=n("code"),_s=i("FROM"),Ds=i(" command. It pulls the base image from Dockerhub to start to build your image."),xt=f(),H=n("pre"),Ht=f(),ae=n("h4"),bs=i("RUN"),It=f(),ne=n("p"),Ps=i("Runs a command or executable. It has two forms"),Lt=f(),I=n("pre"),Mt=f(),re=n("h4"),Cs=i("CMD"),Nt=f(),pe=n("p"),Os=i("Provides defaults for an executing container"),St=f(),L=n("pre"),At=f(),fe=n("h4"),Rs=i("ENTRYPOINT"),Yt=f(),ce=n("p"),Ts=i(`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),Ut=f(),ue=n("h4"),xs=i("COPY"),Ft=f(),de=n("p"),Hs=i("Copies file from your native host into the container image."),qt=f(),M=n("pre"),Kt=f(),N=n("p"),Ve=n("code"),Is=i("<src>"),Ls=i(" path must be inside context of the build!"),Bt=f(),me=n("h4"),Ms=i("ADD"),Gt=f(),P=n("p"),Ns=i(`Copies file from your native host into the container image.
It has added utilities like being able to download files from URLs, and extracting contents of `),je=n("code"),Ss=i(".tar"),As=i(" files before copying into image."),Vt=f(),ke=n("p"),We=n("strong"),Ys=i("tip: use COPY as default, unless you need additional features of ADD"),jt=f(),Ee=n("h4"),Us=i("ENV"),Wt=f(),ve=n("p"),Fs=i("Sets an environment variable"),Xt=f(),S=n("pre"),zt=f(),he=n("h4"),qs=i("EXPOSE"),Qt=f(),A=n("pre"),Jt=f(),E=n("p"),Ks=i(`Instructs Docker that container should listen on specified network ports at runtime.
Ports are not automatically published, and is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),Xe=n("code"),Bs=i("-P"),Gs=i(" flag, or "),ze=n("code"),Vs=i("-p"),js=i(" to explicitly map ports from containers to your localhost."),Zt=f(),ye=n("h4"),Ws=i("VOLUME"),$t=f(),we=n("p"),Xs=i("Creates a mount point at the directory specified and marks that directory as an external drive from native host (i.e. computer running the docker daemon) or other containers."),gt=f(),_e=n("h4"),zs=i("WORKDIR"),eo=f(),u=n("p"),Qs=i("Sets working directory for any "),Qe=n("code"),Js=i("RUN"),Zs=i(", "),Je=n("code"),$s=i("CMD"),gs=i(", "),Ze=n("code"),el=i("ENTRYPOINT"),tl=i(", "),$e=n("code"),ol=i("COPY"),sl=i(", "),ge=n("code"),ll=i("ADD"),il=i(" instructions."),to=f(),De=n("h4"),al=i("ARG"),oo=f(),Y=n("p"),nl=i("Defines a variable that users can pass at during "),et=n("code"),rl=i("docker build"),so=f(),be=n("h4"),pl=i("ONBUILD"),lo=f(),Pe=n("h4"),fl=i("STOPSIGNAL"),io=f(),Ce=n("h4"),cl=i("HEALTHCHECK"),ao=f(),Oe=n("h4"),ul=i("SHELL"),no=f(),Re=n("h4"),dl=i("USER"),ro=f(),U=n("pre"),po=f(),Te=n("p"),ml=i(`Sets the username/UID to use for the remainder of the Docker build stage.
This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),fo=f(),xe=n("h4"),kl=i("LABEL"),co=f(),F=n("pre"),this.h()},l(e){v=r(e,"H1",{});var o=p(v);_o=a(o,Ni),o.forEach(t),tt=c(e),q=r(e,"P",{});var wl=p(q);Do=a(wl,"Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),wl.forEach(t),ot=c(e),K=r(e,"P",{});var _l=p(K);bo=a(_l,`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),_l.forEach(t),st=c(e),B=r(e,"H2",{});var Dl=p(B);Po=a(Dl,"key concepts"),Dl.forEach(t),lt=c(e),G=r(e,"H3",{});var bl=p(G);Co=a(bl,"Docker images"),bl.forEach(t),it=c(e),V=r(e,"P",{});var Pl=p(V);Oo=a(Pl,`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),Pl.forEach(t),at=c(e),j=r(e,"P",{});var Cl=p(j);Ro=a(Cl,"Images are often build on top of one another"),Cl.forEach(t),nt=c(e),h=r(e,"UL",{});var uo=p(h);k=r(uo,"LI",{});var C=p(k);To=a(C,"e.g. you start with "),Ie=r(C,"CODE",{});var Ol=p(Ie);xo=a(Ol,"ubuntu"),Ol.forEach(t),Ho=a(C," image, install "),Le=r(C,"CODE",{});var Rl=p(Le);Io=a(Rl,"python"),Rl.forEach(t),Lo=a(C," in that ubuntu image, install "),Me=r(C,"CODE",{});var Tl=p(Me);Mo=a(Tl,"pytorch"),Tl.forEach(t),No=a(C," package, install pretrained models."),C.forEach(t),So=c(uo),T=r(uo,"LI",{});var mo=p(T);Ao=a(mo,"or you can start with a published "),Ne=r(mo,"CODE",{});var xl=p(Ne);Yo=a(xl,"python"),xl.forEach(t),Uo=a(mo," image, and install your packages there."),mo.forEach(t),uo.forEach(t),rt=c(e),W=r(e,"P",{});var Hl=p(W);Fo=a(Hl,"Published images are available for download in Docker registries."),Hl.forEach(t),pt=c(e),X=r(e,"H4",{});var Il=p(X);qo=a(Il,"Dockerfile"),Il.forEach(t),ft=c(e),x=r(e,"P",{});var El=p(x);Se=r(El,"CODE",{});var Ll=p(Se);Ko=a(Ll,"Dockerfile"),Ll.forEach(t),Bo=a(El,"s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),El.forEach(t),ct=c(e),z=r(e,"H3",{});var Ml=p(z);Go=a(Ml,"Docker containers"),Ml.forEach(t),ut=c(e),y=r(e,"P",{});var ko=p(y);Vo=a(ko,`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),Ae=r(ko,"CODE",{});var Nl=p(Ae);jo=a(Nl,"nodejs"),Nl.forEach(t),Wo=a(ko," image, but one exposes port 8888 and another exposes port 8899."),ko.forEach(t),dt=c(e),Q=r(e,"H3",{});var Sl=p(Q);Xo=a(Sl,"Docker registries"),Sl.forEach(t),mt=c(e),J=r(e,"P",{});var Al=p(J);zo=a(Al,"Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),Al.forEach(t),kt=c(e),Z=r(e,"H3",{});var Yl=p(Z);Qo=a(Yl,"Docker daemon"),Yl.forEach(t),Et=c(e),w=r(e,"P",{});var Eo=p(w);Jo=a(Eo,"This is the underlying "),Ye=r(Eo,"CODE",{});var Ul=p(Ye);Zo=a(Ul,"dockerd"),Ul.forEach(t),$o=a(Eo," process that helps you build images and run containers. It will listen for Docker API requests"),Eo.forEach(t),vt=c(e),$=r(e,"H3",{});var Fl=p($);go=a(Fl,"Docker client"),Fl.forEach(t),ht=c(e),d=r(e,"P",{});var O=p(d);es=a(O,"The docker client "),Ue=r(O,"CODE",{});var ql=p(Ue);ts=a(ql,"docker"),ql.forEach(t),os=a(O," is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),Fe=r(O,"CODE",{});var Kl=p(Fe);ss=a(Kl,"docker"),Kl.forEach(t),ls=a(O," command sends Docker API requests to "),qe=r(O,"CODE",{});var Bl=p(qe);is=a(Bl,"dockerd"),Bl.forEach(t),as=a(O,"."),O.forEach(t),yt=c(e),g=r(e,"H3",{});var Gl=p(g);ns=a(Gl,"Docker compose"),Gl.forEach(t),wt=c(e),_=r(e,"P",{});var vo=p(_);rs=a(vo,"Docker compose is a tool that helps with running "),Ke=r(vo,"EM",{});var Vl=p(Ke);ps=a(Vl,"multi-container"),Vl.forEach(t),fs=a(vo," Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),vo.forEach(t),_t=c(e),ee=r(e,"P",{});var jl=p(ee);cs=a(jl,"For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),jl.forEach(t),Dt=c(e),te=r(e,"H4",{});var Wl=p(te);us=a(Wl,"Difference between Kubernetes"),Wl.forEach(t),bt=c(e),D=r(e,"P",{});var ho=p(D);ds=a(ho,"Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),Be=r(ho,"EM",{});var Xl=p(Be);ms=a(Xl,"single-node"),Xl.forEach(t),ks=a(ho,", whereas Kubernetes is a full multi-node container manager."),ho.forEach(t),Pt=c(e),oe=r(e,"P",{});var zl=p(oe);Es=a(zl,"Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),zl.forEach(t),Ct=c(e),se=r(e,"H2",{});var Ql=p(se);vs=a(Ql,"Dockerfile"),Ql.forEach(t),Ot=c(e),le=r(e,"H3",{});var Jl=p(le);hs=a(Jl,"Commands"),Jl.forEach(t),Rt=c(e),ie=r(e,"H4",{});var Zl=p(ie);ys=a(Zl,"FROM"),Zl.forEach(t),Tt=c(e),b=r(e,"P",{});var yo=p(b);ws=a(yo,"All dockerfile starts with the "),Ge=r(yo,"CODE",{});var $l=p(Ge);_s=a($l,"FROM"),$l.forEach(t),Ds=a(yo," command. It pulls the base image from Dockerhub to start to build your image."),yo.forEach(t),xt=c(e),H=r(e,"PRE",{class:!0});var Vi=p(H);Vi.forEach(t),Ht=c(e),ae=r(e,"H4",{});var gl=p(ae);bs=a(gl,"RUN"),gl.forEach(t),It=c(e),ne=r(e,"P",{});var ei=p(ne);Ps=a(ei,"Runs a command or executable. It has two forms"),ei.forEach(t),Lt=c(e),I=r(e,"PRE",{class:!0});var ji=p(I);ji.forEach(t),Mt=c(e),re=r(e,"H4",{});var ti=p(re);Cs=a(ti,"CMD"),ti.forEach(t),Nt=c(e),pe=r(e,"P",{});var oi=p(pe);Os=a(oi,"Provides defaults for an executing container"),oi.forEach(t),St=c(e),L=r(e,"PRE",{class:!0});var Wi=p(L);Wi.forEach(t),At=c(e),fe=r(e,"H4",{});var si=p(fe);Rs=a(si,"ENTRYPOINT"),si.forEach(t),Yt=c(e),ce=r(e,"P",{});var li=p(ce);Ts=a(li,`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),li.forEach(t),Ut=c(e),ue=r(e,"H4",{});var ii=p(ue);xs=a(ii,"COPY"),ii.forEach(t),Ft=c(e),de=r(e,"P",{});var ai=p(de);Hs=a(ai,"Copies file from your native host into the container image."),ai.forEach(t),qt=c(e),M=r(e,"PRE",{class:!0});var Xi=p(M);Xi.forEach(t),Kt=c(e),N=r(e,"P",{});var vl=p(N);Ve=r(vl,"CODE",{});var ni=p(Ve);Is=a(ni,"<src>"),ni.forEach(t),Ls=a(vl," path must be inside context of the build!"),vl.forEach(t),Bt=c(e),me=r(e,"H4",{});var ri=p(me);Ms=a(ri,"ADD"),ri.forEach(t),Gt=c(e),P=r(e,"P",{});var wo=p(P);Ns=a(wo,`Copies file from your native host into the container image.
It has added utilities like being able to download files from URLs, and extracting contents of `),je=r(wo,"CODE",{});var pi=p(je);Ss=a(pi,".tar"),pi.forEach(t),As=a(wo," files before copying into image."),wo.forEach(t),Vt=c(e),ke=r(e,"P",{});var fi=p(ke);We=r(fi,"STRONG",{});var ci=p(We);Ys=a(ci,"tip: use COPY as default, unless you need additional features of ADD"),ci.forEach(t),fi.forEach(t),jt=c(e),Ee=r(e,"H4",{});var ui=p(Ee);Us=a(ui,"ENV"),ui.forEach(t),Wt=c(e),ve=r(e,"P",{});var di=p(ve);Fs=a(di,"Sets an environment variable"),di.forEach(t),Xt=c(e),S=r(e,"PRE",{class:!0});var zi=p(S);zi.forEach(t),zt=c(e),he=r(e,"H4",{});var mi=p(he);qs=a(mi,"EXPOSE"),mi.forEach(t),Qt=c(e),A=r(e,"PRE",{class:!0});var Qi=p(A);Qi.forEach(t),Jt=c(e),E=r(e,"P",{});var He=p(E);Ks=a(He,`Instructs Docker that container should listen on specified network ports at runtime.
Ports are not automatically published, and is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),Xe=r(He,"CODE",{});var ki=p(Xe);Bs=a(ki,"-P"),ki.forEach(t),Gs=a(He," flag, or "),ze=r(He,"CODE",{});var Ei=p(ze);Vs=a(Ei,"-p"),Ei.forEach(t),js=a(He," to explicitly map ports from containers to your localhost."),He.forEach(t),Zt=c(e),ye=r(e,"H4",{});var vi=p(ye);Ws=a(vi,"VOLUME"),vi.forEach(t),$t=c(e),we=r(e,"P",{});var hi=p(we);Xs=a(hi,"Creates a mount point at the directory specified and marks that directory as an external drive from native host (i.e. computer running the docker daemon) or other containers."),hi.forEach(t),gt=c(e),_e=r(e,"H4",{});var yi=p(_e);zs=a(yi,"WORKDIR"),yi.forEach(t),eo=c(e),u=r(e,"P",{});var m=p(u);Qs=a(m,"Sets working directory for any "),Qe=r(m,"CODE",{});var wi=p(Qe);Js=a(wi,"RUN"),wi.forEach(t),Zs=a(m,", "),Je=r(m,"CODE",{});var _i=p(Je);$s=a(_i,"CMD"),_i.forEach(t),gs=a(m,", "),Ze=r(m,"CODE",{});var Di=p(Ze);el=a(Di,"ENTRYPOINT"),Di.forEach(t),tl=a(m,", "),$e=r(m,"CODE",{});var bi=p($e);ol=a(bi,"COPY"),bi.forEach(t),sl=a(m,", "),ge=r(m,"CODE",{});var Pi=p(ge);ll=a(Pi,"ADD"),Pi.forEach(t),il=a(m," instructions."),m.forEach(t),to=c(e),De=r(e,"H4",{});var Ci=p(De);al=a(Ci,"ARG"),Ci.forEach(t),oo=c(e),Y=r(e,"P",{});var hl=p(Y);nl=a(hl,"Defines a variable that users can pass at during "),et=r(hl,"CODE",{});var Oi=p(et);rl=a(Oi,"docker build"),Oi.forEach(t),hl.forEach(t),so=c(e),be=r(e,"H4",{});var Ri=p(be);pl=a(Ri,"ONBUILD"),Ri.forEach(t),lo=c(e),Pe=r(e,"H4",{});var Ti=p(Pe);fl=a(Ti,"STOPSIGNAL"),Ti.forEach(t),io=c(e),Ce=r(e,"H4",{});var xi=p(Ce);cl=a(xi,"HEALTHCHECK"),xi.forEach(t),ao=c(e),Oe=r(e,"H4",{});var Hi=p(Oe);ul=a(Hi,"SHELL"),Hi.forEach(t),no=c(e),Re=r(e,"H4",{});var Ii=p(Re);dl=a(Ii,"USER"),Ii.forEach(t),ro=c(e),U=r(e,"PRE",{class:!0});var Ji=p(U);Ji.forEach(t),po=c(e),Te=r(e,"P",{});var Li=p(Te);ml=a(Li,`Sets the username/UID to use for the remainder of the Docker build stage.
This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),Li.forEach(t),fo=c(e),xe=r(e,"H4",{});var Mi=p(xe);kl=a(Mi,"LABEL"),Mi.forEach(t),co=c(e),F=r(e,"PRE",{class:!0});var Zi=p(F);Zi.forEach(t),this.h()},h(){R(H,"class","language-dockerfile"),R(I,"class","language-dockerfile"),R(L,"class","language-dockerfile"),R(M,"class","language-dockerfile"),R(S,"class","language-dockerfile"),R(A,"class","language-dockerfile"),R(U,"class","language-dockerfile"),R(F,"class","language-undefined")},m(e,o){s(e,v,o),l(v,_o),s(e,tt,o),s(e,q,o),l(q,Do),s(e,ot,o),s(e,K,o),l(K,bo),s(e,st,o),s(e,B,o),l(B,Po),s(e,lt,o),s(e,G,o),l(G,Co),s(e,it,o),s(e,V,o),l(V,Oo),s(e,at,o),s(e,j,o),l(j,Ro),s(e,nt,o),s(e,h,o),l(h,k),l(k,To),l(k,Ie),l(Ie,xo),l(k,Ho),l(k,Le),l(Le,Io),l(k,Lo),l(k,Me),l(Me,Mo),l(k,No),l(h,So),l(h,T),l(T,Ao),l(T,Ne),l(Ne,Yo),l(T,Uo),s(e,rt,o),s(e,W,o),l(W,Fo),s(e,pt,o),s(e,X,o),l(X,qo),s(e,ft,o),s(e,x,o),l(x,Se),l(Se,Ko),l(x,Bo),s(e,ct,o),s(e,z,o),l(z,Go),s(e,ut,o),s(e,y,o),l(y,Vo),l(y,Ae),l(Ae,jo),l(y,Wo),s(e,dt,o),s(e,Q,o),l(Q,Xo),s(e,mt,o),s(e,J,o),l(J,zo),s(e,kt,o),s(e,Z,o),l(Z,Qo),s(e,Et,o),s(e,w,o),l(w,Jo),l(w,Ye),l(Ye,Zo),l(w,$o),s(e,vt,o),s(e,$,o),l($,go),s(e,ht,o),s(e,d,o),l(d,es),l(d,Ue),l(Ue,ts),l(d,os),l(d,Fe),l(Fe,ss),l(d,ls),l(d,qe),l(qe,is),l(d,as),s(e,yt,o),s(e,g,o),l(g,ns),s(e,wt,o),s(e,_,o),l(_,rs),l(_,Ke),l(Ke,ps),l(_,fs),s(e,_t,o),s(e,ee,o),l(ee,cs),s(e,Dt,o),s(e,te,o),l(te,us),s(e,bt,o),s(e,D,o),l(D,ds),l(D,Be),l(Be,ms),l(D,ks),s(e,Pt,o),s(e,oe,o),l(oe,Es),s(e,Ct,o),s(e,se,o),l(se,vs),s(e,Ot,o),s(e,le,o),l(le,hs),s(e,Rt,o),s(e,ie,o),l(ie,ys),s(e,Tt,o),s(e,b,o),l(b,ws),l(b,Ge),l(Ge,_s),l(b,Ds),s(e,xt,o),s(e,H,o),H.innerHTML=Ai,s(e,Ht,o),s(e,ae,o),l(ae,bs),s(e,It,o),s(e,ne,o),l(ne,Ps),s(e,Lt,o),s(e,I,o),I.innerHTML=Yi,s(e,Mt,o),s(e,re,o),l(re,Cs),s(e,Nt,o),s(e,pe,o),l(pe,Os),s(e,St,o),s(e,L,o),L.innerHTML=Ui,s(e,At,o),s(e,fe,o),l(fe,Rs),s(e,Yt,o),s(e,ce,o),l(ce,Ts),s(e,Ut,o),s(e,ue,o),l(ue,xs),s(e,Ft,o),s(e,de,o),l(de,Hs),s(e,qt,o),s(e,M,o),M.innerHTML=Fi,s(e,Kt,o),s(e,N,o),l(N,Ve),l(Ve,Is),l(N,Ls),s(e,Bt,o),s(e,me,o),l(me,Ms),s(e,Gt,o),s(e,P,o),l(P,Ns),l(P,je),l(je,Ss),l(P,As),s(e,Vt,o),s(e,ke,o),l(ke,We),l(We,Ys),s(e,jt,o),s(e,Ee,o),l(Ee,Us),s(e,Wt,o),s(e,ve,o),l(ve,Fs),s(e,Xt,o),s(e,S,o),S.innerHTML=qi,s(e,zt,o),s(e,he,o),l(he,qs),s(e,Qt,o),s(e,A,o),A.innerHTML=Ki,s(e,Jt,o),s(e,E,o),l(E,Ks),l(E,Xe),l(Xe,Bs),l(E,Gs),l(E,ze),l(ze,Vs),l(E,js),s(e,Zt,o),s(e,ye,o),l(ye,Ws),s(e,$t,o),s(e,we,o),l(we,Xs),s(e,gt,o),s(e,_e,o),l(_e,zs),s(e,eo,o),s(e,u,o),l(u,Qs),l(u,Qe),l(Qe,Js),l(u,Zs),l(u,Je),l(Je,$s),l(u,gs),l(u,Ze),l(Ze,el),l(u,tl),l(u,$e),l($e,ol),l(u,sl),l(u,ge),l(ge,ll),l(u,il),s(e,to,o),s(e,De,o),l(De,al),s(e,oo,o),s(e,Y,o),l(Y,nl),l(Y,et),l(et,rl),s(e,so,o),s(e,be,o),l(be,pl),s(e,lo,o),s(e,Pe,o),l(Pe,fl),s(e,io,o),s(e,Ce,o),l(Ce,cl),s(e,ao,o),s(e,Oe,o),l(Oe,ul),s(e,no,o),s(e,Re,o),l(Re,dl),s(e,ro,o),s(e,U,o),U.innerHTML=Bi,s(e,po,o),s(e,Te,o),l(Te,ml),s(e,fo,o),s(e,xe,o),l(xe,kl),s(e,co,o),s(e,F,o),F.innerHTML=Gi},p:yl,i:yl,o:yl,d(e){e&&t(v),e&&t(tt),e&&t(q),e&&t(ot),e&&t(K),e&&t(st),e&&t(B),e&&t(lt),e&&t(G),e&&t(it),e&&t(V),e&&t(at),e&&t(j),e&&t(nt),e&&t(h),e&&t(rt),e&&t(W),e&&t(pt),e&&t(X),e&&t(ft),e&&t(x),e&&t(ct),e&&t(z),e&&t(ut),e&&t(y),e&&t(dt),e&&t(Q),e&&t(mt),e&&t(J),e&&t(kt),e&&t(Z),e&&t(Et),e&&t(w),e&&t(vt),e&&t($),e&&t(ht),e&&t(d),e&&t(yt),e&&t(g),e&&t(wt),e&&t(_),e&&t(_t),e&&t(ee),e&&t(Dt),e&&t(te),e&&t(bt),e&&t(D),e&&t(Pt),e&&t(oe),e&&t(Ct),e&&t(se),e&&t(Ot),e&&t(le),e&&t(Rt),e&&t(ie),e&&t(Tt),e&&t(b),e&&t(xt),e&&t(H),e&&t(Ht),e&&t(ae),e&&t(It),e&&t(ne),e&&t(Lt),e&&t(I),e&&t(Mt),e&&t(re),e&&t(Nt),e&&t(pe),e&&t(St),e&&t(L),e&&t(At),e&&t(fe),e&&t(Yt),e&&t(ce),e&&t(Ut),e&&t(ue),e&&t(Ft),e&&t(de),e&&t(qt),e&&t(M),e&&t(Kt),e&&t(N),e&&t(Bt),e&&t(me),e&&t(Gt),e&&t(P),e&&t(Vt),e&&t(ke),e&&t(jt),e&&t(Ee),e&&t(Wt),e&&t(ve),e&&t(Xt),e&&t(S),e&&t(zt),e&&t(he),e&&t(Qt),e&&t(A),e&&t(Jt),e&&t(E),e&&t(Zt),e&&t(ye),e&&t($t),e&&t(we),e&&t(gt),e&&t(_e),e&&t(eo),e&&t(u),e&&t(to),e&&t(De),e&&t(oo),e&&t(Y),e&&t(so),e&&t(be),e&&t(lo),e&&t(Pe),e&&t(io),e&&t(Ce),e&&t(ao),e&&t(Oe),e&&t(no),e&&t(Re),e&&t(ro),e&&t(U),e&&t(po),e&&t(Te),e&&t(fo),e&&t(xe),e&&t(co),e&&t(F)}}}const oa={title:"Docker Intro",date:"2022-12-01"},{title:Ni,date:la}=oa;class ia extends $i{constructor(v){super(),gi(this,v,null,ta,ea,{})}}export{ia as default,oa as metadata};
