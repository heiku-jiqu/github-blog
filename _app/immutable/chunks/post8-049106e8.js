import{S as z0,i as $0,s as j0,k as a,q as l,a as d,l as r,m as i,r as s,h as o,c as f,n as u,b as c,B as t,A as S7}from"./index-4cbca6b4.js";function X0(Wb){let Se,Hu,Fc,ho,Su,Vc,_o,xu,qc,ko,Au,zc,Do,Uu,$c,wo,Yu,jc,Oo,Gu,Xc,xe,z,Ku,aa,Wu,Bu,ra,Fu,Vu,ia,qu,zu,$u,kt,ju,na,Xu,Qu,Qc,yo,Zu,Zc,bo,Ju,Jc,Dt,ca,gu,eE,gc,Co,tE,ed,Ae,oE,da,lE,sE,td,Io,aE,od,Lo,rE,ld,Po,iE,sd,Ue,nE,fa,cE,dE,ad,Ro,fE,rd,S,pE,pa,uE,EE,ua,mE,vE,Ea,hE,_E,id,To,kE,nd,Ye,DE,ma,wE,OE,cd,No,yE,dd,Mo,bE,fd,Ge,CE,va,IE,LE,pd,Ho,PE,ud,Ed,md,So,RE,vd,xo,TE,hd,Ao,NE,_d,Ke,ME,ha,HE,SE,kd,wt,Bb=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">FROM</span> apache/spark</span>

<span class="token comment"># to specify a tag</span>
<span class="token instruction"><span class="token keyword">FROM</span> apache/spark:3.3.1</span></code>`,Dd,Uo,xE,wd,Yo,AE,Od,Ot,Fb=`<code class="language-dockerfile"><span class="token comment"># Shell form (defaults to /bin/sh -c on Linux or cmd /S /C on Windows)</span>
<span class="token instruction"><span class="token keyword">RUN</span> &lt;command></span>

<span class="token comment"># Exec form</span>
<span class="token instruction"><span class="token keyword">RUN</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>]</span></code>`,yd,Go,UE,bd,Ko,YE,Cd,yt,Vb=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # exec form</span>
<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # default parameters to ENTRYPOINT</span>
<span class="token instruction"><span class="token keyword">CMD</span> command param1 param2 # shell form</span></code>`,Id,Wo,GE,Ld,Bo,KE,Pd,bt,qb=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ENTRYPOINT</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # exec form</span>
<span class="token instruction"><span class="token keyword">ENTRYPOINT</span> command param1 param2 # shell form</span></code>`,Rd,Fo,WE,Td,Vo,BE,Nd,Ct,zb=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">COPY</span> &lt;src>... &lt;dest></span>
<span class="token instruction"><span class="token keyword">COPY</span> [<span class="token string">"&lt;src>"</span>,... <span class="token string">"&lt;dest>"</span>] # used when there are spaces in path</span></code>`,Md,J,FE,_a,VE,qE,ka,zE,$E,Hd,We,jE,Da,XE,QE,Sd,qo,ZE,xd,zo,JE,Ad,It,$b=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ADD</span> &lt;src>... &lt;dest></span>
<span class="token instruction"><span class="token keyword">ADD</span> [<span class="token string">"&lt;src>"</span>,... <span class="token string">"&lt;dest>"</span>] # used when there are spaces in path</span></code>`,Ud,Be,gE,wa,em,tm,Yd,g,Oa,om,lm,Lt,sm,ya,am,rm,im,ba,nm,Gd,Pt,Ca,cm,dm,Kd,ee,fm,Ia,pm,um,La,Em,mm,Wd,Fe,vm,Pa,hm,_m,Bd,$o,km,Fd,jo,Dm,Vd,Rt,jb='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ENV</span> &lt;key>=&lt;value></span></code>',qd,Xo,wm,zd,Qo,Om,$d,Tt,Xb='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">EXPOSE</span> &lt;port> [&lt;port>/&lt;protocol>]</span></code>',jd,$,Ra,ym,bm,Ta,Cm,Im,Na,Lm,Pm,Xd,Zo,Rm,Qd,Jo,Tm,Zd,Nt,Qb=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">VOLUME</span> &lt;path/to/container/dir> &lt;path/to/container/dir2> # space separated paths</span>
<span class="token instruction"><span class="token keyword">VOLUME</span> [<span class="token string">"&lt;/path/to/dir1>"</span>, <span class="token string">"&lt;/path/to/dir2>"</span>] #json array</span></code>`,Jd,Ve,Nm,Ma,Mm,Hm,gd,go,Sm,ef,k,xm,Ha,Am,Um,Sa,Ym,Gm,xa,Km,Wm,Aa,Bm,Fm,Ua,Vm,qm,tf,Mt,Zb=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">WORKDIR</span> /path/to/workdir # absolute paths, i.e. starts with /</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> path/to/child/dir # relative path, i.e. does not start with /</span></code>`,of,qe,zm,Ya,$m,jm,lf,te,Xm,Ga,Qm,Zm,Ka,Jm,gm,sf,el,Ht,e1,Wa,t1,o1,af,oe,l1,Ba,s1,a1,Fa,r1,i1,rf,tl,n1,nf,le,c1,Va,d1,f1,qa,p1,u1,cf,St,Jb='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ARG</span> &lt;name>[=&lt;default value>]</span></code>',df,j,za,E1,m1,$a,v1,h1,ja,_1,k1,ff,ol,D1,pf,ll,w1,uf,xt,gb='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ONBUILD</span> &lt;INSTRUCTION></span></code>',Ef,sl,O1,mf,At,e0=`<code class="language-dockerfile"><span class="token comment"># copy host files to /contents in the container</span>
<span class="token instruction"><span class="token keyword">ONBUILD</span> <span class="token keyword">ADD</span> . /contents</span>

<span class="token comment"># tar all files in the /contents directory in the container to archive.tar in the container</span>
<span class="token instruction"><span class="token keyword">ONBUILD</span> <span class="token keyword">RUN</span> tar -cfv archive.tar /contents</span></code>`,vf,se,y1,Xa,b1,C1,Qa,I1,L1,hf,Ut,Za,P1,R1,_f,al,T1,kf,rl,N1,Df,Yt,t0='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">STOPSIGNAL</span> signal</span></code>',wf,ae,il,M1,Ja,H1,S1,Le,x1,ga,A1,U1,er,Y1,G1,K1,Gt,W1,tr,B1,F1,Of,nl,V1,yf,cl,q1,bf,Kt,o0=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">HEALTHCHECK</span> [OPTIONS] CMD command</span>
<span class="token instruction"><span class="token keyword">HEALTHCHECK</span> <span class="token keyword">NONE</span> # disable any healthcheck from base image</span></code>`,Cf,Wt,or,z1,$1,If,x,ze,lr,j1,X1,sr,Q1,Z1,J1,$e,ar,g1,ev,rr,tv,ov,lv,je,ir,sv,av,nr,rv,iv,nv,Xe,cr,cv,dv,dr,fv,pv,Lf,D,uv,fr,Ev,mv,pr,vv,hv,ur,_v,kv,Er,Dv,wv,mr,Ov,yv,Pf,re,bv,vr,Cv,Iv,hr,Lv,Pv,Rf,ie,Rv,_r,Tv,Nv,kr,Mv,Hv,Tf,dl,Sv,Nf,ne,xv,Dr,Av,Uv,wr,Yv,Gv,Mf,Bt,l0='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">SHELL</span> [<span class="token string">"executable"</span>, <span class="token string">"parameters"</span>]</span></code>',Hf,fl,Kv,Sf,pl,Wv,xf,Ft,s0=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">USER</span> &lt;user></span>
<span class="token instruction"><span class="token keyword">USER</span> &lt;UID></span></code>`,Af,ul,Bv,Uf,El,Fv,Yf,Qe,Vv,Or,qv,zv,Gf,Vt,a0='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">LABEL</span> &lt;key>=&lt;value> &lt;key>=&lt;value> ...</span></code>',Kf,ml,$v,Wf,Ze,jv,yr,Xv,Qv,Bf,ce,Zv,br,Jv,gv,Cr,eh,th,Ff,Je,de,Ir,oh,lh,Lr,sh,ah,Pr,rh,ih,nh,O,Rr,ch,dh,Tr,fh,ph,Nr,uh,Eh,Mr,mh,vh,Hr,hh,_h,Vf,m,kh,Sr,Dh,wh,xr,Oh,yh,Ar,bh,Ch,Ur,Ih,Lh,Yr,Ph,Rh,Gr,Th,Nh,Kr,Mh,Hh,Wr,Sh,xh,Br,Ah,Uh,Fr,Yh,Gh,Vr,Kh,Wh,qf,qt,r0=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">FROM</span> example</span>
<span class="token instruction"><span class="token keyword">ENV</span> var=/bar</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token variable">$&#123;var&#125;</span> # WORKDIR /bar</span>
<span class="token instruction"><span class="token keyword">ADD</span> . <span class="token variable">$FOO</span>     # ADD . /bar</span></code>`,zf,vl,qr,Bh,$f,A,Fh,zr,Vh,qh,$r,zh,$h,jr,jh,Xh,jf,hl,Qh,Xf,Qf,Zf,_l,Zh,Jf,kl,Jh,gf,Dl,gh,ep,zt,i0='<code class="language-undefined">docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]</code>',tp,fe,Xr,e3,t3,Qr,y,Zr,o3,l3,Jr,s3,a3,gr,r3,i3,ei,n3,c3,ti,d3,f3,p3,wl,u3,oi,E3,op,$t,li,m3,v3,lp,b,si,h3,_3,ai,k3,D3,ri,w3,O3,ii,y3,b3,ni,C3,sp,Ol,I3,ap,h,yl,ci,L3,P3,R3,X,di,T3,N3,fi,M3,H3,pi,S3,x3,ui,A3,U3,U,Ei,Y3,G3,mi,K3,W3,vi,B3,F3,hi,V3,q3,z3,Y,_i,$3,j3,ki,X3,Q3,Di,Z3,J3,wi,g3,e_,t_,ge,Oi,o_,l_,yi,s_,a_,r_,bl,bi,i_,n_,c_,G,Ci,d_,f_,Ii,p_,u_,Li,E_,m_,jt,v_,h_,rp,et,Pi,__,k_,Pe,D_,Xt,w_,O_,Qt,y_,b_,ip,Cl,C_,np,pe,I_,Ri,L_,P_,Ti,R_,T_,cp,Zt,n0='<code class="language-undefined">docker build [OPTIONS] PATH | URL |</code>',dp,C,N_,Ni,M_,H_,Mi,S_,x_,Hi,A_,U_,Si,Y_,G_,fp,Il,K_,pp,ue,Ee,xi,W_,B_,Ai,F_,V_,Ui,q_,z_,$_,tt,Yi,j_,X_,Gi,Q_,Z_,J_,Re,Ki,g_,e2,Wi,t2,o2,Bi,l2,up,Ll,Fi,s2,Ep,K,Vi,a2,r2,qi,i2,n2,zi,c2,d2,$i,f2,mp,Jt,ji,p2,u2,vp,Pl,E2,hp,Rl,m2,_p,gt,c0='<code class="language-undefined">docker image COMMAND</code>',kp,Tl,v2,Dp,I,Nl,Xi,h2,_2,k2,Ml,Qi,D2,w2,O2,Hl,Zi,y2,b2,C2,Sl,Ji,I2,L2,P2,xl,gi,R2,T2,wp,Al,N2,Op,Ul,M2,yp,eo,d0='<code class="language-undefined">docker container COMMAND</code>',bp,Yl,H2,Cp,p,Gl,en,S2,x2,A2,Kl,tn,U2,Y2,G2,ot,on,K2,W2,ln,B2,F2,V2,lt,sn,q2,z2,an,$2,j2,X2,Wl,rn,Q2,Z2,J2,Bl,nn,g2,e4,t4,Fl,cn,o4,l4,s4,Vl,dn,a4,r4,i4,ql,fn,n4,c4,d4,zl,pn,f4,p4,u4,$l,un,E4,m4,v4,jl,En,h4,_4,k4,Xl,mn,D4,w4,O4,Ql,vn,y4,b4,C4,Zl,hn,I4,L4,P4,Jl,_n,R4,T4,Ip,gl,N4,Lp,es,M4,Pp,to,f0='<code class="language-undefined">docker network COMMAND</code>',Rp,ts,H4,Tp,w,os,kn,S4,x4,A4,st,Dn,U4,Y4,wn,G4,K4,W4,ls,On,B4,F4,V4,ss,yn,q4,z4,$4,as,bn,j4,X4,Q4,rs,Cn,Z4,J4,Np,is,g4,Mp,ns,ek,Hp,oo,p0='<code class="language-undefined">docker volume COMMAND</code>',Sp,cs,tk,xp,L,ds,In,ok,lk,sk,fs,Ln,ak,rk,ik,ps,Pn,nk,ck,dk,us,Rn,fk,pk,uk,Es,Tn,Ek,mk,Ap,ms,vk,Up,me,hk,Nn,_k,kk,Mn,Dk,wk,Yp,lo,u0='<code class="language-undefined">docker logs [OPTIONS] CONTAINER</code>',Gp,vs,Ok,Kp,P,at,Hn,yk,bk,Sn,Ck,Ik,Lk,rt,xn,Pk,Rk,An,Tk,Nk,Mk,ve,Un,Hk,Sk,Yn,xk,Ak,Gn,Uk,Yk,Gk,W,Kn,Kk,Wk,Wn,Bk,Fk,Bn,Vk,qk,Fn,zk,$k,jk,it,Vn,Xk,Qk,qn,Zk,Jk,Wp,hs,gk,Bp,_s,e5,Fp,so,E0='<code class="language-undefined">docker inspect [OPTIONS] NAME|ID</code>',Vp,ks,t5,qp,Ds,o5,zp,ao,m0='<code class="language-undefined">docker ps [OPTIONS]</code>',$p,ws,l5,jp,R,nt,zn,s5,a5,$n,r5,i5,n5,he,jn,c5,d5,Xn,f5,p5,Qn,u5,E5,m5,Os,Zn,v5,h5,_5,_e,Jn,k5,D5,gn,w5,O5,ec,y5,b5,C5,H,tc,I5,L5,oc,P5,R5,lc,T5,N5,sc,M5,H5,ro,ct,ac,S5,x5,rc,A5,U5,Y5,ys,ic,G5,K5,Xp,bs,W5,Qp,Cs,B5,Zp,io,v0='<code class="language-undefined">docker stats [OPTIONS] [CONTAINER...]</code>',Jp,Is,F5,gp,B,dt,nc,V5,q5,cc,z5,$5,j5,Ls,dc,X5,Q5,Z5,Ps,fc,J5,g5,e6,Rs,pc,t6,o6,eu,tu,ou,Ts,l6,lu,Ns,s6,su,Ms,a6,au,_,no,uc,r6,i6,Ec,n6,c6,ft,mc,d6,f6,vc,p6,u6,E6,Hs,hc,m6,v6,h6,Ss,_c,_6,k6,D6,xs,kc,w6,O6,y6,As,Dc,b6,C6,I6,wc,L6,ru,iu,nu,Us,P6,cu,Ys,R6,du,Gs,T6,fu,T,Oc,N6,M6,yc,H6,S6,bc,x6,A6,Cc,U6,Y6,Ic,G6;return{c(){Se=a("h1"),Hu=l(Kb),Fc=d(),ho=a("p"),Su=l("Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),Vc=d(),_o=a("p"),xu=l(`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),qc=d(),ko=a("h2"),Au=l("key concepts"),zc=d(),Do=a("h3"),Uu=l("Docker images"),$c=d(),wo=a("p"),Yu=l(`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),jc=d(),Oo=a("p"),Gu=l("Images are often build on top of one another"),Xc=d(),xe=a("ul"),z=a("li"),Ku=l("e.g. you start with "),aa=a("code"),Wu=l("ubuntu"),Bu=l(" image, install "),ra=a("code"),Fu=l("python"),Vu=l(" in that ubuntu image, install "),ia=a("code"),qu=l("pytorch"),zu=l(" package, install pretrained models."),$u=d(),kt=a("li"),ju=l("or you can start with a published "),na=a("code"),Xu=l("python"),Qu=l(" image, and install your packages there."),Qc=d(),yo=a("p"),Zu=l("Published images are available for download in Docker registries."),Zc=d(),bo=a("h4"),Ju=l("Dockerfile"),Jc=d(),Dt=a("p"),ca=a("code"),gu=l("Dockerfile"),eE=l("s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),gc=d(),Co=a("h3"),tE=l("Docker containers"),ed=d(),Ae=a("p"),oE=l(`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),da=a("code"),lE=l("nodejs"),sE=l(" image, but one exposes port 8888 and another exposes port 8899."),td=d(),Io=a("h3"),aE=l("Docker registries"),od=d(),Lo=a("p"),rE=l("Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),ld=d(),Po=a("h3"),iE=l("Docker daemon"),sd=d(),Ue=a("p"),nE=l("This is the underlying "),fa=a("code"),cE=l("dockerd"),dE=l(" process that helps you build images and run containers. It will listen for Docker API requests"),ad=d(),Ro=a("h3"),fE=l("Docker client"),rd=d(),S=a("p"),pE=l("The docker client "),pa=a("code"),uE=l("docker"),EE=l(" is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),ua=a("code"),mE=l("docker"),vE=l(" command sends Docker API requests to "),Ea=a("code"),hE=l("dockerd"),_E=l("."),id=d(),To=a("h3"),kE=l("Docker compose"),nd=d(),Ye=a("p"),DE=l("Docker compose is a tool that helps with running "),ma=a("em"),wE=l("multi-container"),OE=l(" Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),cd=d(),No=a("p"),yE=l("For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),dd=d(),Mo=a("h4"),bE=l("Difference between Kubernetes"),fd=d(),Ge=a("p"),CE=l("Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),va=a("em"),IE=l("single-node"),LE=l(", whereas Kubernetes is a full multi-node container manager."),pd=d(),Ho=a("p"),PE=l("Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),ud=d(),Ed=a("hr"),md=d(),So=a("h2"),RE=l("Dockerfile"),vd=d(),xo=a("h3"),TE=l("Commands"),hd=d(),Ao=a("h4"),NE=l("FROM"),_d=d(),Ke=a("p"),ME=l("All dockerfile starts with the "),ha=a("code"),HE=l("FROM"),SE=l(" command. It pulls the base image from Dockerhub to start to build your image."),kd=d(),wt=a("pre"),Dd=d(),Uo=a("h4"),xE=l("RUN"),wd=d(),Yo=a("p"),AE=l("Runs a command or executable. It has two forms"),Od=d(),Ot=a("pre"),yd=d(),Go=a("h4"),UE=l("CMD"),bd=d(),Ko=a("p"),YE=l("Provides defaults for an executing container. The arguments will be appended to ENTRYPOINT."),Cd=d(),yt=a("pre"),Id=d(),Wo=a("h4"),GE=l("ENTRYPOINT"),Ld=d(),Bo=a("p"),KE=l(`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),Pd=d(),bt=a("pre"),Rd=d(),Fo=a("h4"),WE=l("COPY"),Td=d(),Vo=a("p"),BE=l("Copies file from your native host into the container image."),Nd=d(),Ct=a("pre"),Md=d(),J=a("p"),FE=l("Multiple "),_a=a("code"),VE=l("<src>"),qE=l(" can be specified, and the last argument will be treated as the "),ka=a("code"),zE=l("<dest>"),$E=l("."),Hd=d(),We=a("p"),jE=l("All "),Da=a("code"),XE=l("<src>"),QE=l(" relative paths must be inside context of the build!"),Sd=d(),qo=a("h4"),ZE=l("ADD"),xd=d(),zo=a("p"),JE=l("Copies file from your native host into the container image."),Ad=d(),It=a("pre"),Ud=d(),Be=a("p"),gE=l("Compared to COPY, "),wa=a("code"),em=l("ADD"),tm=l(" has added utilities like:"),Yd=d(),g=a("ul"),Oa=a("li"),om=l("being able to download files from URLs then copying them into the image"),lm=d(),Lt=a("li"),sm=l("extracting contents of "),ya=a("code"),am=l(".tar"),rm=l(" files before copying into image"),im=d(),ba=a("li"),nm=l("adding contents from a git repo"),Gd=d(),Pt=a("p"),Ca=a("strong"),cm=l("tip: use COPY as default, unless you need the additional features of ADD."),dm=l(" This is to prevent unwanted side effects!"),Kd=d(),ee=a("p"),fm=l("Multiple "),Ia=a("code"),pm=l("<src>"),um=l(" can be specified, and the last argument will be treated as the "),La=a("code"),Em=l("<dest>"),mm=l("."),Wd=d(),Fe=a("p"),vm=l("All "),Pa=a("code"),hm=l("<src>"),_m=l(" relative paths must be inside context of the build!"),Bd=d(),$o=a("h4"),km=l("ENV"),Fd=d(),jo=a("p"),Dm=l("Sets an environment variable"),Vd=d(),Rt=a("pre"),qd=d(),Xo=a("h4"),wm=l("EXPOSE"),zd=d(),Qo=a("p"),Om=l("Instructs Docker that container should listen on specified network ports at runtime."),$d=d(),Tt=a("pre"),jd=d(),$=a("p"),Ra=a("strong"),ym=l("Ports are not automatically published"),bm=l(`, and this command is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),Ta=a("code"),Cm=l("-P"),Im=l(" flag (which maps exposed ports in container to random ports in native host machine), or "),Na=a("code"),Lm=l("-p"),Pm=l(" to explicitly map ports from containers to your localhost."),Xd=d(),Zo=a("h4"),Rm=l("VOLUME"),Qd=d(),Jo=a("p"),Tm=l(`Marks the directory(s) within the container as an external drive from native host or other containers.
This allows files to be accessed from outside the containers.`),Zd=d(),Nt=a("pre"),Jd=d(),Ve=a("p"),Nm=l("Note that where this (container) directory maps to in your native host is "),Ma=a("strong"),Mm=l("specified when you build or run the container"),Hm=l("."),gd=d(),go=a("h4"),Sm=l("WORKDIR"),ef=d(),k=a("p"),xm=l("Sets working directory for any "),Ha=a("code"),Am=l("RUN"),Um=l(", "),Sa=a("code"),Ym=l("CMD"),Gm=l(", "),xa=a("code"),Km=l("ENTRYPOINT"),Wm=l(", "),Aa=a("code"),Bm=l("COPY"),Fm=l(", "),Ua=a("code"),Vm=l("ADD"),qm=l(" instructions that follows."),tf=d(),Mt=a("pre"),of=d(),qe=a("p"),zm=l("Multiple "),Ya=a("code"),$m=l("WORKDIR"),jm=l(" can be used in a dockerfile."),lf=d(),te=a("p"),Xm=l("If not specified, default directory is "),Ga=a("code"),Qm=l("/"),Zm=l(`.
But if you are pulling from an image, chances are `),Ka=a("code"),Jm=l("WORKDIR"),gm=l(" already been set in your base image and it will be brought over."),sf=d(),el=a("p"),Ht=a("strong"),e1=l("tip: explicitly set "),Wa=a("code"),t1=l("WORKDIR"),o1=l(" to prevent unintended operations in unknown dirs"),af=d(),oe=a("p"),l1=l("It is also possible to resolve env variables previously set by "),Ba=a("code"),s1=l("ENV"),a1=l(", e.g. "),Fa=a("code"),r1=l("WORKDIR $DIRPATH_ENV_VAR"),i1=l("."),rf=d(),tl=a("h4"),n1=l("ARG"),nf=d(),le=a("p"),c1=l("Defines a variable that users can pass values into during "),Va=a("code"),d1=l("docker build"),f1=l(" by using "),qa=a("code"),p1=l("--build-arg <argname>=<value>"),u1=l(" flag."),cf=d(),St=a("pre"),df=d(),j=a("p"),za=a("code"),E1=l("ENV"),m1=l(" variables will overwrite "),$a=a("code"),v1=l("ARG"),h1=l(" variables if they are the same name (at the point where the "),ja=a("code"),_1=l("ENV"),k1=l(" variable is defined)."),ff=d(),ol=a("h4"),D1=l("ONBUILD"),pf=d(),ll=a("p"),w1=l("Adds a trigger to the image that will execute dockerfile instructions when the current image is used as the base for another build."),uf=d(),xt=a("pre"),Ef=d(),sl=a("p"),O1=l("This command is usful when when you are building a base image that will be distributed to other people, and instructions that depend on other people\u2019s files needs to be run. Example, you could add:"),mf=d(),At=a("pre"),vf=d(),se=a("p"),y1=l("The instructions specified are triggered "),Xa=a("em"),b1=l("immediately"),C1=l(" after the "),Qa=a("code"),I1=l("FROM"),L1=l(" instruction in the child image."),hf=d(),Ut=a("p"),Za=a("code"),P1=l("ONBUILD"),R1=l(" triggers are not inherited by children images."),_f=d(),al=a("h4"),T1=l("STOPSIGNAL"),kf=d(),rl=a("p"),N1=l("Sets the system call signal that will cause the container to exit."),Df=d(),Yt=a("pre"),wf=d(),ae=a("ul"),il=a("li"),M1=l("Default is "),Ja=a("code"),H1=l("SIGTERM"),S1=d(),Le=a("li"),x1=l("Can be in "),ga=a("code"),A1=l("SIG<NAME>"),U1=l(" format (e.g. "),er=a("code"),Y1=l("SIGKILL"),G1=l(")"),K1=d(),Gt=a("li"),W1=l("Can be an unassigned number in kernel\u2019s syscall table (e.g. "),tr=a("code"),B1=l("9"),F1=l(")"),Of=d(),nl=a("h4"),V1=l("HEALTHCHECK"),yf=d(),cl=a("p"),q1=l("Specifies a command to be run inside the container to check container\u2019s health."),bf=d(),Kt=a("pre"),Cf=d(),Wt=a("p"),or=a("code"),z1=l("OPTIONS"),$1=l(" include:"),If=d(),x=a("ul"),ze=a("li"),lr=a("code"),j1=l("--interval=DURATION"),X1=l(" (default "),sr=a("code"),Q1=l("30s"),Z1=l(")"),J1=d(),$e=a("li"),ar=a("code"),g1=l("--timeout=DURATION"),ev=l(" (default "),rr=a("code"),tv=l("30s"),ov=l(")"),lv=d(),je=a("li"),ir=a("code"),sv=l("--retries=N"),av=l(" (default "),nr=a("code"),rv=l("3"),iv=l(")"),nv=d(),Xe=a("li"),cr=a("code"),cv=l("--start-period=DURATION"),dv=l(" (default "),dr=a("code"),fv=l("0s"),pv=l(")"),Lf=d(),D=a("p"),uv=l("A container that has "),fr=a("code"),Ev=l("HEALTHCHECK"),mv=l(" specified will have a "),pr=a("em"),vv=l("health status"),hv=l(" that can take 3 possible states: "),ur=a("code"),_v=l("starting"),kv=l(" | "),Er=a("code"),Dv=l("healthy"),wv=l(" | "),mr=a("code"),Ov=l("unhealthy"),yv=l("."),Pf=d(),re=a("p"),bv=l("Whenever a health check passes, health status changes to "),vr=a("code"),Cv=l("healthy"),Iv=l(". After a number of consecutive failures, health status changes to "),hr=a("code"),Lv=l("unhealthy"),Pv=l("."),Rf=d(),ie=a("p"),Rv=l(`Health checks are run after every interval.
Health checks are considered failed when commands runs for longer than timeout.
When consecutive failures reaches max retries, or command exits with non zero status code `),_r=a("code"),Tv=l("0"),Nv=l(", "),kr=a("em"),Mv=l("health status"),Hv=l(" will change to unhealthy."),Tf=d(),dl=a("h4"),Sv=l("SHELL"),Nf=d(),ne=a("p"),xv=l("Specifies the default shell used for shell form of commands. Default is set to "),Dr=a("code"),Av=l('["/bin/sh", "-c"]'),Uv=l(" for Linux containers and "),wr=a("code"),Yv=l('["cmd", "/S", "/C"]'),Gv=l(" for Windows containers."),Mf=d(),Bt=a("pre"),Hf=d(),fl=a("h4"),Kv=l("USER"),Sf=d(),pl=a("p"),Wv=l("Sets the username/UID to use for the remainder of the Docker build stage."),xf=d(),Ft=a("pre"),Af=d(),ul=a("p"),Bv=l(`This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),Uf=d(),El=a("h4"),Fv=l("LABEL"),Yf=d(),Qe=a("p"),Vv=l("Adds metadata to an image and are inherited by child images. You can view an image\u2019s labels using "),Or=a("code"),qv=l("docker image inspect"),zv=l("."),Gf=d(),Vt=a("pre"),Kf=d(),ml=a("h3"),$v=l("Environment Replacement"),Wf=d(),Ze=a("p"),jv=l("Some Dockerfile instructions are able to read environment variables created by "),yr=a("code"),Xv=l("ENV"),Qv=l(" commands, and replace them with the values that those environment variables hold."),Bf=d(),ce=a("p"),Zv=l("The syntax is "),br=a("code"),Jv=l("$variable_name"),gv=l(" or "),Cr=a("code"),eh=l("${variable_name}"),th=l(" within a Dockerfile."),Ff=d(),Je=a("ul"),de=a("li"),Ir=a("code"),oh=l("${variable:-word}"),lh=l(" to set "),Lr=a("code"),sh=l("word"),ah=l(" as default value when "),Pr=a("code"),rh=l("variable"),ih=l(" is not set"),nh=d(),O=a("li"),Rr=a("code"),ch=l("${variable:+word}"),dh=l(" to set "),Tr=a("code"),fh=l("word"),ph=l(" as "),Nr=a("code"),uh=l("variable"),Eh=l(" when "),Mr=a("code"),mh=l("variable"),vh=l(" has already been set, otherwise "),Hr=a("code"),hh=l("variable"),_h=l(" will be empty string."),Vf=d(),m=a("p"),kh=l("Dockerfile instructions that support environment variables are: "),Sr=a("code"),Dh=l("ADD"),wh=l(", "),xr=a("code"),Oh=l("COPY"),yh=l(", "),Ar=a("code"),bh=l("ENV"),Ch=l(", "),Ur=a("code"),Ih=l("EXPOSE"),Lh=l(", "),Yr=a("code"),Ph=l("FROM"),Rh=l(", "),Gr=a("code"),Th=l("LABEL"),Nh=l(", "),Kr=a("code"),Mh=l("STOPSIGNAL"),Hh=l(", "),Wr=a("code"),Sh=l("USER"),xh=l(", "),Br=a("code"),Ah=l("VOLUME"),Uh=l(", "),Fr=a("code"),Yh=l("WORKDIR"),Gh=l(", "),Vr=a("code"),Kh=l("ONBUILD"),Wh=l("."),qf=d(),qt=a("pre"),zf=d(),vl=a("h3"),qr=a("code"),Bh=l(".dockerignore"),$f=d(),A=a("p"),Fh=l("Similar to "),zr=a("code"),Vh=l(".gitignore"),qh=l(", this file contains a list of files and directories that docker should "),$r=a("strong"),zh=l("exclude"),$h=l(" from the "),jr=a("em"),jh=l("context"),Xh=l(" of a docker build."),jf=d(),hl=a("p"),Qh=l("This is useful for preventing sending of large or sensitive files to docker daemon."),Xf=d(),Qf=a("hr"),Zf=d(),_l=a("h2"),Zh=l("useful docker CLI commands"),Jf=d(),kl=a("h3"),Jh=l("docker run"),gf=d(),Dl=a("p"),gh=l("Runs your images as isolated containers."),ep=d(),zt=a("pre"),tp=d(),fe=a("details"),Xr=a("summary"),e3=l("details"),t3=d(),Qr=a("p"),y=a("em"),Zr=a("code"),o3=l("docker run"),l3=l("\u2019s "),Jr=a("code"),s3=l("[OPTIONS]"),a3=l(" are specified "),gr=a("strong"),r3=l("before"),i3=l(" the image name, whilst arguments ("),ei=a("code"),n3=l("[ARG...]"),c3=l(") for the command to be executed within the container is "),ti=a("strong"),d3=l("AFTER"),f3=l(" the image name and command."),p3=d(),wl=a("p"),u3=l("for example: "),oi=a("code"),E3=l("docker run -ti ubuntu-image touch /path/to/file"),op=d(),$t=a("p"),li=a("code"),m3=l("docker run"),v3=l(" is able to set many runtime options and override default settings defined by images, these include:"),lp=d(),b=a("ul"),si=a("li"),h3=l("running container in foreground or detached mode"),_3=d(),ai=a("li"),k3=l("name of container"),D3=d(),ri=a("li"),w3=l("network settings"),O3=d(),ii=a("li"),y3=l("volume settings"),b3=d(),ni=a("li"),C3=l("cpu / memory limits"),sp=d(),Ol=a("p"),I3=l("Common options to specify:"),ap=d(),h=a("ul"),yl=a("li"),ci=a("code"),L3=l("--name"),P3=l(" : assign a name to container (defaults to randomly generated words)"),R3=d(),X=a("li"),di=a("code"),T3=l("--detach"),N3=l(" / "),fi=a("code"),M3=l("-d"),H3=l(" : run in detached mode so the terminal of the machine does not continouously stream container\u2019s "),pi=a("code"),S3=l("STDOUT"),x3=l(" / "),ui=a("code"),A3=l("STDERR"),U3=d(),U=a("li"),Ei=a("code"),Y3=l("--interactive"),G3=l(" / "),mi=a("code"),K3=l("-i"),W3=l(" : keep "),vi=a("code"),B3=l("STDIN"),F3=l(" open even if not attached (usually used with "),hi=a("code"),V3=l("-t"),q3=l(")"),z3=d(),Y=a("li"),_i=a("code"),$3=l("--tty"),j3=l(" / "),ki=a("code"),X3=l("-t"),Q3=l(" : allocate pseudo-TTY to connect to container\u2019s "),Di=a("code"),Z3=l("STDIN"),J3=l(" (usually used with "),wi=a("code"),g3=l("-i"),e_=l(")"),t_=d(),ge=a("li"),Oi=a("code"),o_=l("--expose"),l_=l(" / "),yi=a("code"),s_=l("-p"),a_=l(" : expose container\u2019s ports to other containers and/or the host machine."),r_=d(),bl=a("li"),bi=a("code"),i_=l("--mount"),n_=l(" : mount volumes or directories to container"),c_=d(),G=a("li"),Ci=a("code"),d_=l("--volume"),f_=l(" / "),Ii=a("code"),p_=l("-v"),u_=l(" : mount volumes or directories to container (use of "),Li=a("code"),E_=l("--mount"),m_=l(" is recommended, "),jt=a("a"),v_=l("see differences here"),h_=l(")"),rp=d(),et=a("details"),Pi=a("summary"),__=l("note on docker run documentation"),k_=d(),Pe=a("p"),D_=l("there are two pages for docker run, a "),Xt=a("a"),w_=l("generic one"),O_=l(" that lists all commands and "),Qt=a("a"),y_=l("another one"),b_=l(" that provides more explanation"),ip=d(),Cl=a("h3"),C_=l("docker build"),np=d(),pe=a("p"),I_=l("Build Docker images from "),Ri=a("code"),L_=l("dockerfile"),P_=l(" and a "),Ti=a("em"),R_=l("context"),T_=l("."),cp=d(),Zt=a("pre"),dp=d(),C=a("p"),N_=l("A build\u2019s context is the (sub-)files and (sub-)directories located in the specified "),Ni=a("code"),M_=l("PATH"),H_=l(" or "),Mi=a("code"),S_=l("URL"),x_=l(`.
By default, `),Hi=a("code"),A_=l("docker build"),U_=l(" will look for "),Si=a("code"),Y_=l(".Dockerfile"),G_=l(" in the root of the build context."),fp=d(),Il=a("p"),K_=l("Common options to specify:"),pp=d(),ue=a("ul"),Ee=a("li"),xi=a("code"),W_=l("--file"),B_=l(" / "),Ai=a("code"),F_=l("-f"),V_=l(" : specify location of "),Ui=a("code"),q_=l("Dockerfile"),z_=l(", can be absolute path or relative path with respect to context."),$_=d(),tt=a("li"),Yi=a("code"),j_=l("--tag"),X_=l(" / "),Gi=a("code"),Q_=l("-t"),Z_=l(" : name and optionally tag the image in \u2018name:tag\u2019 format"),J_=d(),Re=a("li"),Ki=a("code"),g_=l("--build-arg"),e2=l(" : sets the value of "),Wi=a("code"),t2=l("ARG"),o2=l("s defined in "),Bi=a("code"),l2=l("Dockerfile"),up=d(),Ll=a("p"),Fi=a("strong"),s2=l("Examples"),Ep=d(),K=a("p"),Vi=a("code"),a2=l("docker build ."),r2=d(),qi=a("code"),i2=l("docker build -f docker/Dockerfile ."),n2=d(),zi=a("code"),c2=l("docker build --build-arg HTTP_PROXY=http://1.1.1.1:1111 ."),d2=d(),$i=a("code"),f2=l("docker build -f ctx/Dockerfile github.com/user/project-repo"),mp=d(),Jt=a("details"),ji=a("summary"),p2=l("note"),u2=l(`
remember to specify options BEFORE the context path/url`),vp=d(),Pl=a("h3"),E2=l("docker image"),hp=d(),Rl=a("p"),m2=l("Manages Docker images."),_p=d(),gt=a("pre"),kp=d(),Tl=a("p"),v2=l("Common commands:"),Dp=d(),I=a("ul"),Nl=a("li"),Xi=a("code"),h2=l("pull"),_2=l(" : pull an image or repo from a registry (ie Docker Hub)"),k2=d(),Ml=a("li"),Qi=a("code"),D2=l("inspect"),w2=l(" : get detailed info about image(s)"),O2=d(),Hl=a("li"),Zi=a("code"),y2=l("ls"),b2=l(" : list images"),C2=d(),Sl=a("li"),Ji=a("code"),I2=l("prune"),L2=l(" : remove unused images"),P2=d(),xl=a("li"),gi=a("code"),R2=l("rm"),T2=l(" : remove specific image(s)"),wp=d(),Al=a("h3"),N2=l("docker container"),Op=d(),Ul=a("p"),M2=l("Manages Docker containers."),yp=d(),eo=a("pre"),bp=d(),Yl=a("p"),H2=l("Commond commands:"),Cp=d(),p=a("ul"),Gl=a("li"),en=a("code"),S2=l("create"),x2=l(" : create a new container from image"),A2=d(),Kl=a("li"),tn=a("code"),U2=l("start"),Y2=l(" : start running the container"),G2=d(),ot=a("li"),on=a("code"),K2=l("stop"),W2=l(" : stop the container (issues "),ln=a("code"),B2=l("SIGTERM"),F2=l(" signal)"),V2=d(),lt=a("li"),sn=a("code"),q2=l("kill"),z2=l(" : kills the container (issues "),an=a("code"),$2=l("SIGKILL"),j2=l(" signal)"),X2=d(),Wl=a("li"),rn=a("code"),Q2=l("restart"),Z2=l(" : restarts the container (will try to stop, if wait too long will kill)"),J2=d(),Bl=a("li"),nn=a("code"),g2=l("pause"),e4=l(" : pause all process in container(s)"),t4=d(),Fl=a("li"),cn=a("code"),o4=l("unpause"),l4=l(" : unpause all processes in container(s)"),s4=d(),Vl=a("li"),dn=a("code"),a4=l("attach"),r4=l(" : attach local machine\u2019s STDIN, STDOUT, STDERR to the container\u2019s"),i4=d(),ql=a("li"),fn=a("code"),n4=l("exec"),c4=l(" : run a command in a running container"),d4=d(),zl=a("li"),pn=a("code"),f4=l("logs"),p4=l(" : retrieve container logs"),u4=d(),$l=a("li"),un=a("code"),E4=l("stats"),m4=l(" : stream container resource usage"),v4=d(),jl=a("li"),En=a("code"),h4=l("top"),_4=l(" : display running processes within the container"),k4=d(),Xl=a("li"),mn=a("code"),D4=l("rm"),w4=l(" : remove container(s)"),O4=d(),Ql=a("li"),vn=a("code"),y4=l("prune"),b4=l(" : remove unused containers"),C4=d(),Zl=a("li"),hn=a("code"),I4=l("export"),L4=l(" : export container\u2019s filesystem as a tar archive"),P4=d(),Jl=a("li"),_n=a("code"),R4=l("cp"),T4=l(" : copy files/folders between container and local filesystem"),Ip=d(),gl=a("h3"),N4=l("docker network"),Lp=d(),es=a("p"),M4=l("Manages Docker networks."),Pp=d(),to=a("pre"),Rp=d(),ts=a("p"),H4=l("Common commands:"),Tp=d(),w=a("ul"),os=a("li"),kn=a("code"),S4=l("create"),x4=l(" : creates a docker network"),A4=d(),st=a("li"),Dn=a("code"),U4=l("connect"),Y4=l(" / "),wn=a("code"),G4=l("disconnect"),K4=l(" : connect / disconnect a container to a network"),W4=d(),ls=a("li"),On=a("code"),B4=l("inspect"),F4=l(" : get detailed info about network(s)"),V4=d(),ss=a("li"),yn=a("code"),q4=l("ls"),z4=l(" : list docker networks"),$4=d(),as=a("li"),bn=a("code"),j4=l("rm"),X4=l(" : removes docker network(s)"),Q4=d(),rs=a("li"),Cn=a("code"),Z4=l("prune"),J4=l(" : removes all unused networks"),Np=d(),is=a("h3"),g4=l("docker volume"),Mp=d(),ns=a("p"),ek=l("Manages Docker volumes."),Hp=d(),oo=a("pre"),Sp=d(),cs=a("p"),tk=l("Common commands:"),xp=d(),L=a("ul"),ds=a("li"),In=a("code"),ok=l("create"),lk=l(" : creates a docker volume"),sk=d(),fs=a("li"),Ln=a("code"),ak=l("inspect"),rk=l(" : get detailed info about volume(s)"),ik=d(),ps=a("li"),Pn=a("code"),nk=l("ls"),ck=l(" : list docker volumes"),dk=d(),us=a("li"),Rn=a("code"),fk=l("rm"),pk=l(" : removes docker volume(s)"),uk=d(),Es=a("li"),Tn=a("code"),Ek=l("prune"),mk=l(" : removes all unused volume"),Ap=d(),ms=a("h3"),vk=l("docker logs"),Up=d(),me=a("p"),hk=l("Retrieves container\u2019s logs (to "),Nn=a("code"),_k=l("STDOUT"),kk=l(" and "),Mn=a("code"),Dk=l("STDERR"),wk=l(") to your CLI."),Yp=d(),lo=a("pre"),Gp=d(),vs=a("p"),Ok=l("Common options to specify:"),Kp=d(),P=a("ul"),at=a("li"),Hn=a("code"),yk=l("--follow"),bk=l(" / "),Sn=a("code"),Ck=l("-f"),Ik=l(" : continuously streams the log output"),Lk=d(),rt=a("li"),xn=a("code"),Pk=l("--timestamps"),Rk=l(" / "),An=a("code"),Tk=l("-t"),Nk=l(" : show timestamps of logs"),Mk=d(),ve=a("li"),Un=a("code"),Hk=l("--tail"),Sk=l(" / "),Yn=a("code"),xk=l("-n"),Ak=l(" : number of lines to show from end of the log (defaults to "),Gn=a("code"),Uk=l("all"),Yk=l(")"),Gk=d(),W=a("li"),Kn=a("code"),Kk=l("--since"),Wk=l(" : show logs "),Wn=a("em"),Bk=l("since"),Fk=l(" timestamp ("),Bn=a("code"),Vk=l("2013-01-02T13:37:00Z"),qk=l(") or relative ("),Fn=a("code"),zk=l("42m"),$k=l(")"),jk=d(),it=a("li"),Vn=a("code"),Xk=l("--until"),Qk=l(" : show logs "),qn=a("em"),Zk=l("before"),Jk=l(" timestamp or relative"),Wp=d(),hs=a("h3"),gk=l("docker inspect"),Bp=d(),_s=a("p"),e5=l(`Returns detailed information about docker objects.
Objects can be images, containers, networks, volumes, etc.`),Fp=d(),so=a("pre"),Vp=d(),ks=a("h3"),t5=l("docker ps"),qp=d(),Ds=a("p"),o5=l(`List all containers and information about them (such as ID, image name, ports etc.)
Defaults to listing running containers only.`),zp=d(),ao=a("pre"),$p=d(),ws=a("p"),l5=l("Useful options:"),jp=d(),R=a("ul"),nt=a("li"),zn=a("code"),s5=l("--all"),a5=l(" / "),$n=a("code"),r5=l("-a"),i5=l(" : lists all containers, including those that are not running"),n5=d(),he=a("li"),jn=a("code"),c5=l("--size"),d5=l(" / "),Xn=a("code"),f5=l("-s"),p5=l(" : include size of the container in output. Shows both size of container (i.e. writable layer), and "),Qn=a("code"),u5=l("virtual"),E5=l(" size of total disk-space used, i.e. container + image."),m5=d(),Os=a("li"),Zn=a("code"),v5=l("--no-trunc"),h5=l(" : prevent truncation in table output"),_5=d(),_e=a("li"),Jn=a("code"),k5=l("--filter"),D5=l(" / "),gn=a("code"),w5=l("-f"),O5=l(" : filters the output with key-value pairs. E.g. "),ec=a("code"),y5=l('docker ps -f "name=mysparkcontainer"'),b5=l("."),C5=d(),H=a("li"),tc=a("code"),I5=l("--format"),L5=l(" : formats the output using Go template. Placeholder information include "),oc=a("code"),P5=l(".ID"),R5=l(", "),lc=a("code"),T5=l(".Image"),N5=l(", "),sc=a("code"),M5=l(".Names"),H5=l(" etc."),ro=a("ul"),ct=a("li"),ac=a("code"),S5=l('docker ps --format "{{.ID}}: {{.Name}}"'),x5=l(" will print out "),rc=a("code"),A5=l("abcdef: name1"),U5=l(" etc."),Y5=d(),ys=a("li"),ic=a("code"),G5=l('docker ps --format "table {{.ID}}\\t{{.Name}}"'),K5=l(" will print the output in a table with header row."),Xp=d(),bs=a("h3"),W5=l("docker stats"),Qp=d(),Cs=a("p"),B5=l(`Display live info about containers\u2019 resource usage (kind of like Window\u2019s task manager).
Defaults to only showing running containers.`),Zp=d(),io=a("pre"),Jp=d(),Is=a("p"),F5=l("Useful options:"),gp=d(),B=a("ul"),dt=a("li"),nc=a("code"),V5=l("--all"),q5=l(" / "),cc=a("code"),z5=l("-a"),$5=l(" : lists all containers, including those that are not running"),j5=d(),Ls=a("li"),dc=a("code"),X5=l("--no-trunc"),Q5=l(" : Prevent truncation in table output"),Z5=d(),Ps=a("li"),fc=a("code"),J5=l("--no-stream"),g5=l(" : get only a \u2018snapshot\u2019 of the current stats"),e6=d(),Rs=a("li"),pc=a("code"),t6=l("--format"),o6=l(" : formats the output using Go template."),eu=d(),tu=a("hr"),ou=d(),Ts=a("h2"),l6=l("networking"),lu=d(),Ns=a("p"),s6=l("Docker containers can communicate with each other, and they can also communicate with non-Docker programs in your host machine network."),su=d(),Ms=a("p"),a6=l("There are several types of network drivers that help you connect your containers, programs, nodes:"),au=d(),_=a("ul"),no=a("li"),uc=a("code"),r6=l("bridge"),i6=l(" : (default) Docker managed network, isolated from host machine; used when connecting multiple containers on the "),Ec=a("em"),n6=l("same Docker host"),c6=d(),ft=a("li"),mc=a("code"),d6=l("host"),f6=l(" : (linux only) shares host networking (i.e. ip address) with the container; container which binds to port 80 will be accessible on port 80 on "),vc=a("em"),p6=l("host\u2019s"),u6=l(" IP address"),E6=d(),Hs=a("li"),hc=a("code"),m6=l("overlay"),v6=l(" : connects multiple Docker daemons together; used when trying to connect containers running on separate Docker host machine"),h6=d(),Ss=a("li"),_c=a("code"),_6=l("ipvlan"),k6=l(" : attaches your containers to the host machine\u2019s network, giving the containers their own IP address in the network; use when you want to connect the container to host machine\u2019s network"),D6=d(),xs=a("li"),kc=a("code"),w6=l("macvlan"),O6=l(" : assigns a new mac address so it appears as a physical device in your network; use for linking with legacy applications that require containers to appear as physical device"),y6=d(),As=a("li"),Dc=a("code"),b6=l("none"),C6=l(" : disables all networking for the container"),I6=d(),wc=a("li"),L6=l("third party network plugins can also be intalled from Docker Hub / other vendors"),ru=d(),iu=a("hr"),nu=d(),Us=a("h2"),P6=l("storage"),cu=d(),Ys=a("p"),R6=l("By default, Docker containers store data in the container\u2019s writable layer, using a storage driver, and is not persisted."),du=d(),Gs=a("p"),T6=l("5 types of storage in Docker to put container\u2019s data"),fu=d(),T=a("ul"),Oc=a("li"),N6=l("default container\u2019s writable layer : does not persist. optimized for space efficiency, so write speeds are lower than native."),M6=d(),yc=a("li"),H6=l("volumes : isolated, Docker managed, can store in remote drives, can share volumes with multiple containers"),S6=d(),bc=a("li"),x6=l("bind mount : directly mount a specific directory on host machine to the container"),A6=d(),Cc=a("li"),U6=l("tmpfs mount (linux only) : store container data in memory, not persistent, but faster performance since its using RAM"),Y6=d(),Ic=a("li"),G6=l("npipe mount (named pipes) (Windows only) : used to store data in memory for Windows"),this.h()},l(e){Se=r(e,"H1",{});var n=i(Se);Hu=s(n,Kb),n.forEach(o),Fc=f(e),ho=r(e,"P",{});var x7=i(ho);Su=s(x7,"Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),x7.forEach(o),Vc=f(e),_o=r(e,"P",{});var A7=i(_o);xu=s(A7,`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),A7.forEach(o),qc=f(e),ko=r(e,"H2",{});var U7=i(ko);Au=s(U7,"key concepts"),U7.forEach(o),zc=f(e),Do=r(e,"H3",{});var Y7=i(Do);Uu=s(Y7,"Docker images"),Y7.forEach(o),$c=f(e),wo=r(e,"P",{});var G7=i(wo);Yu=s(G7,`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),G7.forEach(o),jc=f(e),Oo=r(e,"P",{});var K7=i(Oo);Gu=s(K7,"Images are often build on top of one another"),K7.forEach(o),Xc=f(e),xe=r(e,"UL",{});var pu=i(xe);z=r(pu,"LI",{});var pt=i(z);Ku=s(pt,"e.g. you start with "),aa=r(pt,"CODE",{});var W7=i(aa);Wu=s(W7,"ubuntu"),W7.forEach(o),Bu=s(pt," image, install "),ra=r(pt,"CODE",{});var B7=i(ra);Fu=s(B7,"python"),B7.forEach(o),Vu=s(pt," in that ubuntu image, install "),ia=r(pt,"CODE",{});var F7=i(ia);qu=s(F7,"pytorch"),F7.forEach(o),zu=s(pt," package, install pretrained models."),pt.forEach(o),$u=f(pu),kt=r(pu,"LI",{});var uu=i(kt);ju=s(uu,"or you can start with a published "),na=r(uu,"CODE",{});var V7=i(na);Xu=s(V7,"python"),V7.forEach(o),Qu=s(uu," image, and install your packages there."),uu.forEach(o),pu.forEach(o),Qc=f(e),yo=r(e,"P",{});var q7=i(yo);Zu=s(q7,"Published images are available for download in Docker registries."),q7.forEach(o),Zc=f(e),bo=r(e,"H4",{});var z7=i(bo);Ju=s(z7,"Dockerfile"),z7.forEach(o),Jc=f(e),Dt=r(e,"P",{});var K6=i(Dt);ca=r(K6,"CODE",{});var $7=i(ca);gu=s($7,"Dockerfile"),$7.forEach(o),eE=s(K6,"s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),K6.forEach(o),gc=f(e),Co=r(e,"H3",{});var j7=i(Co);tE=s(j7,"Docker containers"),j7.forEach(o),ed=f(e),Ae=r(e,"P",{});var Eu=i(Ae);oE=s(Eu,`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),da=r(Eu,"CODE",{});var X7=i(da);lE=s(X7,"nodejs"),X7.forEach(o),sE=s(Eu," image, but one exposes port 8888 and another exposes port 8899."),Eu.forEach(o),td=f(e),Io=r(e,"H3",{});var Q7=i(Io);aE=s(Q7,"Docker registries"),Q7.forEach(o),od=f(e),Lo=r(e,"P",{});var Z7=i(Lo);rE=s(Z7,"Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),Z7.forEach(o),ld=f(e),Po=r(e,"H3",{});var J7=i(Po);iE=s(J7,"Docker daemon"),J7.forEach(o),sd=f(e),Ue=r(e,"P",{});var mu=i(Ue);nE=s(mu,"This is the underlying "),fa=r(mu,"CODE",{});var g7=i(fa);cE=s(g7,"dockerd"),g7.forEach(o),dE=s(mu," process that helps you build images and run containers. It will listen for Docker API requests"),mu.forEach(o),ad=f(e),Ro=r(e,"H3",{});var eD=i(Ro);fE=s(eD,"Docker client"),eD.forEach(o),rd=f(e),S=r(e,"P",{});var ut=i(S);pE=s(ut,"The docker client "),pa=r(ut,"CODE",{});var tD=i(pa);uE=s(tD,"docker"),tD.forEach(o),EE=s(ut," is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),ua=r(ut,"CODE",{});var oD=i(ua);mE=s(oD,"docker"),oD.forEach(o),vE=s(ut," command sends Docker API requests to "),Ea=r(ut,"CODE",{});var lD=i(Ea);hE=s(lD,"dockerd"),lD.forEach(o),_E=s(ut,"."),ut.forEach(o),id=f(e),To=r(e,"H3",{});var sD=i(To);kE=s(sD,"Docker compose"),sD.forEach(o),nd=f(e),Ye=r(e,"P",{});var vu=i(Ye);DE=s(vu,"Docker compose is a tool that helps with running "),ma=r(vu,"EM",{});var aD=i(ma);wE=s(aD,"multi-container"),aD.forEach(o),OE=s(vu," Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),vu.forEach(o),cd=f(e),No=r(e,"P",{});var rD=i(No);yE=s(rD,"For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),rD.forEach(o),dd=f(e),Mo=r(e,"H4",{});var iD=i(Mo);bE=s(iD,"Difference between Kubernetes"),iD.forEach(o),fd=f(e),Ge=r(e,"P",{});var hu=i(Ge);CE=s(hu,"Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),va=r(hu,"EM",{});var nD=i(va);IE=s(nD,"single-node"),nD.forEach(o),LE=s(hu,", whereas Kubernetes is a full multi-node container manager."),hu.forEach(o),pd=f(e),Ho=r(e,"P",{});var cD=i(Ho);PE=s(cD,"Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),cD.forEach(o),ud=f(e),Ed=r(e,"HR",{}),md=f(e),So=r(e,"H2",{});var dD=i(So);RE=s(dD,"Dockerfile"),dD.forEach(o),vd=f(e),xo=r(e,"H3",{});var fD=i(xo);TE=s(fD,"Commands"),fD.forEach(o),hd=f(e),Ao=r(e,"H4",{});var pD=i(Ao);NE=s(pD,"FROM"),pD.forEach(o),_d=f(e),Ke=r(e,"P",{});var _u=i(Ke);ME=s(_u,"All dockerfile starts with the "),ha=r(_u,"CODE",{});var uD=i(ha);HE=s(uD,"FROM"),uD.forEach(o),SE=s(_u," command. It pulls the base image from Dockerhub to start to build your image."),_u.forEach(o),kd=f(e),wt=r(e,"PRE",{class:!0});var h0=i(wt);h0.forEach(o),Dd=f(e),Uo=r(e,"H4",{});var ED=i(Uo);xE=s(ED,"RUN"),ED.forEach(o),wd=f(e),Yo=r(e,"P",{});var mD=i(Yo);AE=s(mD,"Runs a command or executable. It has two forms"),mD.forEach(o),Od=f(e),Ot=r(e,"PRE",{class:!0});var _0=i(Ot);_0.forEach(o),yd=f(e),Go=r(e,"H4",{});var vD=i(Go);UE=s(vD,"CMD"),vD.forEach(o),bd=f(e),Ko=r(e,"P",{});var hD=i(Ko);YE=s(hD,"Provides defaults for an executing container. The arguments will be appended to ENTRYPOINT."),hD.forEach(o),Cd=f(e),yt=r(e,"PRE",{class:!0});var k0=i(yt);k0.forEach(o),Id=f(e),Wo=r(e,"H4",{});var _D=i(Wo);GE=s(_D,"ENTRYPOINT"),_D.forEach(o),Ld=f(e),Bo=r(e,"P",{});var kD=i(Bo);KE=s(kD,`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),kD.forEach(o),Pd=f(e),bt=r(e,"PRE",{class:!0});var D0=i(bt);D0.forEach(o),Rd=f(e),Fo=r(e,"H4",{});var DD=i(Fo);WE=s(DD,"COPY"),DD.forEach(o),Td=f(e),Vo=r(e,"P",{});var wD=i(Vo);BE=s(wD,"Copies file from your native host into the container image."),wD.forEach(o),Nd=f(e),Ct=r(e,"PRE",{class:!0});var w0=i(Ct);w0.forEach(o),Md=f(e),J=r(e,"P",{});var Ks=i(J);FE=s(Ks,"Multiple "),_a=r(Ks,"CODE",{});var OD=i(_a);VE=s(OD,"<src>"),OD.forEach(o),qE=s(Ks," can be specified, and the last argument will be treated as the "),ka=r(Ks,"CODE",{});var yD=i(ka);zE=s(yD,"<dest>"),yD.forEach(o),$E=s(Ks,"."),Ks.forEach(o),Hd=f(e),We=r(e,"P",{});var ku=i(We);jE=s(ku,"All "),Da=r(ku,"CODE",{});var bD=i(Da);XE=s(bD,"<src>"),bD.forEach(o),QE=s(ku," relative paths must be inside context of the build!"),ku.forEach(o),Sd=f(e),qo=r(e,"H4",{});var CD=i(qo);ZE=s(CD,"ADD"),CD.forEach(o),xd=f(e),zo=r(e,"P",{});var ID=i(zo);JE=s(ID,"Copies file from your native host into the container image."),ID.forEach(o),Ad=f(e),It=r(e,"PRE",{class:!0});var O0=i(It);O0.forEach(o),Ud=f(e),Be=r(e,"P",{});var Du=i(Be);gE=s(Du,"Compared to COPY, "),wa=r(Du,"CODE",{});var LD=i(wa);em=s(LD,"ADD"),LD.forEach(o),tm=s(Du," has added utilities like:"),Du.forEach(o),Yd=f(e),g=r(e,"UL",{});var Ws=i(g);Oa=r(Ws,"LI",{});var PD=i(Oa);om=s(PD,"being able to download files from URLs then copying them into the image"),PD.forEach(o),lm=f(Ws),Lt=r(Ws,"LI",{});var wu=i(Lt);sm=s(wu,"extracting contents of "),ya=r(wu,"CODE",{});var RD=i(ya);am=s(RD,".tar"),RD.forEach(o),rm=s(wu," files before copying into image"),wu.forEach(o),im=f(Ws),ba=r(Ws,"LI",{});var TD=i(ba);nm=s(TD,"adding contents from a git repo"),TD.forEach(o),Ws.forEach(o),Gd=f(e),Pt=r(e,"P",{});var W6=i(Pt);Ca=r(W6,"STRONG",{});var ND=i(Ca);cm=s(ND,"tip: use COPY as default, unless you need the additional features of ADD."),ND.forEach(o),dm=s(W6," This is to prevent unwanted side effects!"),W6.forEach(o),Kd=f(e),ee=r(e,"P",{});var Bs=i(ee);fm=s(Bs,"Multiple "),Ia=r(Bs,"CODE",{});var MD=i(Ia);pm=s(MD,"<src>"),MD.forEach(o),um=s(Bs," can be specified, and the last argument will be treated as the "),La=r(Bs,"CODE",{});var HD=i(La);Em=s(HD,"<dest>"),HD.forEach(o),mm=s(Bs,"."),Bs.forEach(o),Wd=f(e),Fe=r(e,"P",{});var Ou=i(Fe);vm=s(Ou,"All "),Pa=r(Ou,"CODE",{});var SD=i(Pa);hm=s(SD,"<src>"),SD.forEach(o),_m=s(Ou," relative paths must be inside context of the build!"),Ou.forEach(o),Bd=f(e),$o=r(e,"H4",{});var xD=i($o);km=s(xD,"ENV"),xD.forEach(o),Fd=f(e),jo=r(e,"P",{});var AD=i(jo);Dm=s(AD,"Sets an environment variable"),AD.forEach(o),Vd=f(e),Rt=r(e,"PRE",{class:!0});var y0=i(Rt);y0.forEach(o),qd=f(e),Xo=r(e,"H4",{});var UD=i(Xo);wm=s(UD,"EXPOSE"),UD.forEach(o),zd=f(e),Qo=r(e,"P",{});var YD=i(Qo);Om=s(YD,"Instructs Docker that container should listen on specified network ports at runtime."),YD.forEach(o),$d=f(e),Tt=r(e,"PRE",{class:!0});var b0=i(Tt);b0.forEach(o),jd=f(e),$=r(e,"P",{});var co=i($);Ra=r(co,"STRONG",{});var GD=i(Ra);ym=s(GD,"Ports are not automatically published"),GD.forEach(o),bm=s(co,`, and this command is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),Ta=r(co,"CODE",{});var KD=i(Ta);Cm=s(KD,"-P"),KD.forEach(o),Im=s(co," flag (which maps exposed ports in container to random ports in native host machine), or "),Na=r(co,"CODE",{});var WD=i(Na);Lm=s(WD,"-p"),WD.forEach(o),Pm=s(co," to explicitly map ports from containers to your localhost."),co.forEach(o),Xd=f(e),Zo=r(e,"H4",{});var BD=i(Zo);Rm=s(BD,"VOLUME"),BD.forEach(o),Qd=f(e),Jo=r(e,"P",{});var FD=i(Jo);Tm=s(FD,`Marks the directory(s) within the container as an external drive from native host or other containers.
This allows files to be accessed from outside the containers.`),FD.forEach(o),Zd=f(e),Nt=r(e,"PRE",{class:!0});var C0=i(Nt);C0.forEach(o),Jd=f(e),Ve=r(e,"P",{});var yu=i(Ve);Nm=s(yu,"Note that where this (container) directory maps to in your native host is "),Ma=r(yu,"STRONG",{});var VD=i(Ma);Mm=s(VD,"specified when you build or run the container"),VD.forEach(o),Hm=s(yu,"."),yu.forEach(o),gd=f(e),go=r(e,"H4",{});var qD=i(go);Sm=s(qD,"WORKDIR"),qD.forEach(o),ef=f(e),k=r(e,"P",{});var F=i(k);xm=s(F,"Sets working directory for any "),Ha=r(F,"CODE",{});var zD=i(Ha);Am=s(zD,"RUN"),zD.forEach(o),Um=s(F,", "),Sa=r(F,"CODE",{});var $D=i(Sa);Ym=s($D,"CMD"),$D.forEach(o),Gm=s(F,", "),xa=r(F,"CODE",{});var jD=i(xa);Km=s(jD,"ENTRYPOINT"),jD.forEach(o),Wm=s(F,", "),Aa=r(F,"CODE",{});var XD=i(Aa);Bm=s(XD,"COPY"),XD.forEach(o),Fm=s(F,", "),Ua=r(F,"CODE",{});var QD=i(Ua);Vm=s(QD,"ADD"),QD.forEach(o),qm=s(F," instructions that follows."),F.forEach(o),tf=f(e),Mt=r(e,"PRE",{class:!0});var I0=i(Mt);I0.forEach(o),of=f(e),qe=r(e,"P",{});var bu=i(qe);zm=s(bu,"Multiple "),Ya=r(bu,"CODE",{});var ZD=i(Ya);$m=s(ZD,"WORKDIR"),ZD.forEach(o),jm=s(bu," can be used in a dockerfile."),bu.forEach(o),lf=f(e),te=r(e,"P",{});var Fs=i(te);Xm=s(Fs,"If not specified, default directory is "),Ga=r(Fs,"CODE",{});var JD=i(Ga);Qm=s(JD,"/"),JD.forEach(o),Zm=s(Fs,`.
But if you are pulling from an image, chances are `),Ka=r(Fs,"CODE",{});var gD=i(Ka);Jm=s(gD,"WORKDIR"),gD.forEach(o),gm=s(Fs," already been set in your base image and it will be brought over."),Fs.forEach(o),sf=f(e),el=r(e,"P",{});var e8=i(el);Ht=r(e8,"STRONG",{});var Cu=i(Ht);e1=s(Cu,"tip: explicitly set "),Wa=r(Cu,"CODE",{});var t8=i(Wa);t1=s(t8,"WORKDIR"),t8.forEach(o),o1=s(Cu," to prevent unintended operations in unknown dirs"),Cu.forEach(o),e8.forEach(o),af=f(e),oe=r(e,"P",{});var Vs=i(oe);l1=s(Vs,"It is also possible to resolve env variables previously set by "),Ba=r(Vs,"CODE",{});var o8=i(Ba);s1=s(o8,"ENV"),o8.forEach(o),a1=s(Vs,", e.g. "),Fa=r(Vs,"CODE",{});var l8=i(Fa);r1=s(l8,"WORKDIR $DIRPATH_ENV_VAR"),l8.forEach(o),i1=s(Vs,"."),Vs.forEach(o),rf=f(e),tl=r(e,"H4",{});var s8=i(tl);n1=s(s8,"ARG"),s8.forEach(o),nf=f(e),le=r(e,"P",{});var qs=i(le);c1=s(qs,"Defines a variable that users can pass values into during "),Va=r(qs,"CODE",{});var a8=i(Va);d1=s(a8,"docker build"),a8.forEach(o),f1=s(qs," by using "),qa=r(qs,"CODE",{});var r8=i(qa);p1=s(r8,"--build-arg <argname>=<value>"),r8.forEach(o),u1=s(qs," flag."),qs.forEach(o),cf=f(e),St=r(e,"PRE",{class:!0});var L0=i(St);L0.forEach(o),df=f(e),j=r(e,"P",{});var fo=i(j);za=r(fo,"CODE",{});var i8=i(za);E1=s(i8,"ENV"),i8.forEach(o),m1=s(fo," variables will overwrite "),$a=r(fo,"CODE",{});var n8=i($a);v1=s(n8,"ARG"),n8.forEach(o),h1=s(fo," variables if they are the same name (at the point where the "),ja=r(fo,"CODE",{});var c8=i(ja);_1=s(c8,"ENV"),c8.forEach(o),k1=s(fo," variable is defined)."),fo.forEach(o),ff=f(e),ol=r(e,"H4",{});var d8=i(ol);D1=s(d8,"ONBUILD"),d8.forEach(o),pf=f(e),ll=r(e,"P",{});var f8=i(ll);w1=s(f8,"Adds a trigger to the image that will execute dockerfile instructions when the current image is used as the base for another build."),f8.forEach(o),uf=f(e),xt=r(e,"PRE",{class:!0});var P0=i(xt);P0.forEach(o),Ef=f(e),sl=r(e,"P",{});var p8=i(sl);O1=s(p8,"This command is usful when when you are building a base image that will be distributed to other people, and instructions that depend on other people\u2019s files needs to be run. Example, you could add:"),p8.forEach(o),mf=f(e),At=r(e,"PRE",{class:!0});var R0=i(At);R0.forEach(o),vf=f(e),se=r(e,"P",{});var zs=i(se);y1=s(zs,"The instructions specified are triggered "),Xa=r(zs,"EM",{});var u8=i(Xa);b1=s(u8,"immediately"),u8.forEach(o),C1=s(zs," after the "),Qa=r(zs,"CODE",{});var E8=i(Qa);I1=s(E8,"FROM"),E8.forEach(o),L1=s(zs," instruction in the child image."),zs.forEach(o),hf=f(e),Ut=r(e,"P",{});var B6=i(Ut);Za=r(B6,"CODE",{});var m8=i(Za);P1=s(m8,"ONBUILD"),m8.forEach(o),R1=s(B6," triggers are not inherited by children images."),B6.forEach(o),_f=f(e),al=r(e,"H4",{});var v8=i(al);T1=s(v8,"STOPSIGNAL"),v8.forEach(o),kf=f(e),rl=r(e,"P",{});var h8=i(rl);N1=s(h8,"Sets the system call signal that will cause the container to exit."),h8.forEach(o),Df=f(e),Yt=r(e,"PRE",{class:!0});var T0=i(Yt);T0.forEach(o),wf=f(e),ae=r(e,"UL",{});var $s=i(ae);il=r($s,"LI",{});var F6=i(il);M1=s(F6,"Default is "),Ja=r(F6,"CODE",{});var _8=i(Ja);H1=s(_8,"SIGTERM"),_8.forEach(o),F6.forEach(o),S1=f($s),Le=r($s,"LI",{});var js=i(Le);x1=s(js,"Can be in "),ga=r(js,"CODE",{});var k8=i(ga);A1=s(k8,"SIG<NAME>"),k8.forEach(o),U1=s(js," format (e.g. "),er=r(js,"CODE",{});var D8=i(er);Y1=s(D8,"SIGKILL"),D8.forEach(o),G1=s(js,")"),js.forEach(o),K1=f($s),Gt=r($s,"LI",{});var Iu=i(Gt);W1=s(Iu,"Can be an unassigned number in kernel\u2019s syscall table (e.g. "),tr=r(Iu,"CODE",{});var w8=i(tr);B1=s(w8,"9"),w8.forEach(o),F1=s(Iu,")"),Iu.forEach(o),$s.forEach(o),Of=f(e),nl=r(e,"H4",{});var O8=i(nl);V1=s(O8,"HEALTHCHECK"),O8.forEach(o),yf=f(e),cl=r(e,"P",{});var y8=i(cl);q1=s(y8,"Specifies a command to be run inside the container to check container\u2019s health."),y8.forEach(o),bf=f(e),Kt=r(e,"PRE",{class:!0});var N0=i(Kt);N0.forEach(o),Cf=f(e),Wt=r(e,"P",{});var V6=i(Wt);or=r(V6,"CODE",{});var b8=i(or);z1=s(b8,"OPTIONS"),b8.forEach(o),$1=s(V6," include:"),V6.forEach(o),If=f(e),x=r(e,"UL",{});var Et=i(x);ze=r(Et,"LI",{});var Lc=i(ze);lr=r(Lc,"CODE",{});var C8=i(lr);j1=s(C8,"--interval=DURATION"),C8.forEach(o),X1=s(Lc," (default "),sr=r(Lc,"CODE",{});var I8=i(sr);Q1=s(I8,"30s"),I8.forEach(o),Z1=s(Lc,")"),Lc.forEach(o),J1=f(Et),$e=r(Et,"LI",{});var Pc=i($e);ar=r(Pc,"CODE",{});var L8=i(ar);g1=s(L8,"--timeout=DURATION"),L8.forEach(o),ev=s(Pc," (default "),rr=r(Pc,"CODE",{});var P8=i(rr);tv=s(P8,"30s"),P8.forEach(o),ov=s(Pc,")"),Pc.forEach(o),lv=f(Et),je=r(Et,"LI",{});var Rc=i(je);ir=r(Rc,"CODE",{});var R8=i(ir);sv=s(R8,"--retries=N"),R8.forEach(o),av=s(Rc," (default "),nr=r(Rc,"CODE",{});var T8=i(nr);rv=s(T8,"3"),T8.forEach(o),iv=s(Rc,")"),Rc.forEach(o),nv=f(Et),Xe=r(Et,"LI",{});var Tc=i(Xe);cr=r(Tc,"CODE",{});var N8=i(cr);cv=s(N8,"--start-period=DURATION"),N8.forEach(o),dv=s(Tc," (default "),dr=r(Tc,"CODE",{});var M8=i(dr);fv=s(M8,"0s"),M8.forEach(o),pv=s(Tc,")"),Tc.forEach(o),Et.forEach(o),Lf=f(e),D=r(e,"P",{});var V=i(D);uv=s(V,"A container that has "),fr=r(V,"CODE",{});var H8=i(fr);Ev=s(H8,"HEALTHCHECK"),H8.forEach(o),mv=s(V," specified will have a "),pr=r(V,"EM",{});var S8=i(pr);vv=s(S8,"health status"),S8.forEach(o),hv=s(V," that can take 3 possible states: "),ur=r(V,"CODE",{});var x8=i(ur);_v=s(x8,"starting"),x8.forEach(o),kv=s(V," | "),Er=r(V,"CODE",{});var A8=i(Er);Dv=s(A8,"healthy"),A8.forEach(o),wv=s(V," | "),mr=r(V,"CODE",{});var U8=i(mr);Ov=s(U8,"unhealthy"),U8.forEach(o),yv=s(V,"."),V.forEach(o),Pf=f(e),re=r(e,"P",{});var Xs=i(re);bv=s(Xs,"Whenever a health check passes, health status changes to "),vr=r(Xs,"CODE",{});var Y8=i(vr);Cv=s(Y8,"healthy"),Y8.forEach(o),Iv=s(Xs,". After a number of consecutive failures, health status changes to "),hr=r(Xs,"CODE",{});var G8=i(hr);Lv=s(G8,"unhealthy"),G8.forEach(o),Pv=s(Xs,"."),Xs.forEach(o),Rf=f(e),ie=r(e,"P",{});var Qs=i(ie);Rv=s(Qs,`Health checks are run after every interval.
Health checks are considered failed when commands runs for longer than timeout.
When consecutive failures reaches max retries, or command exits with non zero status code `),_r=r(Qs,"CODE",{});var K8=i(_r);Tv=s(K8,"0"),K8.forEach(o),Nv=s(Qs,", "),kr=r(Qs,"EM",{});var W8=i(kr);Mv=s(W8,"health status"),W8.forEach(o),Hv=s(Qs," will change to unhealthy."),Qs.forEach(o),Tf=f(e),dl=r(e,"H4",{});var B8=i(dl);Sv=s(B8,"SHELL"),B8.forEach(o),Nf=f(e),ne=r(e,"P",{});var Zs=i(ne);xv=s(Zs,"Specifies the default shell used for shell form of commands. Default is set to "),Dr=r(Zs,"CODE",{});var F8=i(Dr);Av=s(F8,'["/bin/sh", "-c"]'),F8.forEach(o),Uv=s(Zs," for Linux containers and "),wr=r(Zs,"CODE",{});var V8=i(wr);Yv=s(V8,'["cmd", "/S", "/C"]'),V8.forEach(o),Gv=s(Zs," for Windows containers."),Zs.forEach(o),Mf=f(e),Bt=r(e,"PRE",{class:!0});var M0=i(Bt);M0.forEach(o),Hf=f(e),fl=r(e,"H4",{});var q8=i(fl);Kv=s(q8,"USER"),q8.forEach(o),Sf=f(e),pl=r(e,"P",{});var z8=i(pl);Wv=s(z8,"Sets the username/UID to use for the remainder of the Docker build stage."),z8.forEach(o),xf=f(e),Ft=r(e,"PRE",{class:!0});var H0=i(Ft);H0.forEach(o),Af=f(e),ul=r(e,"P",{});var $8=i(ul);Bv=s($8,`This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),$8.forEach(o),Uf=f(e),El=r(e,"H4",{});var j8=i(El);Fv=s(j8,"LABEL"),j8.forEach(o),Yf=f(e),Qe=r(e,"P",{});var Lu=i(Qe);Vv=s(Lu,"Adds metadata to an image and are inherited by child images. You can view an image\u2019s labels using "),Or=r(Lu,"CODE",{});var X8=i(Or);qv=s(X8,"docker image inspect"),X8.forEach(o),zv=s(Lu,"."),Lu.forEach(o),Gf=f(e),Vt=r(e,"PRE",{class:!0});var S0=i(Vt);S0.forEach(o),Kf=f(e),ml=r(e,"H3",{});var Q8=i(ml);$v=s(Q8,"Environment Replacement"),Q8.forEach(o),Wf=f(e),Ze=r(e,"P",{});var Pu=i(Ze);jv=s(Pu,"Some Dockerfile instructions are able to read environment variables created by "),yr=r(Pu,"CODE",{});var Z8=i(yr);Xv=s(Z8,"ENV"),Z8.forEach(o),Qv=s(Pu," commands, and replace them with the values that those environment variables hold."),Pu.forEach(o),Bf=f(e),ce=r(e,"P",{});var Js=i(ce);Zv=s(Js,"The syntax is "),br=r(Js,"CODE",{});var J8=i(br);Jv=s(J8,"$variable_name"),J8.forEach(o),gv=s(Js," or "),Cr=r(Js,"CODE",{});var g8=i(Cr);eh=s(g8,"${variable_name}"),g8.forEach(o),th=s(Js," within a Dockerfile."),Js.forEach(o),Ff=f(e),Je=r(e,"UL",{});var Ru=i(Je);de=r(Ru,"LI",{});var po=i(de);Ir=r(po,"CODE",{});var ew=i(Ir);oh=s(ew,"${variable:-word}"),ew.forEach(o),lh=s(po," to set "),Lr=r(po,"CODE",{});var tw=i(Lr);sh=s(tw,"word"),tw.forEach(o),ah=s(po," as default value when "),Pr=r(po,"CODE",{});var ow=i(Pr);rh=s(ow,"variable"),ow.forEach(o),ih=s(po," is not set"),po.forEach(o),nh=f(Ru),O=r(Ru,"LI",{});var Q=i(O);Rr=r(Q,"CODE",{});var lw=i(Rr);ch=s(lw,"${variable:+word}"),lw.forEach(o),dh=s(Q," to set "),Tr=r(Q,"CODE",{});var sw=i(Tr);fh=s(sw,"word"),sw.forEach(o),ph=s(Q," as "),Nr=r(Q,"CODE",{});var aw=i(Nr);uh=s(aw,"variable"),aw.forEach(o),Eh=s(Q," when "),Mr=r(Q,"CODE",{});var rw=i(Mr);mh=s(rw,"variable"),rw.forEach(o),vh=s(Q," has already been set, otherwise "),Hr=r(Q,"CODE",{});var iw=i(Hr);hh=s(iw,"variable"),iw.forEach(o),_h=s(Q," will be empty string."),Q.forEach(o),Ru.forEach(o),Vf=f(e),m=r(e,"P",{});var v=i(m);kh=s(v,"Dockerfile instructions that support environment variables are: "),Sr=r(v,"CODE",{});var nw=i(Sr);Dh=s(nw,"ADD"),nw.forEach(o),wh=s(v,", "),xr=r(v,"CODE",{});var cw=i(xr);Oh=s(cw,"COPY"),cw.forEach(o),yh=s(v,", "),Ar=r(v,"CODE",{});var dw=i(Ar);bh=s(dw,"ENV"),dw.forEach(o),Ch=s(v,", "),Ur=r(v,"CODE",{});var fw=i(Ur);Ih=s(fw,"EXPOSE"),fw.forEach(o),Lh=s(v,", "),Yr=r(v,"CODE",{});var pw=i(Yr);Ph=s(pw,"FROM"),pw.forEach(o),Rh=s(v,", "),Gr=r(v,"CODE",{});var uw=i(Gr);Th=s(uw,"LABEL"),uw.forEach(o),Nh=s(v,", "),Kr=r(v,"CODE",{});var Ew=i(Kr);Mh=s(Ew,"STOPSIGNAL"),Ew.forEach(o),Hh=s(v,", "),Wr=r(v,"CODE",{});var mw=i(Wr);Sh=s(mw,"USER"),mw.forEach(o),xh=s(v,", "),Br=r(v,"CODE",{});var vw=i(Br);Ah=s(vw,"VOLUME"),vw.forEach(o),Uh=s(v,", "),Fr=r(v,"CODE",{});var hw=i(Fr);Yh=s(hw,"WORKDIR"),hw.forEach(o),Gh=s(v,", "),Vr=r(v,"CODE",{});var _w=i(Vr);Kh=s(_w,"ONBUILD"),_w.forEach(o),Wh=s(v,"."),v.forEach(o),qf=f(e),qt=r(e,"PRE",{class:!0});var x0=i(qt);x0.forEach(o),zf=f(e),vl=r(e,"H3",{});var kw=i(vl);qr=r(kw,"CODE",{});var Dw=i(qr);Bh=s(Dw,".dockerignore"),Dw.forEach(o),kw.forEach(o),$f=f(e),A=r(e,"P",{});var mt=i(A);Fh=s(mt,"Similar to "),zr=r(mt,"CODE",{});var ww=i(zr);Vh=s(ww,".gitignore"),ww.forEach(o),qh=s(mt,", this file contains a list of files and directories that docker should "),$r=r(mt,"STRONG",{});var Ow=i($r);zh=s(Ow,"exclude"),Ow.forEach(o),$h=s(mt," from the "),jr=r(mt,"EM",{});var yw=i(jr);jh=s(yw,"context"),yw.forEach(o),Xh=s(mt," of a docker build."),mt.forEach(o),jf=f(e),hl=r(e,"P",{});var bw=i(hl);Qh=s(bw,"This is useful for preventing sending of large or sensitive files to docker daemon."),bw.forEach(o),Xf=f(e),Qf=r(e,"HR",{}),Zf=f(e),_l=r(e,"H2",{});var Cw=i(_l);Zh=s(Cw,"useful docker CLI commands"),Cw.forEach(o),Jf=f(e),kl=r(e,"H3",{});var Iw=i(kl);Jh=s(Iw,"docker run"),Iw.forEach(o),gf=f(e),Dl=r(e,"P",{});var Lw=i(Dl);gh=s(Lw,"Runs your images as isolated containers."),Lw.forEach(o),ep=f(e),zt=r(e,"PRE",{class:!0});var A0=i(zt);A0.forEach(o),tp=f(e),fe=r(e,"DETAILS",{});var gs=i(fe);Xr=r(gs,"SUMMARY",{});var Pw=i(Xr);e3=s(Pw,"details"),Pw.forEach(o),t3=f(gs),Qr=r(gs,"P",{});var Rw=i(Qr);y=r(Rw,"EM",{});var Z=i(y);Zr=r(Z,"CODE",{});var Tw=i(Zr);o3=s(Tw,"docker run"),Tw.forEach(o),l3=s(Z,"\u2019s "),Jr=r(Z,"CODE",{});var Nw=i(Jr);s3=s(Nw,"[OPTIONS]"),Nw.forEach(o),a3=s(Z," are specified "),gr=r(Z,"STRONG",{});var Mw=i(gr);r3=s(Mw,"before"),Mw.forEach(o),i3=s(Z," the image name, whilst arguments ("),ei=r(Z,"CODE",{});var Hw=i(ei);n3=s(Hw,"[ARG...]"),Hw.forEach(o),c3=s(Z,") for the command to be executed within the container is "),ti=r(Z,"STRONG",{});var Sw=i(ti);d3=s(Sw,"AFTER"),Sw.forEach(o),f3=s(Z," the image name and command."),Z.forEach(o),Rw.forEach(o),p3=f(gs),wl=r(gs,"P",{});var q6=i(wl);u3=s(q6,"for example: "),oi=r(q6,"CODE",{});var xw=i(oi);E3=s(xw,"docker run -ti ubuntu-image touch /path/to/file"),xw.forEach(o),q6.forEach(o),gs.forEach(o),op=f(e),$t=r(e,"P",{});var z6=i($t);li=r(z6,"CODE",{});var Aw=i(li);m3=s(Aw,"docker run"),Aw.forEach(o),v3=s(z6," is able to set many runtime options and override default settings defined by images, these include:"),z6.forEach(o),lp=f(e),b=r(e,"UL",{});var ke=i(b);si=r(ke,"LI",{});var Uw=i(si);h3=s(Uw,"running container in foreground or detached mode"),Uw.forEach(o),_3=f(ke),ai=r(ke,"LI",{});var Yw=i(ai);k3=s(Yw,"name of container"),Yw.forEach(o),D3=f(ke),ri=r(ke,"LI",{});var Gw=i(ri);w3=s(Gw,"network settings"),Gw.forEach(o),O3=f(ke),ii=r(ke,"LI",{});var Kw=i(ii);y3=s(Kw,"volume settings"),Kw.forEach(o),b3=f(ke),ni=r(ke,"LI",{});var Ww=i(ni);C3=s(Ww,"cpu / memory limits"),Ww.forEach(o),ke.forEach(o),sp=f(e),Ol=r(e,"P",{});var Bw=i(Ol);I3=s(Bw,"Common options to specify:"),Bw.forEach(o),ap=f(e),h=r(e,"UL",{});var N=i(h);yl=r(N,"LI",{});var $6=i(yl);ci=r($6,"CODE",{});var Fw=i(ci);L3=s(Fw,"--name"),Fw.forEach(o),P3=s($6," : assign a name to container (defaults to randomly generated words)"),$6.forEach(o),R3=f(N),X=r(N,"LI",{});var vt=i(X);di=r(vt,"CODE",{});var Vw=i(di);T3=s(Vw,"--detach"),Vw.forEach(o),N3=s(vt," / "),fi=r(vt,"CODE",{});var qw=i(fi);M3=s(qw,"-d"),qw.forEach(o),H3=s(vt," : run in detached mode so the terminal of the machine does not continouously stream container\u2019s "),pi=r(vt,"CODE",{});var zw=i(pi);S3=s(zw,"STDOUT"),zw.forEach(o),x3=s(vt," / "),ui=r(vt,"CODE",{});var $w=i(ui);A3=s($w,"STDERR"),$w.forEach(o),vt.forEach(o),U3=f(N),U=r(N,"LI",{});var Te=i(U);Ei=r(Te,"CODE",{});var jw=i(Ei);Y3=s(jw,"--interactive"),jw.forEach(o),G3=s(Te," / "),mi=r(Te,"CODE",{});var Xw=i(mi);K3=s(Xw,"-i"),Xw.forEach(o),W3=s(Te," : keep "),vi=r(Te,"CODE",{});var Qw=i(vi);B3=s(Qw,"STDIN"),Qw.forEach(o),F3=s(Te," open even if not attached (usually used with "),hi=r(Te,"CODE",{});var Zw=i(hi);V3=s(Zw,"-t"),Zw.forEach(o),q3=s(Te,")"),Te.forEach(o),z3=f(N),Y=r(N,"LI",{});var Ne=i(Y);_i=r(Ne,"CODE",{});var Jw=i(_i);$3=s(Jw,"--tty"),Jw.forEach(o),j3=s(Ne," / "),ki=r(Ne,"CODE",{});var gw=i(ki);X3=s(gw,"-t"),gw.forEach(o),Q3=s(Ne," : allocate pseudo-TTY to connect to container\u2019s "),Di=r(Ne,"CODE",{});var eO=i(Di);Z3=s(eO,"STDIN"),eO.forEach(o),J3=s(Ne," (usually used with "),wi=r(Ne,"CODE",{});var tO=i(wi);g3=s(tO,"-i"),tO.forEach(o),e_=s(Ne,")"),Ne.forEach(o),t_=f(N),ge=r(N,"LI",{});var Nc=i(ge);Oi=r(Nc,"CODE",{});var oO=i(Oi);o_=s(oO,"--expose"),oO.forEach(o),l_=s(Nc," / "),yi=r(Nc,"CODE",{});var lO=i(yi);s_=s(lO,"-p"),lO.forEach(o),a_=s(Nc," : expose container\u2019s ports to other containers and/or the host machine."),Nc.forEach(o),r_=f(N),bl=r(N,"LI",{});var j6=i(bl);bi=r(j6,"CODE",{});var sO=i(bi);i_=s(sO,"--mount"),sO.forEach(o),n_=s(j6," : mount volumes or directories to container"),j6.forEach(o),c_=f(N),G=r(N,"LI",{});var Me=i(G);Ci=r(Me,"CODE",{});var aO=i(Ci);d_=s(aO,"--volume"),aO.forEach(o),f_=s(Me," / "),Ii=r(Me,"CODE",{});var rO=i(Ii);p_=s(rO,"-v"),rO.forEach(o),u_=s(Me," : mount volumes or directories to container (use of "),Li=r(Me,"CODE",{});var iO=i(Li);E_=s(iO,"--mount"),iO.forEach(o),m_=s(Me," is recommended, "),jt=r(Me,"A",{href:!0,rel:!0});var nO=i(jt);v_=s(nO,"see differences here"),nO.forEach(o),h_=s(Me,")"),Me.forEach(o),N.forEach(o),rp=f(e),et=r(e,"DETAILS",{});var Tu=i(et);Pi=r(Tu,"SUMMARY",{});var cO=i(Pi);__=s(cO,"note on docker run documentation"),cO.forEach(o),k_=f(Tu),Pe=r(Tu,"P",{});var ea=i(Pe);D_=s(ea,"there are two pages for docker run, a "),Xt=r(ea,"A",{href:!0,rel:!0});var dO=i(Xt);w_=s(dO,"generic one"),dO.forEach(o),O_=s(ea," that lists all commands and "),Qt=r(ea,"A",{href:!0,rel:!0});var fO=i(Qt);y_=s(fO,"another one"),fO.forEach(o),b_=s(ea," that provides more explanation"),ea.forEach(o),Tu.forEach(o),ip=f(e),Cl=r(e,"H3",{});var pO=i(Cl);C_=s(pO,"docker build"),pO.forEach(o),np=f(e),pe=r(e,"P",{});var ta=i(pe);I_=s(ta,"Build Docker images from "),Ri=r(ta,"CODE",{});var uO=i(Ri);L_=s(uO,"dockerfile"),uO.forEach(o),P_=s(ta," and a "),Ti=r(ta,"EM",{});var EO=i(Ti);R_=s(EO,"context"),EO.forEach(o),T_=s(ta,"."),ta.forEach(o),cp=f(e),Zt=r(e,"PRE",{class:!0});var U0=i(Zt);U0.forEach(o),dp=f(e),C=r(e,"P",{});var De=i(C);N_=s(De,"A build\u2019s context is the (sub-)files and (sub-)directories located in the specified "),Ni=r(De,"CODE",{});var mO=i(Ni);M_=s(mO,"PATH"),mO.forEach(o),H_=s(De," or "),Mi=r(De,"CODE",{});var vO=i(Mi);S_=s(vO,"URL"),vO.forEach(o),x_=s(De,`.
By default, `),Hi=r(De,"CODE",{});var hO=i(Hi);A_=s(hO,"docker build"),hO.forEach(o),U_=s(De," will look for "),Si=r(De,"CODE",{});var _O=i(Si);Y_=s(_O,".Dockerfile"),_O.forEach(o),G_=s(De," in the root of the build context."),De.forEach(o),fp=f(e),Il=r(e,"P",{});var kO=i(Il);K_=s(kO,"Common options to specify:"),kO.forEach(o),pp=f(e),ue=r(e,"UL",{});var oa=i(ue);Ee=r(oa,"LI",{});var uo=i(Ee);xi=r(uo,"CODE",{});var DO=i(xi);W_=s(DO,"--file"),DO.forEach(o),B_=s(uo," / "),Ai=r(uo,"CODE",{});var wO=i(Ai);F_=s(wO,"-f"),wO.forEach(o),V_=s(uo," : specify location of "),Ui=r(uo,"CODE",{});var OO=i(Ui);q_=s(OO,"Dockerfile"),OO.forEach(o),z_=s(uo,", can be absolute path or relative path with respect to context."),uo.forEach(o),$_=f(oa),tt=r(oa,"LI",{});var Mc=i(tt);Yi=r(Mc,"CODE",{});var yO=i(Yi);j_=s(yO,"--tag"),yO.forEach(o),X_=s(Mc," / "),Gi=r(Mc,"CODE",{});var bO=i(Gi);Q_=s(bO,"-t"),bO.forEach(o),Z_=s(Mc," : name and optionally tag the image in \u2018name:tag\u2019 format"),Mc.forEach(o),J_=f(oa),Re=r(oa,"LI",{});var la=i(Re);Ki=r(la,"CODE",{});var CO=i(Ki);g_=s(CO,"--build-arg"),CO.forEach(o),e2=s(la," : sets the value of "),Wi=r(la,"CODE",{});var IO=i(Wi);t2=s(IO,"ARG"),IO.forEach(o),o2=s(la,"s defined in "),Bi=r(la,"CODE",{});var LO=i(Bi);l2=s(LO,"Dockerfile"),LO.forEach(o),la.forEach(o),oa.forEach(o),up=f(e),Ll=r(e,"P",{});var PO=i(Ll);Fi=r(PO,"STRONG",{});var RO=i(Fi);s2=s(RO,"Examples"),RO.forEach(o),PO.forEach(o),Ep=f(e),K=r(e,"P",{});var ht=i(K);Vi=r(ht,"CODE",{});var TO=i(Vi);a2=s(TO,"docker build ."),TO.forEach(o),r2=f(ht),qi=r(ht,"CODE",{});var NO=i(qi);i2=s(NO,"docker build -f docker/Dockerfile ."),NO.forEach(o),n2=f(ht),zi=r(ht,"CODE",{});var MO=i(zi);c2=s(MO,"docker build --build-arg HTTP_PROXY=http://1.1.1.1:1111 ."),MO.forEach(o),d2=f(ht),$i=r(ht,"CODE",{});var HO=i($i);f2=s(HO,"docker build -f ctx/Dockerfile github.com/user/project-repo"),HO.forEach(o),ht.forEach(o),mp=f(e),Jt=r(e,"DETAILS",{});var X6=i(Jt);ji=r(X6,"SUMMARY",{});var SO=i(ji);p2=s(SO,"note"),SO.forEach(o),u2=s(X6,`
remember to specify options BEFORE the context path/url`),X6.forEach(o),vp=f(e),Pl=r(e,"H3",{});var xO=i(Pl);E2=s(xO,"docker image"),xO.forEach(o),hp=f(e),Rl=r(e,"P",{});var AO=i(Rl);m2=s(AO,"Manages Docker images."),AO.forEach(o),_p=f(e),gt=r(e,"PRE",{class:!0});var Y0=i(gt);Y0.forEach(o),kp=f(e),Tl=r(e,"P",{});var UO=i(Tl);v2=s(UO,"Common commands:"),UO.forEach(o),Dp=f(e),I=r(e,"UL",{});var we=i(I);Nl=r(we,"LI",{});var Q6=i(Nl);Xi=r(Q6,"CODE",{});var YO=i(Xi);h2=s(YO,"pull"),YO.forEach(o),_2=s(Q6," : pull an image or repo from a registry (ie Docker Hub)"),Q6.forEach(o),k2=f(we),Ml=r(we,"LI",{});var Z6=i(Ml);Qi=r(Z6,"CODE",{});var GO=i(Qi);D2=s(GO,"inspect"),GO.forEach(o),w2=s(Z6," : get detailed info about image(s)"),Z6.forEach(o),O2=f(we),Hl=r(we,"LI",{});var J6=i(Hl);Zi=r(J6,"CODE",{});var KO=i(Zi);y2=s(KO,"ls"),KO.forEach(o),b2=s(J6," : list images"),J6.forEach(o),C2=f(we),Sl=r(we,"LI",{});var g6=i(Sl);Ji=r(g6,"CODE",{});var WO=i(Ji);I2=s(WO,"prune"),WO.forEach(o),L2=s(g6," : remove unused images"),g6.forEach(o),P2=f(we),xl=r(we,"LI",{});var e7=i(xl);gi=r(e7,"CODE",{});var BO=i(gi);R2=s(BO,"rm"),BO.forEach(o),T2=s(e7," : remove specific image(s)"),e7.forEach(o),we.forEach(o),wp=f(e),Al=r(e,"H3",{});var FO=i(Al);N2=s(FO,"docker container"),FO.forEach(o),Op=f(e),Ul=r(e,"P",{});var VO=i(Ul);M2=s(VO,"Manages Docker containers."),VO.forEach(o),yp=f(e),eo=r(e,"PRE",{class:!0});var G0=i(eo);G0.forEach(o),bp=f(e),Yl=r(e,"P",{});var qO=i(Yl);H2=s(qO,"Commond commands:"),qO.forEach(o),Cp=f(e),p=r(e,"UL",{});var E=i(p);Gl=r(E,"LI",{});var t7=i(Gl);en=r(t7,"CODE",{});var zO=i(en);S2=s(zO,"create"),zO.forEach(o),x2=s(t7," : create a new container from image"),t7.forEach(o),A2=f(E),Kl=r(E,"LI",{});var o7=i(Kl);tn=r(o7,"CODE",{});var $O=i(tn);U2=s($O,"start"),$O.forEach(o),Y2=s(o7," : start running the container"),o7.forEach(o),G2=f(E),ot=r(E,"LI",{});var Hc=i(ot);on=r(Hc,"CODE",{});var jO=i(on);K2=s(jO,"stop"),jO.forEach(o),W2=s(Hc," : stop the container (issues "),ln=r(Hc,"CODE",{});var XO=i(ln);B2=s(XO,"SIGTERM"),XO.forEach(o),F2=s(Hc," signal)"),Hc.forEach(o),V2=f(E),lt=r(E,"LI",{});var Sc=i(lt);sn=r(Sc,"CODE",{});var QO=i(sn);q2=s(QO,"kill"),QO.forEach(o),z2=s(Sc," : kills the container (issues "),an=r(Sc,"CODE",{});var ZO=i(an);$2=s(ZO,"SIGKILL"),ZO.forEach(o),j2=s(Sc," signal)"),Sc.forEach(o),X2=f(E),Wl=r(E,"LI",{});var l7=i(Wl);rn=r(l7,"CODE",{});var JO=i(rn);Q2=s(JO,"restart"),JO.forEach(o),Z2=s(l7," : restarts the container (will try to stop, if wait too long will kill)"),l7.forEach(o),J2=f(E),Bl=r(E,"LI",{});var s7=i(Bl);nn=r(s7,"CODE",{});var gO=i(nn);g2=s(gO,"pause"),gO.forEach(o),e4=s(s7," : pause all process in container(s)"),s7.forEach(o),t4=f(E),Fl=r(E,"LI",{});var a7=i(Fl);cn=r(a7,"CODE",{});var ey=i(cn);o4=s(ey,"unpause"),ey.forEach(o),l4=s(a7," : unpause all processes in container(s)"),a7.forEach(o),s4=f(E),Vl=r(E,"LI",{});var r7=i(Vl);dn=r(r7,"CODE",{});var ty=i(dn);a4=s(ty,"attach"),ty.forEach(o),r4=s(r7," : attach local machine\u2019s STDIN, STDOUT, STDERR to the container\u2019s"),r7.forEach(o),i4=f(E),ql=r(E,"LI",{});var i7=i(ql);fn=r(i7,"CODE",{});var oy=i(fn);n4=s(oy,"exec"),oy.forEach(o),c4=s(i7," : run a command in a running container"),i7.forEach(o),d4=f(E),zl=r(E,"LI",{});var n7=i(zl);pn=r(n7,"CODE",{});var ly=i(pn);f4=s(ly,"logs"),ly.forEach(o),p4=s(n7," : retrieve container logs"),n7.forEach(o),u4=f(E),$l=r(E,"LI",{});var c7=i($l);un=r(c7,"CODE",{});var sy=i(un);E4=s(sy,"stats"),sy.forEach(o),m4=s(c7," : stream container resource usage"),c7.forEach(o),v4=f(E),jl=r(E,"LI",{});var d7=i(jl);En=r(d7,"CODE",{});var ay=i(En);h4=s(ay,"top"),ay.forEach(o),_4=s(d7," : display running processes within the container"),d7.forEach(o),k4=f(E),Xl=r(E,"LI",{});var f7=i(Xl);mn=r(f7,"CODE",{});var ry=i(mn);D4=s(ry,"rm"),ry.forEach(o),w4=s(f7," : remove container(s)"),f7.forEach(o),O4=f(E),Ql=r(E,"LI",{});var p7=i(Ql);vn=r(p7,"CODE",{});var iy=i(vn);y4=s(iy,"prune"),iy.forEach(o),b4=s(p7," : remove unused containers"),p7.forEach(o),C4=f(E),Zl=r(E,"LI",{});var u7=i(Zl);hn=r(u7,"CODE",{});var ny=i(hn);I4=s(ny,"export"),ny.forEach(o),L4=s(u7," : export container\u2019s filesystem as a tar archive"),u7.forEach(o),P4=f(E),Jl=r(E,"LI",{});var E7=i(Jl);_n=r(E7,"CODE",{});var cy=i(_n);R4=s(cy,"cp"),cy.forEach(o),T4=s(E7," : copy files/folders between container and local filesystem"),E7.forEach(o),E.forEach(o),Ip=f(e),gl=r(e,"H3",{});var dy=i(gl);N4=s(dy,"docker network"),dy.forEach(o),Lp=f(e),es=r(e,"P",{});var fy=i(es);M4=s(fy,"Manages Docker networks."),fy.forEach(o),Pp=f(e),to=r(e,"PRE",{class:!0});var K0=i(to);K0.forEach(o),Rp=f(e),ts=r(e,"P",{});var py=i(ts);H4=s(py,"Common commands:"),py.forEach(o),Tp=f(e),w=r(e,"UL",{});var q=i(w);os=r(q,"LI",{});var m7=i(os);kn=r(m7,"CODE",{});var uy=i(kn);S4=s(uy,"create"),uy.forEach(o),x4=s(m7," : creates a docker network"),m7.forEach(o),A4=f(q),st=r(q,"LI",{});var xc=i(st);Dn=r(xc,"CODE",{});var Ey=i(Dn);U4=s(Ey,"connect"),Ey.forEach(o),Y4=s(xc," / "),wn=r(xc,"CODE",{});var my=i(wn);G4=s(my,"disconnect"),my.forEach(o),K4=s(xc," : connect / disconnect a container to a network"),xc.forEach(o),W4=f(q),ls=r(q,"LI",{});var v7=i(ls);On=r(v7,"CODE",{});var vy=i(On);B4=s(vy,"inspect"),vy.forEach(o),F4=s(v7," : get detailed info about network(s)"),v7.forEach(o),V4=f(q),ss=r(q,"LI",{});var h7=i(ss);yn=r(h7,"CODE",{});var hy=i(yn);q4=s(hy,"ls"),hy.forEach(o),z4=s(h7," : list docker networks"),h7.forEach(o),$4=f(q),as=r(q,"LI",{});var _7=i(as);bn=r(_7,"CODE",{});var _y=i(bn);j4=s(_y,"rm"),_y.forEach(o),X4=s(_7," : removes docker network(s)"),_7.forEach(o),Q4=f(q),rs=r(q,"LI",{});var k7=i(rs);Cn=r(k7,"CODE",{});var ky=i(Cn);Z4=s(ky,"prune"),ky.forEach(o),J4=s(k7," : removes all unused networks"),k7.forEach(o),q.forEach(o),Np=f(e),is=r(e,"H3",{});var Dy=i(is);g4=s(Dy,"docker volume"),Dy.forEach(o),Mp=f(e),ns=r(e,"P",{});var wy=i(ns);ek=s(wy,"Manages Docker volumes."),wy.forEach(o),Hp=f(e),oo=r(e,"PRE",{class:!0});var W0=i(oo);W0.forEach(o),Sp=f(e),cs=r(e,"P",{});var Oy=i(cs);tk=s(Oy,"Common commands:"),Oy.forEach(o),xp=f(e),L=r(e,"UL",{});var Oe=i(L);ds=r(Oe,"LI",{});var D7=i(ds);In=r(D7,"CODE",{});var yy=i(In);ok=s(yy,"create"),yy.forEach(o),lk=s(D7," : creates a docker volume"),D7.forEach(o),sk=f(Oe),fs=r(Oe,"LI",{});var w7=i(fs);Ln=r(w7,"CODE",{});var by=i(Ln);ak=s(by,"inspect"),by.forEach(o),rk=s(w7," : get detailed info about volume(s)"),w7.forEach(o),ik=f(Oe),ps=r(Oe,"LI",{});var O7=i(ps);Pn=r(O7,"CODE",{});var Cy=i(Pn);nk=s(Cy,"ls"),Cy.forEach(o),ck=s(O7," : list docker volumes"),O7.forEach(o),dk=f(Oe),us=r(Oe,"LI",{});var y7=i(us);Rn=r(y7,"CODE",{});var Iy=i(Rn);fk=s(Iy,"rm"),Iy.forEach(o),pk=s(y7," : removes docker volume(s)"),y7.forEach(o),uk=f(Oe),Es=r(Oe,"LI",{});var b7=i(Es);Tn=r(b7,"CODE",{});var Ly=i(Tn);Ek=s(Ly,"prune"),Ly.forEach(o),mk=s(b7," : removes all unused volume"),b7.forEach(o),Oe.forEach(o),Ap=f(e),ms=r(e,"H3",{});var Py=i(ms);vk=s(Py,"docker logs"),Py.forEach(o),Up=f(e),me=r(e,"P",{});var sa=i(me);hk=s(sa,"Retrieves container\u2019s logs (to "),Nn=r(sa,"CODE",{});var Ry=i(Nn);_k=s(Ry,"STDOUT"),Ry.forEach(o),kk=s(sa," and "),Mn=r(sa,"CODE",{});var Ty=i(Mn);Dk=s(Ty,"STDERR"),Ty.forEach(o),wk=s(sa,") to your CLI."),sa.forEach(o),Yp=f(e),lo=r(e,"PRE",{class:!0});var B0=i(lo);B0.forEach(o),Gp=f(e),vs=r(e,"P",{});var Ny=i(vs);Ok=s(Ny,"Common options to specify:"),Ny.forEach(o),Kp=f(e),P=r(e,"UL",{});var ye=i(P);at=r(ye,"LI",{});var Ac=i(at);Hn=r(Ac,"CODE",{});var My=i(Hn);yk=s(My,"--follow"),My.forEach(o),bk=s(Ac," / "),Sn=r(Ac,"CODE",{});var Hy=i(Sn);Ck=s(Hy,"-f"),Hy.forEach(o),Ik=s(Ac," : continuously streams the log output"),Ac.forEach(o),Lk=f(ye),rt=r(ye,"LI",{});var Uc=i(rt);xn=r(Uc,"CODE",{});var Sy=i(xn);Pk=s(Sy,"--timestamps"),Sy.forEach(o),Rk=s(Uc," / "),An=r(Uc,"CODE",{});var xy=i(An);Tk=s(xy,"-t"),xy.forEach(o),Nk=s(Uc," : show timestamps of logs"),Uc.forEach(o),Mk=f(ye),ve=r(ye,"LI",{});var Eo=i(ve);Un=r(Eo,"CODE",{});var Ay=i(Un);Hk=s(Ay,"--tail"),Ay.forEach(o),Sk=s(Eo," / "),Yn=r(Eo,"CODE",{});var Uy=i(Yn);xk=s(Uy,"-n"),Uy.forEach(o),Ak=s(Eo," : number of lines to show from end of the log (defaults to "),Gn=r(Eo,"CODE",{});var Yy=i(Gn);Uk=s(Yy,"all"),Yy.forEach(o),Yk=s(Eo,")"),Eo.forEach(o),Gk=f(ye),W=r(ye,"LI",{});var He=i(W);Kn=r(He,"CODE",{});var Gy=i(Kn);Kk=s(Gy,"--since"),Gy.forEach(o),Wk=s(He," : show logs "),Wn=r(He,"EM",{});var Ky=i(Wn);Bk=s(Ky,"since"),Ky.forEach(o),Fk=s(He," timestamp ("),Bn=r(He,"CODE",{});var Wy=i(Bn);Vk=s(Wy,"2013-01-02T13:37:00Z"),Wy.forEach(o),qk=s(He,") or relative ("),Fn=r(He,"CODE",{});var By=i(Fn);zk=s(By,"42m"),By.forEach(o),$k=s(He,")"),He.forEach(o),jk=f(ye),it=r(ye,"LI",{});var Yc=i(it);Vn=r(Yc,"CODE",{});var Fy=i(Vn);Xk=s(Fy,"--until"),Fy.forEach(o),Qk=s(Yc," : show logs "),qn=r(Yc,"EM",{});var Vy=i(qn);Zk=s(Vy,"before"),Vy.forEach(o),Jk=s(Yc," timestamp or relative"),Yc.forEach(o),ye.forEach(o),Wp=f(e),hs=r(e,"H3",{});var qy=i(hs);gk=s(qy,"docker inspect"),qy.forEach(o),Bp=f(e),_s=r(e,"P",{});var zy=i(_s);e5=s(zy,`Returns detailed information about docker objects.
Objects can be images, containers, networks, volumes, etc.`),zy.forEach(o),Fp=f(e),so=r(e,"PRE",{class:!0});var F0=i(so);F0.forEach(o),Vp=f(e),ks=r(e,"H3",{});var $y=i(ks);t5=s($y,"docker ps"),$y.forEach(o),qp=f(e),Ds=r(e,"P",{});var jy=i(Ds);o5=s(jy,`List all containers and information about them (such as ID, image name, ports etc.)
Defaults to listing running containers only.`),jy.forEach(o),zp=f(e),ao=r(e,"PRE",{class:!0});var V0=i(ao);V0.forEach(o),$p=f(e),ws=r(e,"P",{});var Xy=i(ws);l5=s(Xy,"Useful options:"),Xy.forEach(o),jp=f(e),R=r(e,"UL",{});var be=i(R);nt=r(be,"LI",{});var Gc=i(nt);zn=r(Gc,"CODE",{});var Qy=i(zn);s5=s(Qy,"--all"),Qy.forEach(o),a5=s(Gc," / "),$n=r(Gc,"CODE",{});var Zy=i($n);r5=s(Zy,"-a"),Zy.forEach(o),i5=s(Gc," : lists all containers, including those that are not running"),Gc.forEach(o),n5=f(be),he=r(be,"LI",{});var mo=i(he);jn=r(mo,"CODE",{});var Jy=i(jn);c5=s(Jy,"--size"),Jy.forEach(o),d5=s(mo," / "),Xn=r(mo,"CODE",{});var gy=i(Xn);f5=s(gy,"-s"),gy.forEach(o),p5=s(mo," : include size of the container in output. Shows both size of container (i.e. writable layer), and "),Qn=r(mo,"CODE",{});var eb=i(Qn);u5=s(eb,"virtual"),eb.forEach(o),E5=s(mo," size of total disk-space used, i.e. container + image."),mo.forEach(o),m5=f(be),Os=r(be,"LI",{});var C7=i(Os);Zn=r(C7,"CODE",{});var tb=i(Zn);v5=s(tb,"--no-trunc"),tb.forEach(o),h5=s(C7," : prevent truncation in table output"),C7.forEach(o),_5=f(be),_e=r(be,"LI",{});var vo=i(_e);Jn=r(vo,"CODE",{});var ob=i(Jn);k5=s(ob,"--filter"),ob.forEach(o),D5=s(vo," / "),gn=r(vo,"CODE",{});var lb=i(gn);w5=s(lb,"-f"),lb.forEach(o),O5=s(vo," : filters the output with key-value pairs. E.g. "),ec=r(vo,"CODE",{});var sb=i(ec);y5=s(sb,'docker ps -f "name=mysparkcontainer"'),sb.forEach(o),b5=s(vo,"."),vo.forEach(o),C5=f(be),H=r(be,"LI",{});var Ce=i(H);tc=r(Ce,"CODE",{});var ab=i(tc);I5=s(ab,"--format"),ab.forEach(o),L5=s(Ce," : formats the output using Go template. Placeholder information include "),oc=r(Ce,"CODE",{});var rb=i(oc);P5=s(rb,".ID"),rb.forEach(o),R5=s(Ce,", "),lc=r(Ce,"CODE",{});var ib=i(lc);T5=s(ib,".Image"),ib.forEach(o),N5=s(Ce,", "),sc=r(Ce,"CODE",{});var nb=i(sc);M5=s(nb,".Names"),nb.forEach(o),H5=s(Ce," etc."),ro=r(Ce,"UL",{});var Nu=i(ro);ct=r(Nu,"LI",{});var Kc=i(ct);ac=r(Kc,"CODE",{});var cb=i(ac);S5=s(cb,'docker ps --format "{{.ID}}: {{.Name}}"'),cb.forEach(o),x5=s(Kc," will print out "),rc=r(Kc,"CODE",{});var db=i(rc);A5=s(db,"abcdef: name1"),db.forEach(o),U5=s(Kc," etc."),Kc.forEach(o),Y5=f(Nu),ys=r(Nu,"LI",{});var I7=i(ys);ic=r(I7,"CODE",{});var fb=i(ic);G5=s(fb,'docker ps --format "table {{.ID}}\\t{{.Name}}"'),fb.forEach(o),K5=s(I7," will print the output in a table with header row."),I7.forEach(o),Nu.forEach(o),Ce.forEach(o),be.forEach(o),Xp=f(e),bs=r(e,"H3",{});var pb=i(bs);W5=s(pb,"docker stats"),pb.forEach(o),Qp=f(e),Cs=r(e,"P",{});var ub=i(Cs);B5=s(ub,`Display live info about containers\u2019 resource usage (kind of like Window\u2019s task manager).
Defaults to only showing running containers.`),ub.forEach(o),Zp=f(e),io=r(e,"PRE",{class:!0});var q0=i(io);q0.forEach(o),Jp=f(e),Is=r(e,"P",{});var Eb=i(Is);F5=s(Eb,"Useful options:"),Eb.forEach(o),gp=f(e),B=r(e,"UL",{});var _t=i(B);dt=r(_t,"LI",{});var Wc=i(dt);nc=r(Wc,"CODE",{});var mb=i(nc);V5=s(mb,"--all"),mb.forEach(o),q5=s(Wc," / "),cc=r(Wc,"CODE",{});var vb=i(cc);z5=s(vb,"-a"),vb.forEach(o),$5=s(Wc," : lists all containers, including those that are not running"),Wc.forEach(o),j5=f(_t),Ls=r(_t,"LI",{});var L7=i(Ls);dc=r(L7,"CODE",{});var hb=i(dc);X5=s(hb,"--no-trunc"),hb.forEach(o),Q5=s(L7," : Prevent truncation in table output"),L7.forEach(o),Z5=f(_t),Ps=r(_t,"LI",{});var P7=i(Ps);fc=r(P7,"CODE",{});var _b=i(fc);J5=s(_b,"--no-stream"),_b.forEach(o),g5=s(P7," : get only a \u2018snapshot\u2019 of the current stats"),P7.forEach(o),e6=f(_t),Rs=r(_t,"LI",{});var R7=i(Rs);pc=r(R7,"CODE",{});var kb=i(pc);t6=s(kb,"--format"),kb.forEach(o),o6=s(R7," : formats the output using Go template."),R7.forEach(o),_t.forEach(o),eu=f(e),tu=r(e,"HR",{}),ou=f(e),Ts=r(e,"H2",{});var Db=i(Ts);l6=s(Db,"networking"),Db.forEach(o),lu=f(e),Ns=r(e,"P",{});var wb=i(Ns);s6=s(wb,"Docker containers can communicate with each other, and they can also communicate with non-Docker programs in your host machine network."),wb.forEach(o),su=f(e),Ms=r(e,"P",{});var Ob=i(Ms);a6=s(Ob,"There are several types of network drivers that help you connect your containers, programs, nodes:"),Ob.forEach(o),au=f(e),_=r(e,"UL",{});var M=i(_);no=r(M,"LI",{});var Mu=i(no);uc=r(Mu,"CODE",{});var yb=i(uc);r6=s(yb,"bridge"),yb.forEach(o),i6=s(Mu," : (default) Docker managed network, isolated from host machine; used when connecting multiple containers on the "),Ec=r(Mu,"EM",{});var bb=i(Ec);n6=s(bb,"same Docker host"),bb.forEach(o),Mu.forEach(o),c6=f(M),ft=r(M,"LI",{});var Bc=i(ft);mc=r(Bc,"CODE",{});var Cb=i(mc);d6=s(Cb,"host"),Cb.forEach(o),f6=s(Bc," : (linux only) shares host networking (i.e. ip address) with the container; container which binds to port 80 will be accessible on port 80 on "),vc=r(Bc,"EM",{});var Ib=i(vc);p6=s(Ib,"host\u2019s"),Ib.forEach(o),u6=s(Bc," IP address"),Bc.forEach(o),E6=f(M),Hs=r(M,"LI",{});var T7=i(Hs);hc=r(T7,"CODE",{});var Lb=i(hc);m6=s(Lb,"overlay"),Lb.forEach(o),v6=s(T7," : connects multiple Docker daemons together; used when trying to connect containers running on separate Docker host machine"),T7.forEach(o),h6=f(M),Ss=r(M,"LI",{});var N7=i(Ss);_c=r(N7,"CODE",{});var Pb=i(_c);_6=s(Pb,"ipvlan"),Pb.forEach(o),k6=s(N7," : attaches your containers to the host machine\u2019s network, giving the containers their own IP address in the network; use when you want to connect the container to host machine\u2019s network"),N7.forEach(o),D6=f(M),xs=r(M,"LI",{});var M7=i(xs);kc=r(M7,"CODE",{});var Rb=i(kc);w6=s(Rb,"macvlan"),Rb.forEach(o),O6=s(M7," : assigns a new mac address so it appears as a physical device in your network; use for linking with legacy applications that require containers to appear as physical device"),M7.forEach(o),y6=f(M),As=r(M,"LI",{});var H7=i(As);Dc=r(H7,"CODE",{});var Tb=i(Dc);b6=s(Tb,"none"),Tb.forEach(o),C6=s(H7," : disables all networking for the container"),H7.forEach(o),I6=f(M),wc=r(M,"LI",{});var Nb=i(wc);L6=s(Nb,"third party network plugins can also be intalled from Docker Hub / other vendors"),Nb.forEach(o),M.forEach(o),ru=f(e),iu=r(e,"HR",{}),nu=f(e),Us=r(e,"H2",{});var Mb=i(Us);P6=s(Mb,"storage"),Mb.forEach(o),cu=f(e),Ys=r(e,"P",{});var Hb=i(Ys);R6=s(Hb,"By default, Docker containers store data in the container\u2019s writable layer, using a storage driver, and is not persisted."),Hb.forEach(o),du=f(e),Gs=r(e,"P",{});var Sb=i(Gs);T6=s(Sb,"5 types of storage in Docker to put container\u2019s data"),Sb.forEach(o),fu=f(e),T=r(e,"UL",{});var Ie=i(T);Oc=r(Ie,"LI",{});var xb=i(Oc);N6=s(xb,"default container\u2019s writable layer : does not persist. optimized for space efficiency, so write speeds are lower than native."),xb.forEach(o),M6=f(Ie),yc=r(Ie,"LI",{});var Ab=i(yc);H6=s(Ab,"volumes : isolated, Docker managed, can store in remote drives, can share volumes with multiple containers"),Ab.forEach(o),S6=f(Ie),bc=r(Ie,"LI",{});var Ub=i(bc);x6=s(Ub,"bind mount : directly mount a specific directory on host machine to the container"),Ub.forEach(o),A6=f(Ie),Cc=r(Ie,"LI",{});var Yb=i(Cc);U6=s(Yb,"tmpfs mount (linux only) : store container data in memory, not persistent, but faster performance since its using RAM"),Yb.forEach(o),Y6=f(Ie),Ic=r(Ie,"LI",{});var Gb=i(Ic);G6=s(Gb,"npipe mount (named pipes) (Windows only) : used to store data in memory for Windows"),Gb.forEach(o),Ie.forEach(o),this.h()},h(){u(wt,"class","language-dockerfile"),u(Ot,"class","language-dockerfile"),u(yt,"class","language-dockerfile"),u(bt,"class","language-dockerfile"),u(Ct,"class","language-dockerfile"),u(It,"class","language-dockerfile"),u(Rt,"class","language-dockerfile"),u(Tt,"class","language-dockerfile"),u(Nt,"class","language-dockerfile"),u(Mt,"class","language-dockerfile"),u(St,"class","language-dockerfile"),u(xt,"class","language-dockerfile"),u(At,"class","language-dockerfile"),u(Yt,"class","language-dockerfile"),u(Kt,"class","language-dockerfile"),u(Bt,"class","language-dockerfile"),u(Ft,"class","language-dockerfile"),u(Vt,"class","language-dockerfile"),u(qt,"class","language-dockerfile"),u(zt,"class","language-undefined"),u(jt,"href","https://docs.docker.com/engine/reference/commandline/service_create/#differences-between---mount-and---volume"),u(jt,"rel","nofollow"),u(Xt,"href","https://docs.docker.com/engine/reference/commandline/run/"),u(Xt,"rel","nofollow"),u(Qt,"href","https://docs.docker.com/engine/reference/run/"),u(Qt,"rel","nofollow"),u(Zt,"class","language-undefined"),u(gt,"class","language-undefined"),u(eo,"class","language-undefined"),u(to,"class","language-undefined"),u(oo,"class","language-undefined"),u(lo,"class","language-undefined"),u(so,"class","language-undefined"),u(ao,"class","language-undefined"),u(io,"class","language-undefined")},m(e,n){c(e,Se,n),t(Se,Hu),c(e,Fc,n),c(e,ho,n),t(ho,Su),c(e,Vc,n),c(e,_o,n),t(_o,xu),c(e,qc,n),c(e,ko,n),t(ko,Au),c(e,zc,n),c(e,Do,n),t(Do,Uu),c(e,$c,n),c(e,wo,n),t(wo,Yu),c(e,jc,n),c(e,Oo,n),t(Oo,Gu),c(e,Xc,n),c(e,xe,n),t(xe,z),t(z,Ku),t(z,aa),t(aa,Wu),t(z,Bu),t(z,ra),t(ra,Fu),t(z,Vu),t(z,ia),t(ia,qu),t(z,zu),t(xe,$u),t(xe,kt),t(kt,ju),t(kt,na),t(na,Xu),t(kt,Qu),c(e,Qc,n),c(e,yo,n),t(yo,Zu),c(e,Zc,n),c(e,bo,n),t(bo,Ju),c(e,Jc,n),c(e,Dt,n),t(Dt,ca),t(ca,gu),t(Dt,eE),c(e,gc,n),c(e,Co,n),t(Co,tE),c(e,ed,n),c(e,Ae,n),t(Ae,oE),t(Ae,da),t(da,lE),t(Ae,sE),c(e,td,n),c(e,Io,n),t(Io,aE),c(e,od,n),c(e,Lo,n),t(Lo,rE),c(e,ld,n),c(e,Po,n),t(Po,iE),c(e,sd,n),c(e,Ue,n),t(Ue,nE),t(Ue,fa),t(fa,cE),t(Ue,dE),c(e,ad,n),c(e,Ro,n),t(Ro,fE),c(e,rd,n),c(e,S,n),t(S,pE),t(S,pa),t(pa,uE),t(S,EE),t(S,ua),t(ua,mE),t(S,vE),t(S,Ea),t(Ea,hE),t(S,_E),c(e,id,n),c(e,To,n),t(To,kE),c(e,nd,n),c(e,Ye,n),t(Ye,DE),t(Ye,ma),t(ma,wE),t(Ye,OE),c(e,cd,n),c(e,No,n),t(No,yE),c(e,dd,n),c(e,Mo,n),t(Mo,bE),c(e,fd,n),c(e,Ge,n),t(Ge,CE),t(Ge,va),t(va,IE),t(Ge,LE),c(e,pd,n),c(e,Ho,n),t(Ho,PE),c(e,ud,n),c(e,Ed,n),c(e,md,n),c(e,So,n),t(So,RE),c(e,vd,n),c(e,xo,n),t(xo,TE),c(e,hd,n),c(e,Ao,n),t(Ao,NE),c(e,_d,n),c(e,Ke,n),t(Ke,ME),t(Ke,ha),t(ha,HE),t(Ke,SE),c(e,kd,n),c(e,wt,n),wt.innerHTML=Bb,c(e,Dd,n),c(e,Uo,n),t(Uo,xE),c(e,wd,n),c(e,Yo,n),t(Yo,AE),c(e,Od,n),c(e,Ot,n),Ot.innerHTML=Fb,c(e,yd,n),c(e,Go,n),t(Go,UE),c(e,bd,n),c(e,Ko,n),t(Ko,YE),c(e,Cd,n),c(e,yt,n),yt.innerHTML=Vb,c(e,Id,n),c(e,Wo,n),t(Wo,GE),c(e,Ld,n),c(e,Bo,n),t(Bo,KE),c(e,Pd,n),c(e,bt,n),bt.innerHTML=qb,c(e,Rd,n),c(e,Fo,n),t(Fo,WE),c(e,Td,n),c(e,Vo,n),t(Vo,BE),c(e,Nd,n),c(e,Ct,n),Ct.innerHTML=zb,c(e,Md,n),c(e,J,n),t(J,FE),t(J,_a),t(_a,VE),t(J,qE),t(J,ka),t(ka,zE),t(J,$E),c(e,Hd,n),c(e,We,n),t(We,jE),t(We,Da),t(Da,XE),t(We,QE),c(e,Sd,n),c(e,qo,n),t(qo,ZE),c(e,xd,n),c(e,zo,n),t(zo,JE),c(e,Ad,n),c(e,It,n),It.innerHTML=$b,c(e,Ud,n),c(e,Be,n),t(Be,gE),t(Be,wa),t(wa,em),t(Be,tm),c(e,Yd,n),c(e,g,n),t(g,Oa),t(Oa,om),t(g,lm),t(g,Lt),t(Lt,sm),t(Lt,ya),t(ya,am),t(Lt,rm),t(g,im),t(g,ba),t(ba,nm),c(e,Gd,n),c(e,Pt,n),t(Pt,Ca),t(Ca,cm),t(Pt,dm),c(e,Kd,n),c(e,ee,n),t(ee,fm),t(ee,Ia),t(Ia,pm),t(ee,um),t(ee,La),t(La,Em),t(ee,mm),c(e,Wd,n),c(e,Fe,n),t(Fe,vm),t(Fe,Pa),t(Pa,hm),t(Fe,_m),c(e,Bd,n),c(e,$o,n),t($o,km),c(e,Fd,n),c(e,jo,n),t(jo,Dm),c(e,Vd,n),c(e,Rt,n),Rt.innerHTML=jb,c(e,qd,n),c(e,Xo,n),t(Xo,wm),c(e,zd,n),c(e,Qo,n),t(Qo,Om),c(e,$d,n),c(e,Tt,n),Tt.innerHTML=Xb,c(e,jd,n),c(e,$,n),t($,Ra),t(Ra,ym),t($,bm),t($,Ta),t(Ta,Cm),t($,Im),t($,Na),t(Na,Lm),t($,Pm),c(e,Xd,n),c(e,Zo,n),t(Zo,Rm),c(e,Qd,n),c(e,Jo,n),t(Jo,Tm),c(e,Zd,n),c(e,Nt,n),Nt.innerHTML=Qb,c(e,Jd,n),c(e,Ve,n),t(Ve,Nm),t(Ve,Ma),t(Ma,Mm),t(Ve,Hm),c(e,gd,n),c(e,go,n),t(go,Sm),c(e,ef,n),c(e,k,n),t(k,xm),t(k,Ha),t(Ha,Am),t(k,Um),t(k,Sa),t(Sa,Ym),t(k,Gm),t(k,xa),t(xa,Km),t(k,Wm),t(k,Aa),t(Aa,Bm),t(k,Fm),t(k,Ua),t(Ua,Vm),t(k,qm),c(e,tf,n),c(e,Mt,n),Mt.innerHTML=Zb,c(e,of,n),c(e,qe,n),t(qe,zm),t(qe,Ya),t(Ya,$m),t(qe,jm),c(e,lf,n),c(e,te,n),t(te,Xm),t(te,Ga),t(Ga,Qm),t(te,Zm),t(te,Ka),t(Ka,Jm),t(te,gm),c(e,sf,n),c(e,el,n),t(el,Ht),t(Ht,e1),t(Ht,Wa),t(Wa,t1),t(Ht,o1),c(e,af,n),c(e,oe,n),t(oe,l1),t(oe,Ba),t(Ba,s1),t(oe,a1),t(oe,Fa),t(Fa,r1),t(oe,i1),c(e,rf,n),c(e,tl,n),t(tl,n1),c(e,nf,n),c(e,le,n),t(le,c1),t(le,Va),t(Va,d1),t(le,f1),t(le,qa),t(qa,p1),t(le,u1),c(e,cf,n),c(e,St,n),St.innerHTML=Jb,c(e,df,n),c(e,j,n),t(j,za),t(za,E1),t(j,m1),t(j,$a),t($a,v1),t(j,h1),t(j,ja),t(ja,_1),t(j,k1),c(e,ff,n),c(e,ol,n),t(ol,D1),c(e,pf,n),c(e,ll,n),t(ll,w1),c(e,uf,n),c(e,xt,n),xt.innerHTML=gb,c(e,Ef,n),c(e,sl,n),t(sl,O1),c(e,mf,n),c(e,At,n),At.innerHTML=e0,c(e,vf,n),c(e,se,n),t(se,y1),t(se,Xa),t(Xa,b1),t(se,C1),t(se,Qa),t(Qa,I1),t(se,L1),c(e,hf,n),c(e,Ut,n),t(Ut,Za),t(Za,P1),t(Ut,R1),c(e,_f,n),c(e,al,n),t(al,T1),c(e,kf,n),c(e,rl,n),t(rl,N1),c(e,Df,n),c(e,Yt,n),Yt.innerHTML=t0,c(e,wf,n),c(e,ae,n),t(ae,il),t(il,M1),t(il,Ja),t(Ja,H1),t(ae,S1),t(ae,Le),t(Le,x1),t(Le,ga),t(ga,A1),t(Le,U1),t(Le,er),t(er,Y1),t(Le,G1),t(ae,K1),t(ae,Gt),t(Gt,W1),t(Gt,tr),t(tr,B1),t(Gt,F1),c(e,Of,n),c(e,nl,n),t(nl,V1),c(e,yf,n),c(e,cl,n),t(cl,q1),c(e,bf,n),c(e,Kt,n),Kt.innerHTML=o0,c(e,Cf,n),c(e,Wt,n),t(Wt,or),t(or,z1),t(Wt,$1),c(e,If,n),c(e,x,n),t(x,ze),t(ze,lr),t(lr,j1),t(ze,X1),t(ze,sr),t(sr,Q1),t(ze,Z1),t(x,J1),t(x,$e),t($e,ar),t(ar,g1),t($e,ev),t($e,rr),t(rr,tv),t($e,ov),t(x,lv),t(x,je),t(je,ir),t(ir,sv),t(je,av),t(je,nr),t(nr,rv),t(je,iv),t(x,nv),t(x,Xe),t(Xe,cr),t(cr,cv),t(Xe,dv),t(Xe,dr),t(dr,fv),t(Xe,pv),c(e,Lf,n),c(e,D,n),t(D,uv),t(D,fr),t(fr,Ev),t(D,mv),t(D,pr),t(pr,vv),t(D,hv),t(D,ur),t(ur,_v),t(D,kv),t(D,Er),t(Er,Dv),t(D,wv),t(D,mr),t(mr,Ov),t(D,yv),c(e,Pf,n),c(e,re,n),t(re,bv),t(re,vr),t(vr,Cv),t(re,Iv),t(re,hr),t(hr,Lv),t(re,Pv),c(e,Rf,n),c(e,ie,n),t(ie,Rv),t(ie,_r),t(_r,Tv),t(ie,Nv),t(ie,kr),t(kr,Mv),t(ie,Hv),c(e,Tf,n),c(e,dl,n),t(dl,Sv),c(e,Nf,n),c(e,ne,n),t(ne,xv),t(ne,Dr),t(Dr,Av),t(ne,Uv),t(ne,wr),t(wr,Yv),t(ne,Gv),c(e,Mf,n),c(e,Bt,n),Bt.innerHTML=l0,c(e,Hf,n),c(e,fl,n),t(fl,Kv),c(e,Sf,n),c(e,pl,n),t(pl,Wv),c(e,xf,n),c(e,Ft,n),Ft.innerHTML=s0,c(e,Af,n),c(e,ul,n),t(ul,Bv),c(e,Uf,n),c(e,El,n),t(El,Fv),c(e,Yf,n),c(e,Qe,n),t(Qe,Vv),t(Qe,Or),t(Or,qv),t(Qe,zv),c(e,Gf,n),c(e,Vt,n),Vt.innerHTML=a0,c(e,Kf,n),c(e,ml,n),t(ml,$v),c(e,Wf,n),c(e,Ze,n),t(Ze,jv),t(Ze,yr),t(yr,Xv),t(Ze,Qv),c(e,Bf,n),c(e,ce,n),t(ce,Zv),t(ce,br),t(br,Jv),t(ce,gv),t(ce,Cr),t(Cr,eh),t(ce,th),c(e,Ff,n),c(e,Je,n),t(Je,de),t(de,Ir),t(Ir,oh),t(de,lh),t(de,Lr),t(Lr,sh),t(de,ah),t(de,Pr),t(Pr,rh),t(de,ih),t(Je,nh),t(Je,O),t(O,Rr),t(Rr,ch),t(O,dh),t(O,Tr),t(Tr,fh),t(O,ph),t(O,Nr),t(Nr,uh),t(O,Eh),t(O,Mr),t(Mr,mh),t(O,vh),t(O,Hr),t(Hr,hh),t(O,_h),c(e,Vf,n),c(e,m,n),t(m,kh),t(m,Sr),t(Sr,Dh),t(m,wh),t(m,xr),t(xr,Oh),t(m,yh),t(m,Ar),t(Ar,bh),t(m,Ch),t(m,Ur),t(Ur,Ih),t(m,Lh),t(m,Yr),t(Yr,Ph),t(m,Rh),t(m,Gr),t(Gr,Th),t(m,Nh),t(m,Kr),t(Kr,Mh),t(m,Hh),t(m,Wr),t(Wr,Sh),t(m,xh),t(m,Br),t(Br,Ah),t(m,Uh),t(m,Fr),t(Fr,Yh),t(m,Gh),t(m,Vr),t(Vr,Kh),t(m,Wh),c(e,qf,n),c(e,qt,n),qt.innerHTML=r0,c(e,zf,n),c(e,vl,n),t(vl,qr),t(qr,Bh),c(e,$f,n),c(e,A,n),t(A,Fh),t(A,zr),t(zr,Vh),t(A,qh),t(A,$r),t($r,zh),t(A,$h),t(A,jr),t(jr,jh),t(A,Xh),c(e,jf,n),c(e,hl,n),t(hl,Qh),c(e,Xf,n),c(e,Qf,n),c(e,Zf,n),c(e,_l,n),t(_l,Zh),c(e,Jf,n),c(e,kl,n),t(kl,Jh),c(e,gf,n),c(e,Dl,n),t(Dl,gh),c(e,ep,n),c(e,zt,n),zt.innerHTML=i0,c(e,tp,n),c(e,fe,n),t(fe,Xr),t(Xr,e3),t(fe,t3),t(fe,Qr),t(Qr,y),t(y,Zr),t(Zr,o3),t(y,l3),t(y,Jr),t(Jr,s3),t(y,a3),t(y,gr),t(gr,r3),t(y,i3),t(y,ei),t(ei,n3),t(y,c3),t(y,ti),t(ti,d3),t(y,f3),t(fe,p3),t(fe,wl),t(wl,u3),t(wl,oi),t(oi,E3),c(e,op,n),c(e,$t,n),t($t,li),t(li,m3),t($t,v3),c(e,lp,n),c(e,b,n),t(b,si),t(si,h3),t(b,_3),t(b,ai),t(ai,k3),t(b,D3),t(b,ri),t(ri,w3),t(b,O3),t(b,ii),t(ii,y3),t(b,b3),t(b,ni),t(ni,C3),c(e,sp,n),c(e,Ol,n),t(Ol,I3),c(e,ap,n),c(e,h,n),t(h,yl),t(yl,ci),t(ci,L3),t(yl,P3),t(h,R3),t(h,X),t(X,di),t(di,T3),t(X,N3),t(X,fi),t(fi,M3),t(X,H3),t(X,pi),t(pi,S3),t(X,x3),t(X,ui),t(ui,A3),t(h,U3),t(h,U),t(U,Ei),t(Ei,Y3),t(U,G3),t(U,mi),t(mi,K3),t(U,W3),t(U,vi),t(vi,B3),t(U,F3),t(U,hi),t(hi,V3),t(U,q3),t(h,z3),t(h,Y),t(Y,_i),t(_i,$3),t(Y,j3),t(Y,ki),t(ki,X3),t(Y,Q3),t(Y,Di),t(Di,Z3),t(Y,J3),t(Y,wi),t(wi,g3),t(Y,e_),t(h,t_),t(h,ge),t(ge,Oi),t(Oi,o_),t(ge,l_),t(ge,yi),t(yi,s_),t(ge,a_),t(h,r_),t(h,bl),t(bl,bi),t(bi,i_),t(bl,n_),t(h,c_),t(h,G),t(G,Ci),t(Ci,d_),t(G,f_),t(G,Ii),t(Ii,p_),t(G,u_),t(G,Li),t(Li,E_),t(G,m_),t(G,jt),t(jt,v_),t(G,h_),c(e,rp,n),c(e,et,n),t(et,Pi),t(Pi,__),t(et,k_),t(et,Pe),t(Pe,D_),t(Pe,Xt),t(Xt,w_),t(Pe,O_),t(Pe,Qt),t(Qt,y_),t(Pe,b_),c(e,ip,n),c(e,Cl,n),t(Cl,C_),c(e,np,n),c(e,pe,n),t(pe,I_),t(pe,Ri),t(Ri,L_),t(pe,P_),t(pe,Ti),t(Ti,R_),t(pe,T_),c(e,cp,n),c(e,Zt,n),Zt.innerHTML=n0,c(e,dp,n),c(e,C,n),t(C,N_),t(C,Ni),t(Ni,M_),t(C,H_),t(C,Mi),t(Mi,S_),t(C,x_),t(C,Hi),t(Hi,A_),t(C,U_),t(C,Si),t(Si,Y_),t(C,G_),c(e,fp,n),c(e,Il,n),t(Il,K_),c(e,pp,n),c(e,ue,n),t(ue,Ee),t(Ee,xi),t(xi,W_),t(Ee,B_),t(Ee,Ai),t(Ai,F_),t(Ee,V_),t(Ee,Ui),t(Ui,q_),t(Ee,z_),t(ue,$_),t(ue,tt),t(tt,Yi),t(Yi,j_),t(tt,X_),t(tt,Gi),t(Gi,Q_),t(tt,Z_),t(ue,J_),t(ue,Re),t(Re,Ki),t(Ki,g_),t(Re,e2),t(Re,Wi),t(Wi,t2),t(Re,o2),t(Re,Bi),t(Bi,l2),c(e,up,n),c(e,Ll,n),t(Ll,Fi),t(Fi,s2),c(e,Ep,n),c(e,K,n),t(K,Vi),t(Vi,a2),t(K,r2),t(K,qi),t(qi,i2),t(K,n2),t(K,zi),t(zi,c2),t(K,d2),t(K,$i),t($i,f2),c(e,mp,n),c(e,Jt,n),t(Jt,ji),t(ji,p2),t(Jt,u2),c(e,vp,n),c(e,Pl,n),t(Pl,E2),c(e,hp,n),c(e,Rl,n),t(Rl,m2),c(e,_p,n),c(e,gt,n),gt.innerHTML=c0,c(e,kp,n),c(e,Tl,n),t(Tl,v2),c(e,Dp,n),c(e,I,n),t(I,Nl),t(Nl,Xi),t(Xi,h2),t(Nl,_2),t(I,k2),t(I,Ml),t(Ml,Qi),t(Qi,D2),t(Ml,w2),t(I,O2),t(I,Hl),t(Hl,Zi),t(Zi,y2),t(Hl,b2),t(I,C2),t(I,Sl),t(Sl,Ji),t(Ji,I2),t(Sl,L2),t(I,P2),t(I,xl),t(xl,gi),t(gi,R2),t(xl,T2),c(e,wp,n),c(e,Al,n),t(Al,N2),c(e,Op,n),c(e,Ul,n),t(Ul,M2),c(e,yp,n),c(e,eo,n),eo.innerHTML=d0,c(e,bp,n),c(e,Yl,n),t(Yl,H2),c(e,Cp,n),c(e,p,n),t(p,Gl),t(Gl,en),t(en,S2),t(Gl,x2),t(p,A2),t(p,Kl),t(Kl,tn),t(tn,U2),t(Kl,Y2),t(p,G2),t(p,ot),t(ot,on),t(on,K2),t(ot,W2),t(ot,ln),t(ln,B2),t(ot,F2),t(p,V2),t(p,lt),t(lt,sn),t(sn,q2),t(lt,z2),t(lt,an),t(an,$2),t(lt,j2),t(p,X2),t(p,Wl),t(Wl,rn),t(rn,Q2),t(Wl,Z2),t(p,J2),t(p,Bl),t(Bl,nn),t(nn,g2),t(Bl,e4),t(p,t4),t(p,Fl),t(Fl,cn),t(cn,o4),t(Fl,l4),t(p,s4),t(p,Vl),t(Vl,dn),t(dn,a4),t(Vl,r4),t(p,i4),t(p,ql),t(ql,fn),t(fn,n4),t(ql,c4),t(p,d4),t(p,zl),t(zl,pn),t(pn,f4),t(zl,p4),t(p,u4),t(p,$l),t($l,un),t(un,E4),t($l,m4),t(p,v4),t(p,jl),t(jl,En),t(En,h4),t(jl,_4),t(p,k4),t(p,Xl),t(Xl,mn),t(mn,D4),t(Xl,w4),t(p,O4),t(p,Ql),t(Ql,vn),t(vn,y4),t(Ql,b4),t(p,C4),t(p,Zl),t(Zl,hn),t(hn,I4),t(Zl,L4),t(p,P4),t(p,Jl),t(Jl,_n),t(_n,R4),t(Jl,T4),c(e,Ip,n),c(e,gl,n),t(gl,N4),c(e,Lp,n),c(e,es,n),t(es,M4),c(e,Pp,n),c(e,to,n),to.innerHTML=f0,c(e,Rp,n),c(e,ts,n),t(ts,H4),c(e,Tp,n),c(e,w,n),t(w,os),t(os,kn),t(kn,S4),t(os,x4),t(w,A4),t(w,st),t(st,Dn),t(Dn,U4),t(st,Y4),t(st,wn),t(wn,G4),t(st,K4),t(w,W4),t(w,ls),t(ls,On),t(On,B4),t(ls,F4),t(w,V4),t(w,ss),t(ss,yn),t(yn,q4),t(ss,z4),t(w,$4),t(w,as),t(as,bn),t(bn,j4),t(as,X4),t(w,Q4),t(w,rs),t(rs,Cn),t(Cn,Z4),t(rs,J4),c(e,Np,n),c(e,is,n),t(is,g4),c(e,Mp,n),c(e,ns,n),t(ns,ek),c(e,Hp,n),c(e,oo,n),oo.innerHTML=p0,c(e,Sp,n),c(e,cs,n),t(cs,tk),c(e,xp,n),c(e,L,n),t(L,ds),t(ds,In),t(In,ok),t(ds,lk),t(L,sk),t(L,fs),t(fs,Ln),t(Ln,ak),t(fs,rk),t(L,ik),t(L,ps),t(ps,Pn),t(Pn,nk),t(ps,ck),t(L,dk),t(L,us),t(us,Rn),t(Rn,fk),t(us,pk),t(L,uk),t(L,Es),t(Es,Tn),t(Tn,Ek),t(Es,mk),c(e,Ap,n),c(e,ms,n),t(ms,vk),c(e,Up,n),c(e,me,n),t(me,hk),t(me,Nn),t(Nn,_k),t(me,kk),t(me,Mn),t(Mn,Dk),t(me,wk),c(e,Yp,n),c(e,lo,n),lo.innerHTML=u0,c(e,Gp,n),c(e,vs,n),t(vs,Ok),c(e,Kp,n),c(e,P,n),t(P,at),t(at,Hn),t(Hn,yk),t(at,bk),t(at,Sn),t(Sn,Ck),t(at,Ik),t(P,Lk),t(P,rt),t(rt,xn),t(xn,Pk),t(rt,Rk),t(rt,An),t(An,Tk),t(rt,Nk),t(P,Mk),t(P,ve),t(ve,Un),t(Un,Hk),t(ve,Sk),t(ve,Yn),t(Yn,xk),t(ve,Ak),t(ve,Gn),t(Gn,Uk),t(ve,Yk),t(P,Gk),t(P,W),t(W,Kn),t(Kn,Kk),t(W,Wk),t(W,Wn),t(Wn,Bk),t(W,Fk),t(W,Bn),t(Bn,Vk),t(W,qk),t(W,Fn),t(Fn,zk),t(W,$k),t(P,jk),t(P,it),t(it,Vn),t(Vn,Xk),t(it,Qk),t(it,qn),t(qn,Zk),t(it,Jk),c(e,Wp,n),c(e,hs,n),t(hs,gk),c(e,Bp,n),c(e,_s,n),t(_s,e5),c(e,Fp,n),c(e,so,n),so.innerHTML=E0,c(e,Vp,n),c(e,ks,n),t(ks,t5),c(e,qp,n),c(e,Ds,n),t(Ds,o5),c(e,zp,n),c(e,ao,n),ao.innerHTML=m0,c(e,$p,n),c(e,ws,n),t(ws,l5),c(e,jp,n),c(e,R,n),t(R,nt),t(nt,zn),t(zn,s5),t(nt,a5),t(nt,$n),t($n,r5),t(nt,i5),t(R,n5),t(R,he),t(he,jn),t(jn,c5),t(he,d5),t(he,Xn),t(Xn,f5),t(he,p5),t(he,Qn),t(Qn,u5),t(he,E5),t(R,m5),t(R,Os),t(Os,Zn),t(Zn,v5),t(Os,h5),t(R,_5),t(R,_e),t(_e,Jn),t(Jn,k5),t(_e,D5),t(_e,gn),t(gn,w5),t(_e,O5),t(_e,ec),t(ec,y5),t(_e,b5),t(R,C5),t(R,H),t(H,tc),t(tc,I5),t(H,L5),t(H,oc),t(oc,P5),t(H,R5),t(H,lc),t(lc,T5),t(H,N5),t(H,sc),t(sc,M5),t(H,H5),t(H,ro),t(ro,ct),t(ct,ac),t(ac,S5),t(ct,x5),t(ct,rc),t(rc,A5),t(ct,U5),t(ro,Y5),t(ro,ys),t(ys,ic),t(ic,G5),t(ys,K5),c(e,Xp,n),c(e,bs,n),t(bs,W5),c(e,Qp,n),c(e,Cs,n),t(Cs,B5),c(e,Zp,n),c(e,io,n),io.innerHTML=v0,c(e,Jp,n),c(e,Is,n),t(Is,F5),c(e,gp,n),c(e,B,n),t(B,dt),t(dt,nc),t(nc,V5),t(dt,q5),t(dt,cc),t(cc,z5),t(dt,$5),t(B,j5),t(B,Ls),t(Ls,dc),t(dc,X5),t(Ls,Q5),t(B,Z5),t(B,Ps),t(Ps,fc),t(fc,J5),t(Ps,g5),t(B,e6),t(B,Rs),t(Rs,pc),t(pc,t6),t(Rs,o6),c(e,eu,n),c(e,tu,n),c(e,ou,n),c(e,Ts,n),t(Ts,l6),c(e,lu,n),c(e,Ns,n),t(Ns,s6),c(e,su,n),c(e,Ms,n),t(Ms,a6),c(e,au,n),c(e,_,n),t(_,no),t(no,uc),t(uc,r6),t(no,i6),t(no,Ec),t(Ec,n6),t(_,c6),t(_,ft),t(ft,mc),t(mc,d6),t(ft,f6),t(ft,vc),t(vc,p6),t(ft,u6),t(_,E6),t(_,Hs),t(Hs,hc),t(hc,m6),t(Hs,v6),t(_,h6),t(_,Ss),t(Ss,_c),t(_c,_6),t(Ss,k6),t(_,D6),t(_,xs),t(xs,kc),t(kc,w6),t(xs,O6),t(_,y6),t(_,As),t(As,Dc),t(Dc,b6),t(As,C6),t(_,I6),t(_,wc),t(wc,L6),c(e,ru,n),c(e,iu,n),c(e,nu,n),c(e,Us,n),t(Us,P6),c(e,cu,n),c(e,Ys,n),t(Ys,R6),c(e,du,n),c(e,Gs,n),t(Gs,T6),c(e,fu,n),c(e,T,n),t(T,Oc),t(Oc,N6),t(T,M6),t(T,yc),t(yc,H6),t(T,S6),t(T,bc),t(bc,x6),t(T,A6),t(T,Cc),t(Cc,U6),t(T,Y6),t(T,Ic),t(Ic,G6)},p:S7,i:S7,o:S7,d(e){e&&o(Se),e&&o(Fc),e&&o(ho),e&&o(Vc),e&&o(_o),e&&o(qc),e&&o(ko),e&&o(zc),e&&o(Do),e&&o($c),e&&o(wo),e&&o(jc),e&&o(Oo),e&&o(Xc),e&&o(xe),e&&o(Qc),e&&o(yo),e&&o(Zc),e&&o(bo),e&&o(Jc),e&&o(Dt),e&&o(gc),e&&o(Co),e&&o(ed),e&&o(Ae),e&&o(td),e&&o(Io),e&&o(od),e&&o(Lo),e&&o(ld),e&&o(Po),e&&o(sd),e&&o(Ue),e&&o(ad),e&&o(Ro),e&&o(rd),e&&o(S),e&&o(id),e&&o(To),e&&o(nd),e&&o(Ye),e&&o(cd),e&&o(No),e&&o(dd),e&&o(Mo),e&&o(fd),e&&o(Ge),e&&o(pd),e&&o(Ho),e&&o(ud),e&&o(Ed),e&&o(md),e&&o(So),e&&o(vd),e&&o(xo),e&&o(hd),e&&o(Ao),e&&o(_d),e&&o(Ke),e&&o(kd),e&&o(wt),e&&o(Dd),e&&o(Uo),e&&o(wd),e&&o(Yo),e&&o(Od),e&&o(Ot),e&&o(yd),e&&o(Go),e&&o(bd),e&&o(Ko),e&&o(Cd),e&&o(yt),e&&o(Id),e&&o(Wo),e&&o(Ld),e&&o(Bo),e&&o(Pd),e&&o(bt),e&&o(Rd),e&&o(Fo),e&&o(Td),e&&o(Vo),e&&o(Nd),e&&o(Ct),e&&o(Md),e&&o(J),e&&o(Hd),e&&o(We),e&&o(Sd),e&&o(qo),e&&o(xd),e&&o(zo),e&&o(Ad),e&&o(It),e&&o(Ud),e&&o(Be),e&&o(Yd),e&&o(g),e&&o(Gd),e&&o(Pt),e&&o(Kd),e&&o(ee),e&&o(Wd),e&&o(Fe),e&&o(Bd),e&&o($o),e&&o(Fd),e&&o(jo),e&&o(Vd),e&&o(Rt),e&&o(qd),e&&o(Xo),e&&o(zd),e&&o(Qo),e&&o($d),e&&o(Tt),e&&o(jd),e&&o($),e&&o(Xd),e&&o(Zo),e&&o(Qd),e&&o(Jo),e&&o(Zd),e&&o(Nt),e&&o(Jd),e&&o(Ve),e&&o(gd),e&&o(go),e&&o(ef),e&&o(k),e&&o(tf),e&&o(Mt),e&&o(of),e&&o(qe),e&&o(lf),e&&o(te),e&&o(sf),e&&o(el),e&&o(af),e&&o(oe),e&&o(rf),e&&o(tl),e&&o(nf),e&&o(le),e&&o(cf),e&&o(St),e&&o(df),e&&o(j),e&&o(ff),e&&o(ol),e&&o(pf),e&&o(ll),e&&o(uf),e&&o(xt),e&&o(Ef),e&&o(sl),e&&o(mf),e&&o(At),e&&o(vf),e&&o(se),e&&o(hf),e&&o(Ut),e&&o(_f),e&&o(al),e&&o(kf),e&&o(rl),e&&o(Df),e&&o(Yt),e&&o(wf),e&&o(ae),e&&o(Of),e&&o(nl),e&&o(yf),e&&o(cl),e&&o(bf),e&&o(Kt),e&&o(Cf),e&&o(Wt),e&&o(If),e&&o(x),e&&o(Lf),e&&o(D),e&&o(Pf),e&&o(re),e&&o(Rf),e&&o(ie),e&&o(Tf),e&&o(dl),e&&o(Nf),e&&o(ne),e&&o(Mf),e&&o(Bt),e&&o(Hf),e&&o(fl),e&&o(Sf),e&&o(pl),e&&o(xf),e&&o(Ft),e&&o(Af),e&&o(ul),e&&o(Uf),e&&o(El),e&&o(Yf),e&&o(Qe),e&&o(Gf),e&&o(Vt),e&&o(Kf),e&&o(ml),e&&o(Wf),e&&o(Ze),e&&o(Bf),e&&o(ce),e&&o(Ff),e&&o(Je),e&&o(Vf),e&&o(m),e&&o(qf),e&&o(qt),e&&o(zf),e&&o(vl),e&&o($f),e&&o(A),e&&o(jf),e&&o(hl),e&&o(Xf),e&&o(Qf),e&&o(Zf),e&&o(_l),e&&o(Jf),e&&o(kl),e&&o(gf),e&&o(Dl),e&&o(ep),e&&o(zt),e&&o(tp),e&&o(fe),e&&o(op),e&&o($t),e&&o(lp),e&&o(b),e&&o(sp),e&&o(Ol),e&&o(ap),e&&o(h),e&&o(rp),e&&o(et),e&&o(ip),e&&o(Cl),e&&o(np),e&&o(pe),e&&o(cp),e&&o(Zt),e&&o(dp),e&&o(C),e&&o(fp),e&&o(Il),e&&o(pp),e&&o(ue),e&&o(up),e&&o(Ll),e&&o(Ep),e&&o(K),e&&o(mp),e&&o(Jt),e&&o(vp),e&&o(Pl),e&&o(hp),e&&o(Rl),e&&o(_p),e&&o(gt),e&&o(kp),e&&o(Tl),e&&o(Dp),e&&o(I),e&&o(wp),e&&o(Al),e&&o(Op),e&&o(Ul),e&&o(yp),e&&o(eo),e&&o(bp),e&&o(Yl),e&&o(Cp),e&&o(p),e&&o(Ip),e&&o(gl),e&&o(Lp),e&&o(es),e&&o(Pp),e&&o(to),e&&o(Rp),e&&o(ts),e&&o(Tp),e&&o(w),e&&o(Np),e&&o(is),e&&o(Mp),e&&o(ns),e&&o(Hp),e&&o(oo),e&&o(Sp),e&&o(cs),e&&o(xp),e&&o(L),e&&o(Ap),e&&o(ms),e&&o(Up),e&&o(me),e&&o(Yp),e&&o(lo),e&&o(Gp),e&&o(vs),e&&o(Kp),e&&o(P),e&&o(Wp),e&&o(hs),e&&o(Bp),e&&o(_s),e&&o(Fp),e&&o(so),e&&o(Vp),e&&o(ks),e&&o(qp),e&&o(Ds),e&&o(zp),e&&o(ao),e&&o($p),e&&o(ws),e&&o(jp),e&&o(R),e&&o(Xp),e&&o(bs),e&&o(Qp),e&&o(Cs),e&&o(Zp),e&&o(io),e&&o(Jp),e&&o(Is),e&&o(gp),e&&o(B),e&&o(eu),e&&o(tu),e&&o(ou),e&&o(Ts),e&&o(lu),e&&o(Ns),e&&o(su),e&&o(Ms),e&&o(au),e&&o(_),e&&o(ru),e&&o(iu),e&&o(nu),e&&o(Us),e&&o(cu),e&&o(Ys),e&&o(du),e&&o(Gs),e&&o(fu),e&&o(T)}}}const Q0={title:"Docker Intro",date:"2022-12-01"},{title:Kb,date:J0}=Q0;class g0 extends z0{constructor(Se){super(),$0(this,Se,null,X0,j0,{})}}export{g0 as default,Q0 as metadata};
