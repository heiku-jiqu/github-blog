import{S as _k,i as Dk,s as wk,k as a,q as o,a as f,l as i,m as r,r as s,h as t,c as p,n as E,b as c,B as l,A as uv}from"./index-4cbca6b4.js";function Ok(I4){let se,hc,ri,_t,kc,ni,Dt,_c,ci,wt,Dc,fi,Ot,wc,pi,bt,Oc,di,yt,bc,ui,ae,N,yc,no,Cc,Ic,co,Pc,Rc,fo,Tc,Lc,Nc,Se,Hc,po,Ac,Sc,Ei,Ct,Mc,mi,It,xc,vi,Me,uo,Uc,Gc,hi,Pt,Yc,ki,ie,Kc,Eo,Wc,Vc,_i,Rt,Fc,Di,Tt,Bc,wi,Lt,qc,Oi,re,zc,mo,$c,jc,bi,Nt,Xc,yi,b,Qc,vo,Zc,Jc,ho,gc,ef,ko,tf,lf,Ci,Ht,of,Ii,ne,sf,_o,af,rf,Pi,At,nf,Ri,St,cf,Ti,ce,ff,Do,pf,df,Li,Mt,uf,Ni,Hi,Ai,xt,Ef,Si,Ut,mf,Mi,Gt,vf,xi,fe,hf,wo,kf,_f,Ui,xe,P4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">FROM</span> apache/spark</span>

<span class="token comment"># to specify a tag</span>
<span class="token instruction"><span class="token keyword">FROM</span> apache/spark:3.3.1</span></code>`,Gi,Yt,Df,Yi,Kt,wf,Ki,Ue,R4=`<code class="language-dockerfile"><span class="token comment"># Shell form (defaults to /bin/sh -c on Linux or cmd /S /C on Windows)</span>
<span class="token instruction"><span class="token keyword">RUN</span> &lt;command></span>

<span class="token comment"># Exec form</span>
<span class="token instruction"><span class="token keyword">RUN</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>]</span></code>`,Wi,Wt,Of,Vi,Vt,bf,Fi,Ge,T4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # exec form</span>
<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # default parameters to ENTRYPOINT</span>
<span class="token instruction"><span class="token keyword">CMD</span> command param1 param2 # shell form</span></code>`,Bi,Ft,yf,qi,Bt,Cf,zi,Ye,L4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ENTRYPOINT</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # exec form</span>
<span class="token instruction"><span class="token keyword">ENTRYPOINT</span> command param1 param2 # shell form</span></code>`,$i,qt,If,ji,zt,Pf,Xi,Ke,N4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">COPY</span> &lt;src>... &lt;dest></span>
<span class="token instruction"><span class="token keyword">COPY</span> [<span class="token string">"&lt;src>"</span>,... <span class="token string">"&lt;dest>"</span>] # used when there are spaces in path</span></code>`,Qi,M,Rf,Oo,Tf,Lf,bo,Nf,Hf,Zi,pe,Af,yo,Sf,Mf,Ji,$t,xf,gi,jt,Uf,er,We,H4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ADD</span> &lt;src>... &lt;dest></span>
<span class="token instruction"><span class="token keyword">ADD</span> [<span class="token string">"&lt;src>"</span>,... <span class="token string">"&lt;dest>"</span>] # used when there are spaces in path</span></code>`,tr,de,Gf,Co,Yf,Kf,lr,x,Io,Wf,Vf,Ve,Ff,Po,Bf,qf,zf,Ro,$f,or,Fe,To,jf,Xf,sr,U,Qf,Lo,Zf,Jf,No,gf,ep,ar,ue,tp,Ho,lp,op,ir,Xt,sp,rr,Qt,ap,nr,Be,A4='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ENV</span> &lt;key>=&lt;value></span></code>',cr,Zt,ip,fr,Jt,rp,pr,qe,S4='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">EXPOSE</span> &lt;port> [&lt;port>/&lt;protocol>]</span></code>',dr,H,Ao,np,cp,So,fp,pp,Mo,dp,up,ur,gt,Ep,Er,el,mp,mr,ze,M4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">VOLUME</span> &lt;path/to/container/dir> &lt;path/to/container/dir2> # space separated paths</span>
<span class="token instruction"><span class="token keyword">VOLUME</span> [<span class="token string">"&lt;/path/to/dir1>"</span>, <span class="token string">"&lt;/path/to/dir2>"</span>] #json array</span></code>`,vr,Ee,vp,xo,hp,kp,hr,tl,_p,kr,m,Dp,Uo,wp,Op,Go,bp,yp,Yo,Cp,Ip,Ko,Pp,Rp,Wo,Tp,Lp,_r,$e,x4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">WORKDIR</span> /path/to/workdir # absolute paths, i.e. starts with /</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> path/to/child/dir # relative path, i.e. does not start with /</span></code>`,Dr,me,Np,Vo,Hp,Ap,wr,G,Sp,Fo,Mp,xp,Bo,Up,Gp,Or,ll,je,Yp,qo,Kp,Wp,br,Y,Vp,zo,Fp,Bp,$o,qp,zp,yr,ol,$p,Cr,K,jp,jo,Xp,Qp,Xo,Zp,Jp,Ir,Xe,U4='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ARG</span> &lt;name>[=&lt;default value>]</span></code>',Pr,A,Qo,gp,ed,Zo,td,ld,Jo,od,sd,Rr,sl,ad,Tr,al,id,Lr,Qe,G4='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ONBUILD</span> &lt;INSTRUCTION></span></code>',Nr,il,rd,Hr,Ze,Y4=`<code class="language-dockerfile"><span class="token comment"># copy host files to /contents in the container</span>
<span class="token instruction"><span class="token keyword">ONBUILD</span> <span class="token keyword">ADD</span> . /contents</span>

<span class="token comment"># tar all files in the /contents directory in the container to archive.tar in the container</span>
<span class="token instruction"><span class="token keyword">ONBUILD</span> <span class="token keyword">RUN</span> tar -cfv archive.tar /contents</span></code>`,Ar,W,nd,go,cd,fd,es,pd,dd,Sr,Je,ts,ud,Ed,Mr,rl,md,xr,nl,vd,Ur,ge,K4='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">STOPSIGNAL</span> signal</span></code>',Gr,V,cl,hd,ls,kd,_d,le,Dd,os,wd,Od,ss,bd,yd,Cd,et,Id,as,Pd,Rd,Yr,fl,Td,Kr,pl,Ld,Wr,tt,W4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">HEALTHCHECK</span> [OPTIONS] CMD command</span>
<span class="token instruction"><span class="token keyword">HEALTHCHECK</span> <span class="token keyword">NONE</span> # disable any healthcheck from base image</span></code>`,Vr,lt,is,Nd,Hd,Fr,y,ve,rs,Ad,Sd,ns,Md,xd,Ud,he,cs,Gd,Yd,fs,Kd,Wd,Vd,ke,ps,Fd,Bd,ds,qd,zd,$d,_e,us,jd,Xd,Es,Qd,Zd,Br,v,Jd,ms,gd,eu,vs,tu,lu,hs,ou,su,ks,au,iu,_s,ru,nu,qr,F,cu,Ds,fu,pu,ws,du,uu,zr,B,Eu,Os,mu,vu,bs,hu,ku,$r,dl,_u,jr,q,Du,ys,wu,Ou,Cs,bu,yu,Xr,ot,V4='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">SHELL</span> [<span class="token string">"executable"</span>, <span class="token string">"parameters"</span>]</span></code>',Qr,ul,Cu,Zr,El,Iu,Jr,st,F4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">USER</span> &lt;user></span>
<span class="token instruction"><span class="token keyword">USER</span> &lt;UID></span></code>`,gr,ml,Pu,en,vl,Ru,tn,De,Tu,Is,Lu,Nu,ln,at,B4='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">LABEL</span> &lt;key>=&lt;value> &lt;key>=&lt;value> ...</span></code>',on,hl,Hu,sn,we,Au,Ps,Su,Mu,an,z,xu,Rs,Uu,Gu,Ts,Yu,Ku,rn,Oe,$,Ls,Wu,Vu,Ns,Fu,Bu,Hs,qu,zu,$u,k,As,ju,Xu,Ss,Qu,Zu,Ms,Ju,gu,xs,eE,tE,Us,lE,oE,nn,d,sE,Gs,aE,iE,Ys,rE,nE,Ks,cE,fE,Ws,pE,dE,Vs,uE,EE,Fs,mE,vE,Bs,hE,kE,qs,_E,DE,zs,wE,OE,$s,bE,yE,js,CE,IE,cn,it,q4=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">FROM</span> example</span>
<span class="token instruction"><span class="token keyword">ENV</span> var=/bar</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token variable">$&#123;var&#125;</span> # WORKDIR /bar</span>
<span class="token instruction"><span class="token keyword">ADD</span> . <span class="token variable">$FOO</span>     # ADD . /bar</span></code>`,fn,kl,Xs,PE,pn,C,RE,Qs,TE,LE,Zs,NE,HE,Js,AE,SE,dn,_l,ME,un,En,mn,Dl,xE,vn,wl,UE,hn,Ol,GE,kn,bl,gs,YE,_n,yl,h,KE,ea,WE,VE,ta,FE,BE,la,qE,zE,oa,$E,jE,sa,XE,QE,Dn,Cl,ZE,wn,_,rt,aa,JE,gE,ia,em,tm,ra,na,lm,om,ca,fa,sm,am,pa,da,im,rm,ua,Ea,nm,On,Il,cm,bn,Pl,fm,yn,Rl,pm,Cn,Tl,dm,In,Ll,um,Pn,Nl,Em,Rn,j,mm,ma,vm,hm,va,km,_m,Tn,nt,z4='<code class="language-undefined">docker logs [OPTIONS] CONTAINER</code>',Ln,Hl,Dm,Nn,D,be,ha,wm,Om,ka,bm,ym,Cm,ye,_a,Im,Pm,Da,Rm,Tm,Lm,X,wa,Nm,Hm,Oa,Am,Sm,ba,Mm,xm,Um,I,ya,Gm,Ym,Ca,Km,Wm,Ia,Vm,Fm,Pa,Bm,qm,zm,Ce,Ra,$m,jm,Ta,Xm,Qm,Hn,Al,Zm,An,Sl,Jm,Sn,ct,$4='<code class="language-undefined">docker inspect [OPTIONS] NAME|ID</code>',Mn,Ml,gm,xn,xl,e1,Un,ft,j4='<code class="language-undefined">docker ps [OPTIONS]</code>',Gn,Ul,t1,Yn,w,Ie,La,l1,o1,Na,s1,a1,i1,Q,Ha,r1,n1,Aa,c1,f1,Sa,p1,d1,u1,Gl,Ma,E1,m1,v1,Z,xa,h1,k1,Ua,_1,D1,Ga,w1,O1,b1,O,Ya,y1,C1,Ka,I1,P1,Wa,R1,T1,Va,L1,N1,pt,Pe,Fa,H1,A1,Ba,S1,M1,x1,Yl,qa,U1,G1,Kn,Kl,Y1,Wn,Wl,K1,Vn,dt,X4='<code class="language-undefined">docker stats [OPTIONS] [CONTAINER...]</code>',Fn,Vl,W1,Bn,P,Re,za,V1,F1,$a,B1,q1,z1,Fl,ja,$1,j1,X1,Bl,Xa,Q1,Z1,J1,ql,Qa,g1,ev,qn,zn,$n,zl,tv,jn,Xn,Qn,$l,lv;return{c(){se=a("h1"),hc=o(C4),ri=f(),_t=a("p"),kc=o("Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),ni=f(),Dt=a("p"),_c=o(`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),ci=f(),wt=a("h2"),Dc=o("key concepts"),fi=f(),Ot=a("h3"),wc=o("Docker images"),pi=f(),bt=a("p"),Oc=o(`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),di=f(),yt=a("p"),bc=o("Images are often build on top of one another"),ui=f(),ae=a("ul"),N=a("li"),yc=o("e.g. you start with "),no=a("code"),Cc=o("ubuntu"),Ic=o(" image, install "),co=a("code"),Pc=o("python"),Rc=o(" in that ubuntu image, install "),fo=a("code"),Tc=o("pytorch"),Lc=o(" package, install pretrained models."),Nc=f(),Se=a("li"),Hc=o("or you can start with a published "),po=a("code"),Ac=o("python"),Sc=o(" image, and install your packages there."),Ei=f(),Ct=a("p"),Mc=o("Published images are available for download in Docker registries."),mi=f(),It=a("h4"),xc=o("Dockerfile"),vi=f(),Me=a("p"),uo=a("code"),Uc=o("Dockerfile"),Gc=o("s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),hi=f(),Pt=a("h3"),Yc=o("Docker containers"),ki=f(),ie=a("p"),Kc=o(`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),Eo=a("code"),Wc=o("nodejs"),Vc=o(" image, but one exposes port 8888 and another exposes port 8899."),_i=f(),Rt=a("h3"),Fc=o("Docker registries"),Di=f(),Tt=a("p"),Bc=o("Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),wi=f(),Lt=a("h3"),qc=o("Docker daemon"),Oi=f(),re=a("p"),zc=o("This is the underlying "),mo=a("code"),$c=o("dockerd"),jc=o(" process that helps you build images and run containers. It will listen for Docker API requests"),bi=f(),Nt=a("h3"),Xc=o("Docker client"),yi=f(),b=a("p"),Qc=o("The docker client "),vo=a("code"),Zc=o("docker"),Jc=o(" is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),ho=a("code"),gc=o("docker"),ef=o(" command sends Docker API requests to "),ko=a("code"),tf=o("dockerd"),lf=o("."),Ci=f(),Ht=a("h3"),of=o("Docker compose"),Ii=f(),ne=a("p"),sf=o("Docker compose is a tool that helps with running "),_o=a("em"),af=o("multi-container"),rf=o(" Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),Pi=f(),At=a("p"),nf=o("For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),Ri=f(),St=a("h4"),cf=o("Difference between Kubernetes"),Ti=f(),ce=a("p"),ff=o("Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),Do=a("em"),pf=o("single-node"),df=o(", whereas Kubernetes is a full multi-node container manager."),Li=f(),Mt=a("p"),uf=o("Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),Ni=f(),Hi=a("hr"),Ai=f(),xt=a("h2"),Ef=o("Dockerfile"),Si=f(),Ut=a("h3"),mf=o("Commands"),Mi=f(),Gt=a("h4"),vf=o("FROM"),xi=f(),fe=a("p"),hf=o("All dockerfile starts with the "),wo=a("code"),kf=o("FROM"),_f=o(" command. It pulls the base image from Dockerhub to start to build your image."),Ui=f(),xe=a("pre"),Gi=f(),Yt=a("h4"),Df=o("RUN"),Yi=f(),Kt=a("p"),wf=o("Runs a command or executable. It has two forms"),Ki=f(),Ue=a("pre"),Wi=f(),Wt=a("h4"),Of=o("CMD"),Vi=f(),Vt=a("p"),bf=o("Provides defaults for an executing container. The arguments will be appended to ENTRYPOINT."),Fi=f(),Ge=a("pre"),Bi=f(),Ft=a("h4"),yf=o("ENTRYPOINT"),qi=f(),Bt=a("p"),Cf=o(`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),zi=f(),Ye=a("pre"),$i=f(),qt=a("h4"),If=o("COPY"),ji=f(),zt=a("p"),Pf=o("Copies file from your native host into the container image."),Xi=f(),Ke=a("pre"),Qi=f(),M=a("p"),Rf=o("Multiple "),Oo=a("code"),Tf=o("<src>"),Lf=o(" can be specified, and the last argument will be treated as the "),bo=a("code"),Nf=o("<dest>"),Hf=o("."),Zi=f(),pe=a("p"),Af=o("All "),yo=a("code"),Sf=o("<src>"),Mf=o(" relative paths must be inside context of the build!"),Ji=f(),$t=a("h4"),xf=o("ADD"),gi=f(),jt=a("p"),Uf=o("Copies file from your native host into the container image."),er=f(),We=a("pre"),tr=f(),de=a("p"),Gf=o("Compared to COPY, "),Co=a("code"),Yf=o("ADD"),Kf=o(" has added utilities like:"),lr=f(),x=a("ul"),Io=a("li"),Wf=o("being able to download files from URLs then copying them into the image"),Vf=f(),Ve=a("li"),Ff=o("extracting contents of "),Po=a("code"),Bf=o(".tar"),qf=o(" files before copying into image"),zf=f(),Ro=a("li"),$f=o("adding contents from a git repo"),or=f(),Fe=a("p"),To=a("strong"),jf=o("tip: use COPY as default, unless you need the additional features of ADD."),Xf=o(" This is to prevent unwanted side effects!"),sr=f(),U=a("p"),Qf=o("Multiple "),Lo=a("code"),Zf=o("<src>"),Jf=o(" can be specified, and the last argument will be treated as the "),No=a("code"),gf=o("<dest>"),ep=o("."),ar=f(),ue=a("p"),tp=o("All "),Ho=a("code"),lp=o("<src>"),op=o(" relative paths must be inside context of the build!"),ir=f(),Xt=a("h4"),sp=o("ENV"),rr=f(),Qt=a("p"),ap=o("Sets an environment variable"),nr=f(),Be=a("pre"),cr=f(),Zt=a("h4"),ip=o("EXPOSE"),fr=f(),Jt=a("p"),rp=o("Instructs Docker that container should listen on specified network ports at runtime."),pr=f(),qe=a("pre"),dr=f(),H=a("p"),Ao=a("strong"),np=o("Ports are not automatically published"),cp=o(`, and this command is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),So=a("code"),fp=o("-P"),pp=o(" flag (which maps exposed ports in container to random ports in native host machine), or "),Mo=a("code"),dp=o("-p"),up=o(" to explicitly map ports from containers to your localhost."),ur=f(),gt=a("h4"),Ep=o("VOLUME"),Er=f(),el=a("p"),mp=o(`Marks the directory(s) within the container as an external drive from native host or other containers.
This allows files to be accessed from outside the containers.`),mr=f(),ze=a("pre"),vr=f(),Ee=a("p"),vp=o("Note that where this (container) directory maps to in your native host is "),xo=a("strong"),hp=o("specified when you build or run the container"),kp=o("."),hr=f(),tl=a("h4"),_p=o("WORKDIR"),kr=f(),m=a("p"),Dp=o("Sets working directory for any "),Uo=a("code"),wp=o("RUN"),Op=o(", "),Go=a("code"),bp=o("CMD"),yp=o(", "),Yo=a("code"),Cp=o("ENTRYPOINT"),Ip=o(", "),Ko=a("code"),Pp=o("COPY"),Rp=o(", "),Wo=a("code"),Tp=o("ADD"),Lp=o(" instructions that follows."),_r=f(),$e=a("pre"),Dr=f(),me=a("p"),Np=o("Multiple "),Vo=a("code"),Hp=o("WORKDIR"),Ap=o(" can be used in a dockerfile."),wr=f(),G=a("p"),Sp=o("If not specified, default directory is "),Fo=a("code"),Mp=o("/"),xp=o(`.
But if you are pulling from an image, chances are `),Bo=a("code"),Up=o("WORKDIR"),Gp=o(" already been set in your base image and it will be brought over."),Or=f(),ll=a("p"),je=a("strong"),Yp=o("tip: explicitly set "),qo=a("code"),Kp=o("WORKDIR"),Wp=o(" to prevent unintended operations in unknown dirs"),br=f(),Y=a("p"),Vp=o("It is also possible to resolve env variables previously set by "),zo=a("code"),Fp=o("ENV"),Bp=o(", e.g. "),$o=a("code"),qp=o("WORKDIR $DIRPATH_ENV_VAR"),zp=o("."),yr=f(),ol=a("h4"),$p=o("ARG"),Cr=f(),K=a("p"),jp=o("Defines a variable that users can pass values into during "),jo=a("code"),Xp=o("docker build"),Qp=o(" by using "),Xo=a("code"),Zp=o("--build-arg <argname>=<value>"),Jp=o(" flag."),Ir=f(),Xe=a("pre"),Pr=f(),A=a("p"),Qo=a("code"),gp=o("ENV"),ed=o(" variables will overwrite "),Zo=a("code"),td=o("ARG"),ld=o(" variables if they are the same name (at the point where the "),Jo=a("code"),od=o("ENV"),sd=o(" variable is defined)."),Rr=f(),sl=a("h4"),ad=o("ONBUILD"),Tr=f(),al=a("p"),id=o("Adds a trigger to the image that will execute dockerfile instructions when the current image is used as the base for another build."),Lr=f(),Qe=a("pre"),Nr=f(),il=a("p"),rd=o("This command is usful when when you are building a base image that will be distributed to other people, and instructions that depend on other people\u2019s files needs to be run. Example, you could add:"),Hr=f(),Ze=a("pre"),Ar=f(),W=a("p"),nd=o("The instructions specified are triggered "),go=a("em"),cd=o("immediately"),fd=o(" after the "),es=a("code"),pd=o("FROM"),dd=o(" instruction in the child image."),Sr=f(),Je=a("p"),ts=a("code"),ud=o("ONBUILD"),Ed=o(" triggers are not inherited by children images."),Mr=f(),rl=a("h4"),md=o("STOPSIGNAL"),xr=f(),nl=a("p"),vd=o("Sets the system call signal that will cause the container to exit."),Ur=f(),ge=a("pre"),Gr=f(),V=a("ul"),cl=a("li"),hd=o("Default is "),ls=a("code"),kd=o("SIGTERM"),_d=f(),le=a("li"),Dd=o("Can be in "),os=a("code"),wd=o("SIG<NAME>"),Od=o(" format (e.g. "),ss=a("code"),bd=o("SIGKILL"),yd=o(")"),Cd=f(),et=a("li"),Id=o("Can be an unassigned number in kernel\u2019s syscall table (e.g. "),as=a("code"),Pd=o("9"),Rd=o(")"),Yr=f(),fl=a("h4"),Td=o("HEALTHCHECK"),Kr=f(),pl=a("p"),Ld=o("Specifies a command to be run inside the container to check container\u2019s health."),Wr=f(),tt=a("pre"),Vr=f(),lt=a("p"),is=a("code"),Nd=o("OPTIONS"),Hd=o(" include:"),Fr=f(),y=a("ul"),ve=a("li"),rs=a("code"),Ad=o("--interval=DURATION"),Sd=o(" (default "),ns=a("code"),Md=o("30s"),xd=o(")"),Ud=f(),he=a("li"),cs=a("code"),Gd=o("--timeout=DURATION"),Yd=o(" (default "),fs=a("code"),Kd=o("30s"),Wd=o(")"),Vd=f(),ke=a("li"),ps=a("code"),Fd=o("--retries=N"),Bd=o(" (default "),ds=a("code"),qd=o("3"),zd=o(")"),$d=f(),_e=a("li"),us=a("code"),jd=o("--start-period=DURATION"),Xd=o(" (default "),Es=a("code"),Qd=o("0s"),Zd=o(")"),Br=f(),v=a("p"),Jd=o("A container that has "),ms=a("code"),gd=o("HEALTHCHECK"),eu=o(" specified will have a "),vs=a("em"),tu=o("health status"),lu=o(" that can take 3 possible states: "),hs=a("code"),ou=o("starting"),su=o(" | "),ks=a("code"),au=o("healthy"),iu=o(" | "),_s=a("code"),ru=o("unhealthy"),nu=o("."),qr=f(),F=a("p"),cu=o("Whenever a health check passes, health status changes to "),Ds=a("code"),fu=o("healthy"),pu=o(". After a number of consecutive failures, health status changes to "),ws=a("code"),du=o("unhealthy"),uu=o("."),zr=f(),B=a("p"),Eu=o(`Health checks are run after every interval.
Health checks are considered failed when commands runs for longer than timeout.
When consecutive failures reaches max retries, or command exits with non zero status code `),Os=a("code"),mu=o("0"),vu=o(", "),bs=a("em"),hu=o("health status"),ku=o(" will change to unhealthy."),$r=f(),dl=a("h4"),_u=o("SHELL"),jr=f(),q=a("p"),Du=o("Specifies the default shell used for shell form of commands. Default is set to "),ys=a("code"),wu=o('["/bin/sh", "-c"]'),Ou=o(" for Linux containers and "),Cs=a("code"),bu=o('["cmd", "/S", "/C"]'),yu=o(" for Windows containers."),Xr=f(),ot=a("pre"),Qr=f(),ul=a("h4"),Cu=o("USER"),Zr=f(),El=a("p"),Iu=o("Sets the username/UID to use for the remainder of the Docker build stage."),Jr=f(),st=a("pre"),gr=f(),ml=a("p"),Pu=o(`This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),en=f(),vl=a("h4"),Ru=o("LABEL"),tn=f(),De=a("p"),Tu=o("Adds metadata to an image and are inherited by child images. You can view an image\u2019s labels using "),Is=a("code"),Lu=o("docker image inspect"),Nu=o("."),ln=f(),at=a("pre"),on=f(),hl=a("h3"),Hu=o("Environment Replacement"),sn=f(),we=a("p"),Au=o("Some Dockerfile instructions are able to read environment variables created by "),Ps=a("code"),Su=o("ENV"),Mu=o(" commands, and replace them with the values that those environment variables hold."),an=f(),z=a("p"),xu=o("The syntax is "),Rs=a("code"),Uu=o("$variable_name"),Gu=o(" or "),Ts=a("code"),Yu=o("${variable_name}"),Ku=o(" within a Dockerfile."),rn=f(),Oe=a("ul"),$=a("li"),Ls=a("code"),Wu=o("${variable:-word}"),Vu=o(" to set "),Ns=a("code"),Fu=o("word"),Bu=o(" as default value when "),Hs=a("code"),qu=o("variable"),zu=o(" is not set"),$u=f(),k=a("li"),As=a("code"),ju=o("${variable:+word}"),Xu=o(" to set "),Ss=a("code"),Qu=o("word"),Zu=o(" as "),Ms=a("code"),Ju=o("variable"),gu=o(" when "),xs=a("code"),eE=o("variable"),tE=o(" has already been set, otherwise "),Us=a("code"),lE=o("variable"),oE=o(" will be empty string."),nn=f(),d=a("p"),sE=o("Dockerfile instructions that support environment variables are: "),Gs=a("code"),aE=o("ADD"),iE=o(", "),Ys=a("code"),rE=o("COPY"),nE=o(", "),Ks=a("code"),cE=o("ENV"),fE=o(", "),Ws=a("code"),pE=o("EXPOSE"),dE=o(", "),Vs=a("code"),uE=o("FROM"),EE=o(", "),Fs=a("code"),mE=o("LABEL"),vE=o(", "),Bs=a("code"),hE=o("STOPSIGNAL"),kE=o(", "),qs=a("code"),_E=o("USER"),DE=o(", "),zs=a("code"),wE=o("VOLUME"),OE=o(", "),$s=a("code"),bE=o("WORKDIR"),yE=o(", "),js=a("code"),CE=o("ONBUILD"),IE=o("."),cn=f(),it=a("pre"),fn=f(),kl=a("h3"),Xs=a("code"),PE=o(".dockerignore"),pn=f(),C=a("p"),RE=o("Similar to "),Qs=a("code"),TE=o(".gitignore"),LE=o(", this file contains a list of files and directories that docker should "),Zs=a("strong"),NE=o("exclude"),HE=o(" from the "),Js=a("em"),AE=o("context"),SE=o(" of a docker build."),dn=f(),_l=a("p"),ME=o("This is useful for preventing sending of large or sensitive files to docker daemon."),un=f(),En=a("hr"),mn=f(),Dl=a("h2"),xE=o("useful docker CLI commands"),vn=f(),wl=a("h3"),UE=o("docker run"),hn=f(),Ol=a("p"),GE=o("Runs your images as isolated containers."),kn=f(),bl=a("p"),gs=a("code"),YE=o("docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]"),_n=f(),yl=a("p"),h=a("em"),KE=o("note: "),ea=a("code"),WE=o("docker run"),VE=o("\u2019s "),ta=a("code"),FE=o("[OPTIONS]"),BE=o(" are specified "),la=a("strong"),qE=o("before"),zE=o(" the image name, whilst arguments ("),oa=a("code"),$E=o("[ARG...]"),jE=o(") for the command to be executed within the container is "),sa=a("strong"),XE=o("AFTER"),QE=o(" the image name and command."),Dn=f(),Cl=a("p"),ZE=o("Common options to specify:"),wn=f(),_=a("ul"),rt=a("li"),aa=a("code"),JE=o("-d"),gE=o(" : run in detached mode so the terminal of the machine does not continouously stream container\u2019s "),ia=a("code"),em=o("stdout"),tm=f(),ra=a("li"),na=a("code"),lm=o("-p"),om=f(),ca=a("li"),fa=a("code"),sm=o("-i"),am=f(),pa=a("li"),da=a("code"),im=o("-t"),rm=f(),ua=a("li"),Ea=a("code"),nm=o("--name"),On=f(),Il=a("h3"),cm=o("docker build"),bn=f(),Pl=a("h3"),fm=o("docker image"),yn=f(),Rl=a("h3"),pm=o("docker container"),Cn=f(),Tl=a("h3"),dm=o("docker network"),In=f(),Ll=a("h3"),um=o("docker volume"),Pn=f(),Nl=a("h3"),Em=o("docker logs"),Rn=f(),j=a("p"),mm=o("Retrieves container\u2019s logs (to "),ma=a("code"),vm=o("STDOUT"),hm=o(" and "),va=a("code"),km=o("STDERR"),_m=o(") to your CLI."),Tn=f(),nt=a("pre"),Ln=f(),Hl=a("p"),Dm=o("Common options to specify:"),Nn=f(),D=a("ul"),be=a("li"),ha=a("code"),wm=o("--follow"),Om=o(" / "),ka=a("code"),bm=o("-f"),ym=o(" : continuously streams the log output"),Cm=f(),ye=a("li"),_a=a("code"),Im=o("--timestamps"),Pm=o(" / "),Da=a("code"),Rm=o("-t"),Tm=o(" : show timestamps of logs"),Lm=f(),X=a("li"),wa=a("code"),Nm=o("--tail"),Hm=o(" / "),Oa=a("code"),Am=o("-n"),Sm=o(" : number of lines to show from end of the log (defaults to "),ba=a("code"),Mm=o("all"),xm=o(")"),Um=f(),I=a("li"),ya=a("code"),Gm=o("--since"),Ym=o(" : show logs "),Ca=a("em"),Km=o("since"),Wm=o(" timestamp ("),Ia=a("code"),Vm=o("2013-01-02T13:37:00Z"),Fm=o(") or relative ("),Pa=a("code"),Bm=o("42m"),qm=o(")"),zm=f(),Ce=a("li"),Ra=a("code"),$m=o("--until"),jm=o(" : show logs "),Ta=a("em"),Xm=o("before"),Qm=o(" timestamp or relative"),Hn=f(),Al=a("h3"),Zm=o("docker inspect"),An=f(),Sl=a("p"),Jm=o(`Returns detailed information about docker objects.
Objects can be images, containers, networks, volumes, etc.`),Sn=f(),ct=a("pre"),Mn=f(),Ml=a("h3"),gm=o("docker ps"),xn=f(),xl=a("p"),e1=o(`List all containers and information about them (such as ID, image name, ports etc.)
Defaults to listing running containers only.`),Un=f(),ft=a("pre"),Gn=f(),Ul=a("p"),t1=o("Useful options:"),Yn=f(),w=a("ul"),Ie=a("li"),La=a("code"),l1=o("--all"),o1=o(" / "),Na=a("code"),s1=o("-a"),a1=o(" : lists all containers, including those that are not running"),i1=f(),Q=a("li"),Ha=a("code"),r1=o("--size"),n1=o(" / "),Aa=a("code"),c1=o("-s"),f1=o(" : include size of the container in output. Shows both size of container (i.e. writable layer), and "),Sa=a("code"),p1=o("virtual"),d1=o(" size of total disk-space used, i.e. container + image."),u1=f(),Gl=a("li"),Ma=a("code"),E1=o("--no-trunc"),m1=o(" : prevent truncation in table output"),v1=f(),Z=a("li"),xa=a("code"),h1=o("--filter"),k1=o(" / "),Ua=a("code"),_1=o("-f"),D1=o(" : filters the output with key-value pairs. E.g. "),Ga=a("code"),w1=o('docker ps -f "name=mysparkcontainer"'),O1=o("."),b1=f(),O=a("li"),Ya=a("code"),y1=o("--format"),C1=o(" : formats the output using Go template. Placeholder information include "),Ka=a("code"),I1=o(".ID"),P1=o(", "),Wa=a("code"),R1=o(".Image"),T1=o(", "),Va=a("code"),L1=o(".Names"),N1=o(" etc."),pt=a("ul"),Pe=a("li"),Fa=a("code"),H1=o('docker ps --format "{{.ID}}: {{.Name}}"'),A1=o(" will print out "),Ba=a("code"),S1=o("abcdef: name1"),M1=o(" etc."),x1=f(),Yl=a("li"),qa=a("code"),U1=o('docker ps --format "table {{.ID}}\\t{{.Name}}"'),G1=o(" will print the output in a table with header row."),Kn=f(),Kl=a("h3"),Y1=o("docker stats"),Wn=f(),Wl=a("p"),K1=o(`Display live info about containers\u2019 resource usage (kind of like Window\u2019s task manager).
Defaults to only showing running containers.`),Vn=f(),dt=a("pre"),Fn=f(),Vl=a("p"),W1=o("Useful options:"),Bn=f(),P=a("ul"),Re=a("li"),za=a("code"),V1=o("--all"),F1=o(" / "),$a=a("code"),B1=o("-a"),q1=o(" : lists all containers, including those that are not running"),z1=f(),Fl=a("li"),ja=a("code"),$1=o("--no-trunc"),j1=o(" : Prevent truncation in table output"),X1=f(),Bl=a("li"),Xa=a("code"),Q1=o("--no-stream"),Z1=o(" : get only a \u2018snapshot\u2019 of the current stats"),J1=f(),ql=a("li"),Qa=a("code"),g1=o("--format"),ev=o(" : formats the output using Go template."),qn=f(),zn=a("hr"),$n=f(),zl=a("h2"),tv=o("networking"),jn=f(),Xn=a("hr"),Qn=f(),$l=a("h2"),lv=o("disks"),this.h()},l(e){se=i(e,"H1",{});var n=r(se);hc=s(n,C4),n.forEach(t),ri=p(e),_t=i(e,"P",{});var Ev=r(_t);kc=s(Ev,"Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),Ev.forEach(t),ni=p(e),Dt=i(e,"P",{});var mv=r(Dt);_c=s(mv,`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),mv.forEach(t),ci=p(e),wt=i(e,"H2",{});var vv=r(wt);Dc=s(vv,"key concepts"),vv.forEach(t),fi=p(e),Ot=i(e,"H3",{});var hv=r(Ot);wc=s(hv,"Docker images"),hv.forEach(t),pi=p(e),bt=i(e,"P",{});var kv=r(bt);Oc=s(kv,`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),kv.forEach(t),di=p(e),yt=i(e,"P",{});var _v=r(yt);bc=s(_v,"Images are often build on top of one another"),_v.forEach(t),ui=p(e),ae=i(e,"UL",{});var Zn=r(ae);N=i(Zn,"LI",{});var Te=r(N);yc=s(Te,"e.g. you start with "),no=i(Te,"CODE",{});var Dv=r(no);Cc=s(Dv,"ubuntu"),Dv.forEach(t),Ic=s(Te," image, install "),co=i(Te,"CODE",{});var wv=r(co);Pc=s(wv,"python"),wv.forEach(t),Rc=s(Te," in that ubuntu image, install "),fo=i(Te,"CODE",{});var Ov=r(fo);Tc=s(Ov,"pytorch"),Ov.forEach(t),Lc=s(Te," package, install pretrained models."),Te.forEach(t),Nc=p(Zn),Se=i(Zn,"LI",{});var Jn=r(Se);Hc=s(Jn,"or you can start with a published "),po=i(Jn,"CODE",{});var bv=r(po);Ac=s(bv,"python"),bv.forEach(t),Sc=s(Jn," image, and install your packages there."),Jn.forEach(t),Zn.forEach(t),Ei=p(e),Ct=i(e,"P",{});var yv=r(Ct);Mc=s(yv,"Published images are available for download in Docker registries."),yv.forEach(t),mi=p(e),It=i(e,"H4",{});var Cv=r(It);xc=s(Cv,"Dockerfile"),Cv.forEach(t),vi=p(e),Me=i(e,"P",{});var ov=r(Me);uo=i(ov,"CODE",{});var Iv=r(uo);Uc=s(Iv,"Dockerfile"),Iv.forEach(t),Gc=s(ov,"s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),ov.forEach(t),hi=p(e),Pt=i(e,"H3",{});var Pv=r(Pt);Yc=s(Pv,"Docker containers"),Pv.forEach(t),ki=p(e),ie=i(e,"P",{});var gn=r(ie);Kc=s(gn,`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),Eo=i(gn,"CODE",{});var Rv=r(Eo);Wc=s(Rv,"nodejs"),Rv.forEach(t),Vc=s(gn," image, but one exposes port 8888 and another exposes port 8899."),gn.forEach(t),_i=p(e),Rt=i(e,"H3",{});var Tv=r(Rt);Fc=s(Tv,"Docker registries"),Tv.forEach(t),Di=p(e),Tt=i(e,"P",{});var Lv=r(Tt);Bc=s(Lv,"Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),Lv.forEach(t),wi=p(e),Lt=i(e,"H3",{});var Nv=r(Lt);qc=s(Nv,"Docker daemon"),Nv.forEach(t),Oi=p(e),re=i(e,"P",{});var ec=r(re);zc=s(ec,"This is the underlying "),mo=i(ec,"CODE",{});var Hv=r(mo);$c=s(Hv,"dockerd"),Hv.forEach(t),jc=s(ec," process that helps you build images and run containers. It will listen for Docker API requests"),ec.forEach(t),bi=p(e),Nt=i(e,"H3",{});var Av=r(Nt);Xc=s(Av,"Docker client"),Av.forEach(t),yi=p(e),b=i(e,"P",{});var Le=r(b);Qc=s(Le,"The docker client "),vo=i(Le,"CODE",{});var Sv=r(vo);Zc=s(Sv,"docker"),Sv.forEach(t),Jc=s(Le," is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),ho=i(Le,"CODE",{});var Mv=r(ho);gc=s(Mv,"docker"),Mv.forEach(t),ef=s(Le," command sends Docker API requests to "),ko=i(Le,"CODE",{});var xv=r(ko);tf=s(xv,"dockerd"),xv.forEach(t),lf=s(Le,"."),Le.forEach(t),Ci=p(e),Ht=i(e,"H3",{});var Uv=r(Ht);of=s(Uv,"Docker compose"),Uv.forEach(t),Ii=p(e),ne=i(e,"P",{});var tc=r(ne);sf=s(tc,"Docker compose is a tool that helps with running "),_o=i(tc,"EM",{});var Gv=r(_o);af=s(Gv,"multi-container"),Gv.forEach(t),rf=s(tc," Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),tc.forEach(t),Pi=p(e),At=i(e,"P",{});var Yv=r(At);nf=s(Yv,"For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),Yv.forEach(t),Ri=p(e),St=i(e,"H4",{});var Kv=r(St);cf=s(Kv,"Difference between Kubernetes"),Kv.forEach(t),Ti=p(e),ce=i(e,"P",{});var lc=r(ce);ff=s(lc,"Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),Do=i(lc,"EM",{});var Wv=r(Do);pf=s(Wv,"single-node"),Wv.forEach(t),df=s(lc,", whereas Kubernetes is a full multi-node container manager."),lc.forEach(t),Li=p(e),Mt=i(e,"P",{});var Vv=r(Mt);uf=s(Vv,"Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),Vv.forEach(t),Ni=p(e),Hi=i(e,"HR",{}),Ai=p(e),xt=i(e,"H2",{});var Fv=r(xt);Ef=s(Fv,"Dockerfile"),Fv.forEach(t),Si=p(e),Ut=i(e,"H3",{});var Bv=r(Ut);mf=s(Bv,"Commands"),Bv.forEach(t),Mi=p(e),Gt=i(e,"H4",{});var qv=r(Gt);vf=s(qv,"FROM"),qv.forEach(t),xi=p(e),fe=i(e,"P",{});var oc=r(fe);hf=s(oc,"All dockerfile starts with the "),wo=i(oc,"CODE",{});var zv=r(wo);kf=s(zv,"FROM"),zv.forEach(t),_f=s(oc," command. It pulls the base image from Dockerhub to start to build your image."),oc.forEach(t),Ui=p(e),xe=i(e,"PRE",{class:!0});var Q4=r(xe);Q4.forEach(t),Gi=p(e),Yt=i(e,"H4",{});var $v=r(Yt);Df=s($v,"RUN"),$v.forEach(t),Yi=p(e),Kt=i(e,"P",{});var jv=r(Kt);wf=s(jv,"Runs a command or executable. It has two forms"),jv.forEach(t),Ki=p(e),Ue=i(e,"PRE",{class:!0});var Z4=r(Ue);Z4.forEach(t),Wi=p(e),Wt=i(e,"H4",{});var Xv=r(Wt);Of=s(Xv,"CMD"),Xv.forEach(t),Vi=p(e),Vt=i(e,"P",{});var Qv=r(Vt);bf=s(Qv,"Provides defaults for an executing container. The arguments will be appended to ENTRYPOINT."),Qv.forEach(t),Fi=p(e),Ge=i(e,"PRE",{class:!0});var J4=r(Ge);J4.forEach(t),Bi=p(e),Ft=i(e,"H4",{});var Zv=r(Ft);yf=s(Zv,"ENTRYPOINT"),Zv.forEach(t),qi=p(e),Bt=i(e,"P",{});var Jv=r(Bt);Cf=s(Jv,`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),Jv.forEach(t),zi=p(e),Ye=i(e,"PRE",{class:!0});var g4=r(Ye);g4.forEach(t),$i=p(e),qt=i(e,"H4",{});var gv=r(qt);If=s(gv,"COPY"),gv.forEach(t),ji=p(e),zt=i(e,"P",{});var eh=r(zt);Pf=s(eh,"Copies file from your native host into the container image."),eh.forEach(t),Xi=p(e),Ke=i(e,"PRE",{class:!0});var ek=r(Ke);ek.forEach(t),Qi=p(e),M=i(e,"P",{});var jl=r(M);Rf=s(jl,"Multiple "),Oo=i(jl,"CODE",{});var th=r(Oo);Tf=s(th,"<src>"),th.forEach(t),Lf=s(jl," can be specified, and the last argument will be treated as the "),bo=i(jl,"CODE",{});var lh=r(bo);Nf=s(lh,"<dest>"),lh.forEach(t),Hf=s(jl,"."),jl.forEach(t),Zi=p(e),pe=i(e,"P",{});var sc=r(pe);Af=s(sc,"All "),yo=i(sc,"CODE",{});var oh=r(yo);Sf=s(oh,"<src>"),oh.forEach(t),Mf=s(sc," relative paths must be inside context of the build!"),sc.forEach(t),Ji=p(e),$t=i(e,"H4",{});var sh=r($t);xf=s(sh,"ADD"),sh.forEach(t),gi=p(e),jt=i(e,"P",{});var ah=r(jt);Uf=s(ah,"Copies file from your native host into the container image."),ah.forEach(t),er=p(e),We=i(e,"PRE",{class:!0});var tk=r(We);tk.forEach(t),tr=p(e),de=i(e,"P",{});var ac=r(de);Gf=s(ac,"Compared to COPY, "),Co=i(ac,"CODE",{});var ih=r(Co);Yf=s(ih,"ADD"),ih.forEach(t),Kf=s(ac," has added utilities like:"),ac.forEach(t),lr=p(e),x=i(e,"UL",{});var Xl=r(x);Io=i(Xl,"LI",{});var rh=r(Io);Wf=s(rh,"being able to download files from URLs then copying them into the image"),rh.forEach(t),Vf=p(Xl),Ve=i(Xl,"LI",{});var ic=r(Ve);Ff=s(ic,"extracting contents of "),Po=i(ic,"CODE",{});var nh=r(Po);Bf=s(nh,".tar"),nh.forEach(t),qf=s(ic," files before copying into image"),ic.forEach(t),zf=p(Xl),Ro=i(Xl,"LI",{});var ch=r(Ro);$f=s(ch,"adding contents from a git repo"),ch.forEach(t),Xl.forEach(t),or=p(e),Fe=i(e,"P",{});var sv=r(Fe);To=i(sv,"STRONG",{});var fh=r(To);jf=s(fh,"tip: use COPY as default, unless you need the additional features of ADD."),fh.forEach(t),Xf=s(sv," This is to prevent unwanted side effects!"),sv.forEach(t),sr=p(e),U=i(e,"P",{});var Ql=r(U);Qf=s(Ql,"Multiple "),Lo=i(Ql,"CODE",{});var ph=r(Lo);Zf=s(ph,"<src>"),ph.forEach(t),Jf=s(Ql," can be specified, and the last argument will be treated as the "),No=i(Ql,"CODE",{});var dh=r(No);gf=s(dh,"<dest>"),dh.forEach(t),ep=s(Ql,"."),Ql.forEach(t),ar=p(e),ue=i(e,"P",{});var rc=r(ue);tp=s(rc,"All "),Ho=i(rc,"CODE",{});var uh=r(Ho);lp=s(uh,"<src>"),uh.forEach(t),op=s(rc," relative paths must be inside context of the build!"),rc.forEach(t),ir=p(e),Xt=i(e,"H4",{});var Eh=r(Xt);sp=s(Eh,"ENV"),Eh.forEach(t),rr=p(e),Qt=i(e,"P",{});var mh=r(Qt);ap=s(mh,"Sets an environment variable"),mh.forEach(t),nr=p(e),Be=i(e,"PRE",{class:!0});var lk=r(Be);lk.forEach(t),cr=p(e),Zt=i(e,"H4",{});var vh=r(Zt);ip=s(vh,"EXPOSE"),vh.forEach(t),fr=p(e),Jt=i(e,"P",{});var hh=r(Jt);rp=s(hh,"Instructs Docker that container should listen on specified network ports at runtime."),hh.forEach(t),pr=p(e),qe=i(e,"PRE",{class:!0});var ok=r(qe);ok.forEach(t),dr=p(e),H=i(e,"P",{});var ut=r(H);Ao=i(ut,"STRONG",{});var kh=r(Ao);np=s(kh,"Ports are not automatically published"),kh.forEach(t),cp=s(ut,`, and this command is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),So=i(ut,"CODE",{});var _h=r(So);fp=s(_h,"-P"),_h.forEach(t),pp=s(ut," flag (which maps exposed ports in container to random ports in native host machine), or "),Mo=i(ut,"CODE",{});var Dh=r(Mo);dp=s(Dh,"-p"),Dh.forEach(t),up=s(ut," to explicitly map ports from containers to your localhost."),ut.forEach(t),ur=p(e),gt=i(e,"H4",{});var wh=r(gt);Ep=s(wh,"VOLUME"),wh.forEach(t),Er=p(e),el=i(e,"P",{});var Oh=r(el);mp=s(Oh,`Marks the directory(s) within the container as an external drive from native host or other containers.
This allows files to be accessed from outside the containers.`),Oh.forEach(t),mr=p(e),ze=i(e,"PRE",{class:!0});var sk=r(ze);sk.forEach(t),vr=p(e),Ee=i(e,"P",{});var nc=r(Ee);vp=s(nc,"Note that where this (container) directory maps to in your native host is "),xo=i(nc,"STRONG",{});var bh=r(xo);hp=s(bh,"specified when you build or run the container"),bh.forEach(t),kp=s(nc,"."),nc.forEach(t),hr=p(e),tl=i(e,"H4",{});var yh=r(tl);_p=s(yh,"WORKDIR"),yh.forEach(t),kr=p(e),m=i(e,"P",{});var R=r(m);Dp=s(R,"Sets working directory for any "),Uo=i(R,"CODE",{});var Ch=r(Uo);wp=s(Ch,"RUN"),Ch.forEach(t),Op=s(R,", "),Go=i(R,"CODE",{});var Ih=r(Go);bp=s(Ih,"CMD"),Ih.forEach(t),yp=s(R,", "),Yo=i(R,"CODE",{});var Ph=r(Yo);Cp=s(Ph,"ENTRYPOINT"),Ph.forEach(t),Ip=s(R,", "),Ko=i(R,"CODE",{});var Rh=r(Ko);Pp=s(Rh,"COPY"),Rh.forEach(t),Rp=s(R,", "),Wo=i(R,"CODE",{});var Th=r(Wo);Tp=s(Th,"ADD"),Th.forEach(t),Lp=s(R," instructions that follows."),R.forEach(t),_r=p(e),$e=i(e,"PRE",{class:!0});var ak=r($e);ak.forEach(t),Dr=p(e),me=i(e,"P",{});var cc=r(me);Np=s(cc,"Multiple "),Vo=i(cc,"CODE",{});var Lh=r(Vo);Hp=s(Lh,"WORKDIR"),Lh.forEach(t),Ap=s(cc," can be used in a dockerfile."),cc.forEach(t),wr=p(e),G=i(e,"P",{});var Zl=r(G);Sp=s(Zl,"If not specified, default directory is "),Fo=i(Zl,"CODE",{});var Nh=r(Fo);Mp=s(Nh,"/"),Nh.forEach(t),xp=s(Zl,`.
But if you are pulling from an image, chances are `),Bo=i(Zl,"CODE",{});var Hh=r(Bo);Up=s(Hh,"WORKDIR"),Hh.forEach(t),Gp=s(Zl," already been set in your base image and it will be brought over."),Zl.forEach(t),Or=p(e),ll=i(e,"P",{});var Ah=r(ll);je=i(Ah,"STRONG",{});var fc=r(je);Yp=s(fc,"tip: explicitly set "),qo=i(fc,"CODE",{});var Sh=r(qo);Kp=s(Sh,"WORKDIR"),Sh.forEach(t),Wp=s(fc," to prevent unintended operations in unknown dirs"),fc.forEach(t),Ah.forEach(t),br=p(e),Y=i(e,"P",{});var Jl=r(Y);Vp=s(Jl,"It is also possible to resolve env variables previously set by "),zo=i(Jl,"CODE",{});var Mh=r(zo);Fp=s(Mh,"ENV"),Mh.forEach(t),Bp=s(Jl,", e.g. "),$o=i(Jl,"CODE",{});var xh=r($o);qp=s(xh,"WORKDIR $DIRPATH_ENV_VAR"),xh.forEach(t),zp=s(Jl,"."),Jl.forEach(t),yr=p(e),ol=i(e,"H4",{});var Uh=r(ol);$p=s(Uh,"ARG"),Uh.forEach(t),Cr=p(e),K=i(e,"P",{});var gl=r(K);jp=s(gl,"Defines a variable that users can pass values into during "),jo=i(gl,"CODE",{});var Gh=r(jo);Xp=s(Gh,"docker build"),Gh.forEach(t),Qp=s(gl," by using "),Xo=i(gl,"CODE",{});var Yh=r(Xo);Zp=s(Yh,"--build-arg <argname>=<value>"),Yh.forEach(t),Jp=s(gl," flag."),gl.forEach(t),Ir=p(e),Xe=i(e,"PRE",{class:!0});var ik=r(Xe);ik.forEach(t),Pr=p(e),A=i(e,"P",{});var Et=r(A);Qo=i(Et,"CODE",{});var Kh=r(Qo);gp=s(Kh,"ENV"),Kh.forEach(t),ed=s(Et," variables will overwrite "),Zo=i(Et,"CODE",{});var Wh=r(Zo);td=s(Wh,"ARG"),Wh.forEach(t),ld=s(Et," variables if they are the same name (at the point where the "),Jo=i(Et,"CODE",{});var Vh=r(Jo);od=s(Vh,"ENV"),Vh.forEach(t),sd=s(Et," variable is defined)."),Et.forEach(t),Rr=p(e),sl=i(e,"H4",{});var Fh=r(sl);ad=s(Fh,"ONBUILD"),Fh.forEach(t),Tr=p(e),al=i(e,"P",{});var Bh=r(al);id=s(Bh,"Adds a trigger to the image that will execute dockerfile instructions when the current image is used as the base for another build."),Bh.forEach(t),Lr=p(e),Qe=i(e,"PRE",{class:!0});var rk=r(Qe);rk.forEach(t),Nr=p(e),il=i(e,"P",{});var qh=r(il);rd=s(qh,"This command is usful when when you are building a base image that will be distributed to other people, and instructions that depend on other people\u2019s files needs to be run. Example, you could add:"),qh.forEach(t),Hr=p(e),Ze=i(e,"PRE",{class:!0});var nk=r(Ze);nk.forEach(t),Ar=p(e),W=i(e,"P",{});var eo=r(W);nd=s(eo,"The instructions specified are triggered "),go=i(eo,"EM",{});var zh=r(go);cd=s(zh,"immediately"),zh.forEach(t),fd=s(eo," after the "),es=i(eo,"CODE",{});var $h=r(es);pd=s($h,"FROM"),$h.forEach(t),dd=s(eo," instruction in the child image."),eo.forEach(t),Sr=p(e),Je=i(e,"P",{});var av=r(Je);ts=i(av,"CODE",{});var jh=r(ts);ud=s(jh,"ONBUILD"),jh.forEach(t),Ed=s(av," triggers are not inherited by children images."),av.forEach(t),Mr=p(e),rl=i(e,"H4",{});var Xh=r(rl);md=s(Xh,"STOPSIGNAL"),Xh.forEach(t),xr=p(e),nl=i(e,"P",{});var Qh=r(nl);vd=s(Qh,"Sets the system call signal that will cause the container to exit."),Qh.forEach(t),Ur=p(e),ge=i(e,"PRE",{class:!0});var ck=r(ge);ck.forEach(t),Gr=p(e),V=i(e,"UL",{});var to=r(V);cl=i(to,"LI",{});var iv=r(cl);hd=s(iv,"Default is "),ls=i(iv,"CODE",{});var Zh=r(ls);kd=s(Zh,"SIGTERM"),Zh.forEach(t),iv.forEach(t),_d=p(to),le=i(to,"LI",{});var lo=r(le);Dd=s(lo,"Can be in "),os=i(lo,"CODE",{});var Jh=r(os);wd=s(Jh,"SIG<NAME>"),Jh.forEach(t),Od=s(lo," format (e.g. "),ss=i(lo,"CODE",{});var gh=r(ss);bd=s(gh,"SIGKILL"),gh.forEach(t),yd=s(lo,")"),lo.forEach(t),Cd=p(to),et=i(to,"LI",{});var pc=r(et);Id=s(pc,"Can be an unassigned number in kernel\u2019s syscall table (e.g. "),as=i(pc,"CODE",{});var e3=r(as);Pd=s(e3,"9"),e3.forEach(t),Rd=s(pc,")"),pc.forEach(t),to.forEach(t),Yr=p(e),fl=i(e,"H4",{});var t3=r(fl);Td=s(t3,"HEALTHCHECK"),t3.forEach(t),Kr=p(e),pl=i(e,"P",{});var l3=r(pl);Ld=s(l3,"Specifies a command to be run inside the container to check container\u2019s health."),l3.forEach(t),Wr=p(e),tt=i(e,"PRE",{class:!0});var fk=r(tt);fk.forEach(t),Vr=p(e),lt=i(e,"P",{});var rv=r(lt);is=i(rv,"CODE",{});var o3=r(is);Nd=s(o3,"OPTIONS"),o3.forEach(t),Hd=s(rv," include:"),rv.forEach(t),Fr=p(e),y=i(e,"UL",{});var Ne=r(y);ve=i(Ne,"LI",{});var Za=r(ve);rs=i(Za,"CODE",{});var s3=r(rs);Ad=s(s3,"--interval=DURATION"),s3.forEach(t),Sd=s(Za," (default "),ns=i(Za,"CODE",{});var a3=r(ns);Md=s(a3,"30s"),a3.forEach(t),xd=s(Za,")"),Za.forEach(t),Ud=p(Ne),he=i(Ne,"LI",{});var Ja=r(he);cs=i(Ja,"CODE",{});var i3=r(cs);Gd=s(i3,"--timeout=DURATION"),i3.forEach(t),Yd=s(Ja," (default "),fs=i(Ja,"CODE",{});var r3=r(fs);Kd=s(r3,"30s"),r3.forEach(t),Wd=s(Ja,")"),Ja.forEach(t),Vd=p(Ne),ke=i(Ne,"LI",{});var ga=r(ke);ps=i(ga,"CODE",{});var n3=r(ps);Fd=s(n3,"--retries=N"),n3.forEach(t),Bd=s(ga," (default "),ds=i(ga,"CODE",{});var c3=r(ds);qd=s(c3,"3"),c3.forEach(t),zd=s(ga,")"),ga.forEach(t),$d=p(Ne),_e=i(Ne,"LI",{});var ei=r(_e);us=i(ei,"CODE",{});var f3=r(us);jd=s(f3,"--start-period=DURATION"),f3.forEach(t),Xd=s(ei," (default "),Es=i(ei,"CODE",{});var p3=r(Es);Qd=s(p3,"0s"),p3.forEach(t),Zd=s(ei,")"),ei.forEach(t),Ne.forEach(t),Br=p(e),v=i(e,"P",{});var T=r(v);Jd=s(T,"A container that has "),ms=i(T,"CODE",{});var d3=r(ms);gd=s(d3,"HEALTHCHECK"),d3.forEach(t),eu=s(T," specified will have a "),vs=i(T,"EM",{});var u3=r(vs);tu=s(u3,"health status"),u3.forEach(t),lu=s(T," that can take 3 possible states: "),hs=i(T,"CODE",{});var E3=r(hs);ou=s(E3,"starting"),E3.forEach(t),su=s(T," | "),ks=i(T,"CODE",{});var m3=r(ks);au=s(m3,"healthy"),m3.forEach(t),iu=s(T," | "),_s=i(T,"CODE",{});var v3=r(_s);ru=s(v3,"unhealthy"),v3.forEach(t),nu=s(T,"."),T.forEach(t),qr=p(e),F=i(e,"P",{});var oo=r(F);cu=s(oo,"Whenever a health check passes, health status changes to "),Ds=i(oo,"CODE",{});var h3=r(Ds);fu=s(h3,"healthy"),h3.forEach(t),pu=s(oo,". After a number of consecutive failures, health status changes to "),ws=i(oo,"CODE",{});var k3=r(ws);du=s(k3,"unhealthy"),k3.forEach(t),uu=s(oo,"."),oo.forEach(t),zr=p(e),B=i(e,"P",{});var so=r(B);Eu=s(so,`Health checks are run after every interval.
Health checks are considered failed when commands runs for longer than timeout.
When consecutive failures reaches max retries, or command exits with non zero status code `),Os=i(so,"CODE",{});var _3=r(Os);mu=s(_3,"0"),_3.forEach(t),vu=s(so,", "),bs=i(so,"EM",{});var D3=r(bs);hu=s(D3,"health status"),D3.forEach(t),ku=s(so," will change to unhealthy."),so.forEach(t),$r=p(e),dl=i(e,"H4",{});var w3=r(dl);_u=s(w3,"SHELL"),w3.forEach(t),jr=p(e),q=i(e,"P",{});var ao=r(q);Du=s(ao,"Specifies the default shell used for shell form of commands. Default is set to "),ys=i(ao,"CODE",{});var O3=r(ys);wu=s(O3,'["/bin/sh", "-c"]'),O3.forEach(t),Ou=s(ao," for Linux containers and "),Cs=i(ao,"CODE",{});var b3=r(Cs);bu=s(b3,'["cmd", "/S", "/C"]'),b3.forEach(t),yu=s(ao," for Windows containers."),ao.forEach(t),Xr=p(e),ot=i(e,"PRE",{class:!0});var pk=r(ot);pk.forEach(t),Qr=p(e),ul=i(e,"H4",{});var y3=r(ul);Cu=s(y3,"USER"),y3.forEach(t),Zr=p(e),El=i(e,"P",{});var C3=r(El);Iu=s(C3,"Sets the username/UID to use for the remainder of the Docker build stage."),C3.forEach(t),Jr=p(e),st=i(e,"PRE",{class:!0});var dk=r(st);dk.forEach(t),gr=p(e),ml=i(e,"P",{});var I3=r(ml);Pu=s(I3,`This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),I3.forEach(t),en=p(e),vl=i(e,"H4",{});var P3=r(vl);Ru=s(P3,"LABEL"),P3.forEach(t),tn=p(e),De=i(e,"P",{});var dc=r(De);Tu=s(dc,"Adds metadata to an image and are inherited by child images. You can view an image\u2019s labels using "),Is=i(dc,"CODE",{});var R3=r(Is);Lu=s(R3,"docker image inspect"),R3.forEach(t),Nu=s(dc,"."),dc.forEach(t),ln=p(e),at=i(e,"PRE",{class:!0});var uk=r(at);uk.forEach(t),on=p(e),hl=i(e,"H3",{});var T3=r(hl);Hu=s(T3,"Environment Replacement"),T3.forEach(t),sn=p(e),we=i(e,"P",{});var uc=r(we);Au=s(uc,"Some Dockerfile instructions are able to read environment variables created by "),Ps=i(uc,"CODE",{});var L3=r(Ps);Su=s(L3,"ENV"),L3.forEach(t),Mu=s(uc," commands, and replace them with the values that those environment variables hold."),uc.forEach(t),an=p(e),z=i(e,"P",{});var io=r(z);xu=s(io,"The syntax is "),Rs=i(io,"CODE",{});var N3=r(Rs);Uu=s(N3,"$variable_name"),N3.forEach(t),Gu=s(io," or "),Ts=i(io,"CODE",{});var H3=r(Ts);Yu=s(H3,"${variable_name}"),H3.forEach(t),Ku=s(io," within a Dockerfile."),io.forEach(t),rn=p(e),Oe=i(e,"UL",{});var Ec=r(Oe);$=i(Ec,"LI",{});var mt=r($);Ls=i(mt,"CODE",{});var A3=r(Ls);Wu=s(A3,"${variable:-word}"),A3.forEach(t),Vu=s(mt," to set "),Ns=i(mt,"CODE",{});var S3=r(Ns);Fu=s(S3,"word"),S3.forEach(t),Bu=s(mt," as default value when "),Hs=i(mt,"CODE",{});var M3=r(Hs);qu=s(M3,"variable"),M3.forEach(t),zu=s(mt," is not set"),mt.forEach(t),$u=p(Ec),k=i(Ec,"LI",{});var S=r(k);As=i(S,"CODE",{});var x3=r(As);ju=s(x3,"${variable:+word}"),x3.forEach(t),Xu=s(S," to set "),Ss=i(S,"CODE",{});var U3=r(Ss);Qu=s(U3,"word"),U3.forEach(t),Zu=s(S," as "),Ms=i(S,"CODE",{});var G3=r(Ms);Ju=s(G3,"variable"),G3.forEach(t),gu=s(S," when "),xs=i(S,"CODE",{});var Y3=r(xs);eE=s(Y3,"variable"),Y3.forEach(t),tE=s(S," has already been set, otherwise "),Us=i(S,"CODE",{});var K3=r(Us);lE=s(K3,"variable"),K3.forEach(t),oE=s(S," will be empty string."),S.forEach(t),Ec.forEach(t),nn=p(e),d=i(e,"P",{});var u=r(d);sE=s(u,"Dockerfile instructions that support environment variables are: "),Gs=i(u,"CODE",{});var W3=r(Gs);aE=s(W3,"ADD"),W3.forEach(t),iE=s(u,", "),Ys=i(u,"CODE",{});var V3=r(Ys);rE=s(V3,"COPY"),V3.forEach(t),nE=s(u,", "),Ks=i(u,"CODE",{});var F3=r(Ks);cE=s(F3,"ENV"),F3.forEach(t),fE=s(u,", "),Ws=i(u,"CODE",{});var B3=r(Ws);pE=s(B3,"EXPOSE"),B3.forEach(t),dE=s(u,", "),Vs=i(u,"CODE",{});var q3=r(Vs);uE=s(q3,"FROM"),q3.forEach(t),EE=s(u,", "),Fs=i(u,"CODE",{});var z3=r(Fs);mE=s(z3,"LABEL"),z3.forEach(t),vE=s(u,", "),Bs=i(u,"CODE",{});var $3=r(Bs);hE=s($3,"STOPSIGNAL"),$3.forEach(t),kE=s(u,", "),qs=i(u,"CODE",{});var j3=r(qs);_E=s(j3,"USER"),j3.forEach(t),DE=s(u,", "),zs=i(u,"CODE",{});var X3=r(zs);wE=s(X3,"VOLUME"),X3.forEach(t),OE=s(u,", "),$s=i(u,"CODE",{});var Q3=r($s);bE=s(Q3,"WORKDIR"),Q3.forEach(t),yE=s(u,", "),js=i(u,"CODE",{});var Z3=r(js);CE=s(Z3,"ONBUILD"),Z3.forEach(t),IE=s(u,"."),u.forEach(t),cn=p(e),it=i(e,"PRE",{class:!0});var Ek=r(it);Ek.forEach(t),fn=p(e),kl=i(e,"H3",{});var J3=r(kl);Xs=i(J3,"CODE",{});var g3=r(Xs);PE=s(g3,".dockerignore"),g3.forEach(t),J3.forEach(t),pn=p(e),C=i(e,"P",{});var He=r(C);RE=s(He,"Similar to "),Qs=i(He,"CODE",{});var e2=r(Qs);TE=s(e2,".gitignore"),e2.forEach(t),LE=s(He,", this file contains a list of files and directories that docker should "),Zs=i(He,"STRONG",{});var t2=r(Zs);NE=s(t2,"exclude"),t2.forEach(t),HE=s(He," from the "),Js=i(He,"EM",{});var l2=r(Js);AE=s(l2,"context"),l2.forEach(t),SE=s(He," of a docker build."),He.forEach(t),dn=p(e),_l=i(e,"P",{});var o2=r(_l);ME=s(o2,"This is useful for preventing sending of large or sensitive files to docker daemon."),o2.forEach(t),un=p(e),En=i(e,"HR",{}),mn=p(e),Dl=i(e,"H2",{});var s2=r(Dl);xE=s(s2,"useful docker CLI commands"),s2.forEach(t),vn=p(e),wl=i(e,"H3",{});var a2=r(wl);UE=s(a2,"docker run"),a2.forEach(t),hn=p(e),Ol=i(e,"P",{});var i2=r(Ol);GE=s(i2,"Runs your images as isolated containers."),i2.forEach(t),kn=p(e),bl=i(e,"P",{});var r2=r(bl);gs=i(r2,"CODE",{});var n2=r(gs);YE=s(n2,"docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]"),n2.forEach(t),r2.forEach(t),_n=p(e),yl=i(e,"P",{});var c2=r(yl);h=i(c2,"EM",{});var L=r(h);KE=s(L,"note: "),ea=i(L,"CODE",{});var f2=r(ea);WE=s(f2,"docker run"),f2.forEach(t),VE=s(L,"\u2019s "),ta=i(L,"CODE",{});var p2=r(ta);FE=s(p2,"[OPTIONS]"),p2.forEach(t),BE=s(L," are specified "),la=i(L,"STRONG",{});var d2=r(la);qE=s(d2,"before"),d2.forEach(t),zE=s(L," the image name, whilst arguments ("),oa=i(L,"CODE",{});var u2=r(oa);$E=s(u2,"[ARG...]"),u2.forEach(t),jE=s(L,") for the command to be executed within the container is "),sa=i(L,"STRONG",{});var E2=r(sa);XE=s(E2,"AFTER"),E2.forEach(t),QE=s(L," the image name and command."),L.forEach(t),c2.forEach(t),Dn=p(e),Cl=i(e,"P",{});var m2=r(Cl);ZE=s(m2,"Common options to specify:"),m2.forEach(t),wn=p(e),_=i(e,"UL",{});var J=r(_);rt=i(J,"LI",{});var mc=r(rt);aa=i(mc,"CODE",{});var v2=r(aa);JE=s(v2,"-d"),v2.forEach(t),gE=s(mc," : run in detached mode so the terminal of the machine does not continouously stream container\u2019s "),ia=i(mc,"CODE",{});var h2=r(ia);em=s(h2,"stdout"),h2.forEach(t),mc.forEach(t),tm=p(J),ra=i(J,"LI",{});var k2=r(ra);na=i(k2,"CODE",{});var _2=r(na);lm=s(_2,"-p"),_2.forEach(t),k2.forEach(t),om=p(J),ca=i(J,"LI",{});var D2=r(ca);fa=i(D2,"CODE",{});var w2=r(fa);sm=s(w2,"-i"),w2.forEach(t),D2.forEach(t),am=p(J),pa=i(J,"LI",{});var O2=r(pa);da=i(O2,"CODE",{});var b2=r(da);im=s(b2,"-t"),b2.forEach(t),O2.forEach(t),rm=p(J),ua=i(J,"LI",{});var y2=r(ua);Ea=i(y2,"CODE",{});var C2=r(Ea);nm=s(C2,"--name"),C2.forEach(t),y2.forEach(t),J.forEach(t),On=p(e),Il=i(e,"H3",{});var I2=r(Il);cm=s(I2,"docker build"),I2.forEach(t),bn=p(e),Pl=i(e,"H3",{});var P2=r(Pl);fm=s(P2,"docker image"),P2.forEach(t),yn=p(e),Rl=i(e,"H3",{});var R2=r(Rl);pm=s(R2,"docker container"),R2.forEach(t),Cn=p(e),Tl=i(e,"H3",{});var T2=r(Tl);dm=s(T2,"docker network"),T2.forEach(t),In=p(e),Ll=i(e,"H3",{});var L2=r(Ll);um=s(L2,"docker volume"),L2.forEach(t),Pn=p(e),Nl=i(e,"H3",{});var N2=r(Nl);Em=s(N2,"docker logs"),N2.forEach(t),Rn=p(e),j=i(e,"P",{});var ro=r(j);mm=s(ro,"Retrieves container\u2019s logs (to "),ma=i(ro,"CODE",{});var H2=r(ma);vm=s(H2,"STDOUT"),H2.forEach(t),hm=s(ro," and "),va=i(ro,"CODE",{});var A2=r(va);km=s(A2,"STDERR"),A2.forEach(t),_m=s(ro,") to your CLI."),ro.forEach(t),Tn=p(e),nt=i(e,"PRE",{class:!0});var mk=r(nt);mk.forEach(t),Ln=p(e),Hl=i(e,"P",{});var S2=r(Hl);Dm=s(S2,"Common options to specify:"),S2.forEach(t),Nn=p(e),D=i(e,"UL",{});var g=r(D);be=i(g,"LI",{});var ti=r(be);ha=i(ti,"CODE",{});var M2=r(ha);wm=s(M2,"--follow"),M2.forEach(t),Om=s(ti," / "),ka=i(ti,"CODE",{});var x2=r(ka);bm=s(x2,"-f"),x2.forEach(t),ym=s(ti," : continuously streams the log output"),ti.forEach(t),Cm=p(g),ye=i(g,"LI",{});var li=r(ye);_a=i(li,"CODE",{});var U2=r(_a);Im=s(U2,"--timestamps"),U2.forEach(t),Pm=s(li," / "),Da=i(li,"CODE",{});var G2=r(Da);Rm=s(G2,"-t"),G2.forEach(t),Tm=s(li," : show timestamps of logs"),li.forEach(t),Lm=p(g),X=i(g,"LI",{});var vt=r(X);wa=i(vt,"CODE",{});var Y2=r(wa);Nm=s(Y2,"--tail"),Y2.forEach(t),Hm=s(vt," / "),Oa=i(vt,"CODE",{});var K2=r(Oa);Am=s(K2,"-n"),K2.forEach(t),Sm=s(vt," : number of lines to show from end of the log (defaults to "),ba=i(vt,"CODE",{});var W2=r(ba);Mm=s(W2,"all"),W2.forEach(t),xm=s(vt,")"),vt.forEach(t),Um=p(g),I=i(g,"LI",{});var oe=r(I);ya=i(oe,"CODE",{});var V2=r(ya);Gm=s(V2,"--since"),V2.forEach(t),Ym=s(oe," : show logs "),Ca=i(oe,"EM",{});var F2=r(Ca);Km=s(F2,"since"),F2.forEach(t),Wm=s(oe," timestamp ("),Ia=i(oe,"CODE",{});var B2=r(Ia);Vm=s(B2,"2013-01-02T13:37:00Z"),B2.forEach(t),Fm=s(oe,") or relative ("),Pa=i(oe,"CODE",{});var q2=r(Pa);Bm=s(q2,"42m"),q2.forEach(t),qm=s(oe,")"),oe.forEach(t),zm=p(g),Ce=i(g,"LI",{});var oi=r(Ce);Ra=i(oi,"CODE",{});var z2=r(Ra);$m=s(z2,"--until"),z2.forEach(t),jm=s(oi," : show logs "),Ta=i(oi,"EM",{});var $2=r(Ta);Xm=s($2,"before"),$2.forEach(t),Qm=s(oi," timestamp or relative"),oi.forEach(t),g.forEach(t),Hn=p(e),Al=i(e,"H3",{});var j2=r(Al);Zm=s(j2,"docker inspect"),j2.forEach(t),An=p(e),Sl=i(e,"P",{});var X2=r(Sl);Jm=s(X2,`Returns detailed information about docker objects.
Objects can be images, containers, networks, volumes, etc.`),X2.forEach(t),Sn=p(e),ct=i(e,"PRE",{class:!0});var vk=r(ct);vk.forEach(t),Mn=p(e),Ml=i(e,"H3",{});var Q2=r(Ml);gm=s(Q2,"docker ps"),Q2.forEach(t),xn=p(e),xl=i(e,"P",{});var Z2=r(xl);e1=s(Z2,`List all containers and information about them (such as ID, image name, ports etc.)
Defaults to listing running containers only.`),Z2.forEach(t),Un=p(e),ft=i(e,"PRE",{class:!0});var hk=r(ft);hk.forEach(t),Gn=p(e),Ul=i(e,"P",{});var J2=r(Ul);t1=s(J2,"Useful options:"),J2.forEach(t),Yn=p(e),w=i(e,"UL",{});var ee=r(w);Ie=i(ee,"LI",{});var si=r(Ie);La=i(si,"CODE",{});var g2=r(La);l1=s(g2,"--all"),g2.forEach(t),o1=s(si," / "),Na=i(si,"CODE",{});var e4=r(Na);s1=s(e4,"-a"),e4.forEach(t),a1=s(si," : lists all containers, including those that are not running"),si.forEach(t),i1=p(ee),Q=i(ee,"LI",{});var ht=r(Q);Ha=i(ht,"CODE",{});var t4=r(Ha);r1=s(t4,"--size"),t4.forEach(t),n1=s(ht," / "),Aa=i(ht,"CODE",{});var l4=r(Aa);c1=s(l4,"-s"),l4.forEach(t),f1=s(ht," : include size of the container in output. Shows both size of container (i.e. writable layer), and "),Sa=i(ht,"CODE",{});var o4=r(Sa);p1=s(o4,"virtual"),o4.forEach(t),d1=s(ht," size of total disk-space used, i.e. container + image."),ht.forEach(t),u1=p(ee),Gl=i(ee,"LI",{});var nv=r(Gl);Ma=i(nv,"CODE",{});var s4=r(Ma);E1=s(s4,"--no-trunc"),s4.forEach(t),m1=s(nv," : prevent truncation in table output"),nv.forEach(t),v1=p(ee),Z=i(ee,"LI",{});var kt=r(Z);xa=i(kt,"CODE",{});var a4=r(xa);h1=s(a4,"--filter"),a4.forEach(t),k1=s(kt," / "),Ua=i(kt,"CODE",{});var i4=r(Ua);_1=s(i4,"-f"),i4.forEach(t),D1=s(kt," : filters the output with key-value pairs. E.g. "),Ga=i(kt,"CODE",{});var r4=r(Ga);w1=s(r4,'docker ps -f "name=mysparkcontainer"'),r4.forEach(t),O1=s(kt,"."),kt.forEach(t),b1=p(ee),O=i(ee,"LI",{});var te=r(O);Ya=i(te,"CODE",{});var n4=r(Ya);y1=s(n4,"--format"),n4.forEach(t),C1=s(te," : formats the output using Go template. Placeholder information include "),Ka=i(te,"CODE",{});var c4=r(Ka);I1=s(c4,".ID"),c4.forEach(t),P1=s(te,", "),Wa=i(te,"CODE",{});var f4=r(Wa);R1=s(f4,".Image"),f4.forEach(t),T1=s(te,", "),Va=i(te,"CODE",{});var p4=r(Va);L1=s(p4,".Names"),p4.forEach(t),N1=s(te," etc."),pt=i(te,"UL",{});var vc=r(pt);Pe=i(vc,"LI",{});var ai=r(Pe);Fa=i(ai,"CODE",{});var d4=r(Fa);H1=s(d4,'docker ps --format "{{.ID}}: {{.Name}}"'),d4.forEach(t),A1=s(ai," will print out "),Ba=i(ai,"CODE",{});var u4=r(Ba);S1=s(u4,"abcdef: name1"),u4.forEach(t),M1=s(ai," etc."),ai.forEach(t),x1=p(vc),Yl=i(vc,"LI",{});var cv=r(Yl);qa=i(cv,"CODE",{});var E4=r(qa);U1=s(E4,'docker ps --format "table {{.ID}}\\t{{.Name}}"'),E4.forEach(t),G1=s(cv," will print the output in a table with header row."),cv.forEach(t),vc.forEach(t),te.forEach(t),ee.forEach(t),Kn=p(e),Kl=i(e,"H3",{});var m4=r(Kl);Y1=s(m4,"docker stats"),m4.forEach(t),Wn=p(e),Wl=i(e,"P",{});var v4=r(Wl);K1=s(v4,`Display live info about containers\u2019 resource usage (kind of like Window\u2019s task manager).
Defaults to only showing running containers.`),v4.forEach(t),Vn=p(e),dt=i(e,"PRE",{class:!0});var kk=r(dt);kk.forEach(t),Fn=p(e),Vl=i(e,"P",{});var h4=r(Vl);W1=s(h4,"Useful options:"),h4.forEach(t),Bn=p(e),P=i(e,"UL",{});var Ae=r(P);Re=i(Ae,"LI",{});var ii=r(Re);za=i(ii,"CODE",{});var k4=r(za);V1=s(k4,"--all"),k4.forEach(t),F1=s(ii," / "),$a=i(ii,"CODE",{});var _4=r($a);B1=s(_4,"-a"),_4.forEach(t),q1=s(ii," : lists all containers, including those that are not running"),ii.forEach(t),z1=p(Ae),Fl=i(Ae,"LI",{});var fv=r(Fl);ja=i(fv,"CODE",{});var D4=r(ja);$1=s(D4,"--no-trunc"),D4.forEach(t),j1=s(fv," : Prevent truncation in table output"),fv.forEach(t),X1=p(Ae),Bl=i(Ae,"LI",{});var pv=r(Bl);Xa=i(pv,"CODE",{});var w4=r(Xa);Q1=s(w4,"--no-stream"),w4.forEach(t),Z1=s(pv," : get only a \u2018snapshot\u2019 of the current stats"),pv.forEach(t),J1=p(Ae),ql=i(Ae,"LI",{});var dv=r(ql);Qa=i(dv,"CODE",{});var O4=r(Qa);g1=s(O4,"--format"),O4.forEach(t),ev=s(dv," : formats the output using Go template."),dv.forEach(t),Ae.forEach(t),qn=p(e),zn=i(e,"HR",{}),$n=p(e),zl=i(e,"H2",{});var b4=r(zl);tv=s(b4,"networking"),b4.forEach(t),jn=p(e),Xn=i(e,"HR",{}),Qn=p(e),$l=i(e,"H2",{});var y4=r($l);lv=s(y4,"disks"),y4.forEach(t),this.h()},h(){E(xe,"class","language-dockerfile"),E(Ue,"class","language-dockerfile"),E(Ge,"class","language-dockerfile"),E(Ye,"class","language-dockerfile"),E(Ke,"class","language-dockerfile"),E(We,"class","language-dockerfile"),E(Be,"class","language-dockerfile"),E(qe,"class","language-dockerfile"),E(ze,"class","language-dockerfile"),E($e,"class","language-dockerfile"),E(Xe,"class","language-dockerfile"),E(Qe,"class","language-dockerfile"),E(Ze,"class","language-dockerfile"),E(ge,"class","language-dockerfile"),E(tt,"class","language-dockerfile"),E(ot,"class","language-dockerfile"),E(st,"class","language-dockerfile"),E(at,"class","language-dockerfile"),E(it,"class","language-dockerfile"),E(nt,"class","language-undefined"),E(ct,"class","language-undefined"),E(ft,"class","language-undefined"),E(dt,"class","language-undefined")},m(e,n){c(e,se,n),l(se,hc),c(e,ri,n),c(e,_t,n),l(_t,kc),c(e,ni,n),c(e,Dt,n),l(Dt,_c),c(e,ci,n),c(e,wt,n),l(wt,Dc),c(e,fi,n),c(e,Ot,n),l(Ot,wc),c(e,pi,n),c(e,bt,n),l(bt,Oc),c(e,di,n),c(e,yt,n),l(yt,bc),c(e,ui,n),c(e,ae,n),l(ae,N),l(N,yc),l(N,no),l(no,Cc),l(N,Ic),l(N,co),l(co,Pc),l(N,Rc),l(N,fo),l(fo,Tc),l(N,Lc),l(ae,Nc),l(ae,Se),l(Se,Hc),l(Se,po),l(po,Ac),l(Se,Sc),c(e,Ei,n),c(e,Ct,n),l(Ct,Mc),c(e,mi,n),c(e,It,n),l(It,xc),c(e,vi,n),c(e,Me,n),l(Me,uo),l(uo,Uc),l(Me,Gc),c(e,hi,n),c(e,Pt,n),l(Pt,Yc),c(e,ki,n),c(e,ie,n),l(ie,Kc),l(ie,Eo),l(Eo,Wc),l(ie,Vc),c(e,_i,n),c(e,Rt,n),l(Rt,Fc),c(e,Di,n),c(e,Tt,n),l(Tt,Bc),c(e,wi,n),c(e,Lt,n),l(Lt,qc),c(e,Oi,n),c(e,re,n),l(re,zc),l(re,mo),l(mo,$c),l(re,jc),c(e,bi,n),c(e,Nt,n),l(Nt,Xc),c(e,yi,n),c(e,b,n),l(b,Qc),l(b,vo),l(vo,Zc),l(b,Jc),l(b,ho),l(ho,gc),l(b,ef),l(b,ko),l(ko,tf),l(b,lf),c(e,Ci,n),c(e,Ht,n),l(Ht,of),c(e,Ii,n),c(e,ne,n),l(ne,sf),l(ne,_o),l(_o,af),l(ne,rf),c(e,Pi,n),c(e,At,n),l(At,nf),c(e,Ri,n),c(e,St,n),l(St,cf),c(e,Ti,n),c(e,ce,n),l(ce,ff),l(ce,Do),l(Do,pf),l(ce,df),c(e,Li,n),c(e,Mt,n),l(Mt,uf),c(e,Ni,n),c(e,Hi,n),c(e,Ai,n),c(e,xt,n),l(xt,Ef),c(e,Si,n),c(e,Ut,n),l(Ut,mf),c(e,Mi,n),c(e,Gt,n),l(Gt,vf),c(e,xi,n),c(e,fe,n),l(fe,hf),l(fe,wo),l(wo,kf),l(fe,_f),c(e,Ui,n),c(e,xe,n),xe.innerHTML=P4,c(e,Gi,n),c(e,Yt,n),l(Yt,Df),c(e,Yi,n),c(e,Kt,n),l(Kt,wf),c(e,Ki,n),c(e,Ue,n),Ue.innerHTML=R4,c(e,Wi,n),c(e,Wt,n),l(Wt,Of),c(e,Vi,n),c(e,Vt,n),l(Vt,bf),c(e,Fi,n),c(e,Ge,n),Ge.innerHTML=T4,c(e,Bi,n),c(e,Ft,n),l(Ft,yf),c(e,qi,n),c(e,Bt,n),l(Bt,Cf),c(e,zi,n),c(e,Ye,n),Ye.innerHTML=L4,c(e,$i,n),c(e,qt,n),l(qt,If),c(e,ji,n),c(e,zt,n),l(zt,Pf),c(e,Xi,n),c(e,Ke,n),Ke.innerHTML=N4,c(e,Qi,n),c(e,M,n),l(M,Rf),l(M,Oo),l(Oo,Tf),l(M,Lf),l(M,bo),l(bo,Nf),l(M,Hf),c(e,Zi,n),c(e,pe,n),l(pe,Af),l(pe,yo),l(yo,Sf),l(pe,Mf),c(e,Ji,n),c(e,$t,n),l($t,xf),c(e,gi,n),c(e,jt,n),l(jt,Uf),c(e,er,n),c(e,We,n),We.innerHTML=H4,c(e,tr,n),c(e,de,n),l(de,Gf),l(de,Co),l(Co,Yf),l(de,Kf),c(e,lr,n),c(e,x,n),l(x,Io),l(Io,Wf),l(x,Vf),l(x,Ve),l(Ve,Ff),l(Ve,Po),l(Po,Bf),l(Ve,qf),l(x,zf),l(x,Ro),l(Ro,$f),c(e,or,n),c(e,Fe,n),l(Fe,To),l(To,jf),l(Fe,Xf),c(e,sr,n),c(e,U,n),l(U,Qf),l(U,Lo),l(Lo,Zf),l(U,Jf),l(U,No),l(No,gf),l(U,ep),c(e,ar,n),c(e,ue,n),l(ue,tp),l(ue,Ho),l(Ho,lp),l(ue,op),c(e,ir,n),c(e,Xt,n),l(Xt,sp),c(e,rr,n),c(e,Qt,n),l(Qt,ap),c(e,nr,n),c(e,Be,n),Be.innerHTML=A4,c(e,cr,n),c(e,Zt,n),l(Zt,ip),c(e,fr,n),c(e,Jt,n),l(Jt,rp),c(e,pr,n),c(e,qe,n),qe.innerHTML=S4,c(e,dr,n),c(e,H,n),l(H,Ao),l(Ao,np),l(H,cp),l(H,So),l(So,fp),l(H,pp),l(H,Mo),l(Mo,dp),l(H,up),c(e,ur,n),c(e,gt,n),l(gt,Ep),c(e,Er,n),c(e,el,n),l(el,mp),c(e,mr,n),c(e,ze,n),ze.innerHTML=M4,c(e,vr,n),c(e,Ee,n),l(Ee,vp),l(Ee,xo),l(xo,hp),l(Ee,kp),c(e,hr,n),c(e,tl,n),l(tl,_p),c(e,kr,n),c(e,m,n),l(m,Dp),l(m,Uo),l(Uo,wp),l(m,Op),l(m,Go),l(Go,bp),l(m,yp),l(m,Yo),l(Yo,Cp),l(m,Ip),l(m,Ko),l(Ko,Pp),l(m,Rp),l(m,Wo),l(Wo,Tp),l(m,Lp),c(e,_r,n),c(e,$e,n),$e.innerHTML=x4,c(e,Dr,n),c(e,me,n),l(me,Np),l(me,Vo),l(Vo,Hp),l(me,Ap),c(e,wr,n),c(e,G,n),l(G,Sp),l(G,Fo),l(Fo,Mp),l(G,xp),l(G,Bo),l(Bo,Up),l(G,Gp),c(e,Or,n),c(e,ll,n),l(ll,je),l(je,Yp),l(je,qo),l(qo,Kp),l(je,Wp),c(e,br,n),c(e,Y,n),l(Y,Vp),l(Y,zo),l(zo,Fp),l(Y,Bp),l(Y,$o),l($o,qp),l(Y,zp),c(e,yr,n),c(e,ol,n),l(ol,$p),c(e,Cr,n),c(e,K,n),l(K,jp),l(K,jo),l(jo,Xp),l(K,Qp),l(K,Xo),l(Xo,Zp),l(K,Jp),c(e,Ir,n),c(e,Xe,n),Xe.innerHTML=U4,c(e,Pr,n),c(e,A,n),l(A,Qo),l(Qo,gp),l(A,ed),l(A,Zo),l(Zo,td),l(A,ld),l(A,Jo),l(Jo,od),l(A,sd),c(e,Rr,n),c(e,sl,n),l(sl,ad),c(e,Tr,n),c(e,al,n),l(al,id),c(e,Lr,n),c(e,Qe,n),Qe.innerHTML=G4,c(e,Nr,n),c(e,il,n),l(il,rd),c(e,Hr,n),c(e,Ze,n),Ze.innerHTML=Y4,c(e,Ar,n),c(e,W,n),l(W,nd),l(W,go),l(go,cd),l(W,fd),l(W,es),l(es,pd),l(W,dd),c(e,Sr,n),c(e,Je,n),l(Je,ts),l(ts,ud),l(Je,Ed),c(e,Mr,n),c(e,rl,n),l(rl,md),c(e,xr,n),c(e,nl,n),l(nl,vd),c(e,Ur,n),c(e,ge,n),ge.innerHTML=K4,c(e,Gr,n),c(e,V,n),l(V,cl),l(cl,hd),l(cl,ls),l(ls,kd),l(V,_d),l(V,le),l(le,Dd),l(le,os),l(os,wd),l(le,Od),l(le,ss),l(ss,bd),l(le,yd),l(V,Cd),l(V,et),l(et,Id),l(et,as),l(as,Pd),l(et,Rd),c(e,Yr,n),c(e,fl,n),l(fl,Td),c(e,Kr,n),c(e,pl,n),l(pl,Ld),c(e,Wr,n),c(e,tt,n),tt.innerHTML=W4,c(e,Vr,n),c(e,lt,n),l(lt,is),l(is,Nd),l(lt,Hd),c(e,Fr,n),c(e,y,n),l(y,ve),l(ve,rs),l(rs,Ad),l(ve,Sd),l(ve,ns),l(ns,Md),l(ve,xd),l(y,Ud),l(y,he),l(he,cs),l(cs,Gd),l(he,Yd),l(he,fs),l(fs,Kd),l(he,Wd),l(y,Vd),l(y,ke),l(ke,ps),l(ps,Fd),l(ke,Bd),l(ke,ds),l(ds,qd),l(ke,zd),l(y,$d),l(y,_e),l(_e,us),l(us,jd),l(_e,Xd),l(_e,Es),l(Es,Qd),l(_e,Zd),c(e,Br,n),c(e,v,n),l(v,Jd),l(v,ms),l(ms,gd),l(v,eu),l(v,vs),l(vs,tu),l(v,lu),l(v,hs),l(hs,ou),l(v,su),l(v,ks),l(ks,au),l(v,iu),l(v,_s),l(_s,ru),l(v,nu),c(e,qr,n),c(e,F,n),l(F,cu),l(F,Ds),l(Ds,fu),l(F,pu),l(F,ws),l(ws,du),l(F,uu),c(e,zr,n),c(e,B,n),l(B,Eu),l(B,Os),l(Os,mu),l(B,vu),l(B,bs),l(bs,hu),l(B,ku),c(e,$r,n),c(e,dl,n),l(dl,_u),c(e,jr,n),c(e,q,n),l(q,Du),l(q,ys),l(ys,wu),l(q,Ou),l(q,Cs),l(Cs,bu),l(q,yu),c(e,Xr,n),c(e,ot,n),ot.innerHTML=V4,c(e,Qr,n),c(e,ul,n),l(ul,Cu),c(e,Zr,n),c(e,El,n),l(El,Iu),c(e,Jr,n),c(e,st,n),st.innerHTML=F4,c(e,gr,n),c(e,ml,n),l(ml,Pu),c(e,en,n),c(e,vl,n),l(vl,Ru),c(e,tn,n),c(e,De,n),l(De,Tu),l(De,Is),l(Is,Lu),l(De,Nu),c(e,ln,n),c(e,at,n),at.innerHTML=B4,c(e,on,n),c(e,hl,n),l(hl,Hu),c(e,sn,n),c(e,we,n),l(we,Au),l(we,Ps),l(Ps,Su),l(we,Mu),c(e,an,n),c(e,z,n),l(z,xu),l(z,Rs),l(Rs,Uu),l(z,Gu),l(z,Ts),l(Ts,Yu),l(z,Ku),c(e,rn,n),c(e,Oe,n),l(Oe,$),l($,Ls),l(Ls,Wu),l($,Vu),l($,Ns),l(Ns,Fu),l($,Bu),l($,Hs),l(Hs,qu),l($,zu),l(Oe,$u),l(Oe,k),l(k,As),l(As,ju),l(k,Xu),l(k,Ss),l(Ss,Qu),l(k,Zu),l(k,Ms),l(Ms,Ju),l(k,gu),l(k,xs),l(xs,eE),l(k,tE),l(k,Us),l(Us,lE),l(k,oE),c(e,nn,n),c(e,d,n),l(d,sE),l(d,Gs),l(Gs,aE),l(d,iE),l(d,Ys),l(Ys,rE),l(d,nE),l(d,Ks),l(Ks,cE),l(d,fE),l(d,Ws),l(Ws,pE),l(d,dE),l(d,Vs),l(Vs,uE),l(d,EE),l(d,Fs),l(Fs,mE),l(d,vE),l(d,Bs),l(Bs,hE),l(d,kE),l(d,qs),l(qs,_E),l(d,DE),l(d,zs),l(zs,wE),l(d,OE),l(d,$s),l($s,bE),l(d,yE),l(d,js),l(js,CE),l(d,IE),c(e,cn,n),c(e,it,n),it.innerHTML=q4,c(e,fn,n),c(e,kl,n),l(kl,Xs),l(Xs,PE),c(e,pn,n),c(e,C,n),l(C,RE),l(C,Qs),l(Qs,TE),l(C,LE),l(C,Zs),l(Zs,NE),l(C,HE),l(C,Js),l(Js,AE),l(C,SE),c(e,dn,n),c(e,_l,n),l(_l,ME),c(e,un,n),c(e,En,n),c(e,mn,n),c(e,Dl,n),l(Dl,xE),c(e,vn,n),c(e,wl,n),l(wl,UE),c(e,hn,n),c(e,Ol,n),l(Ol,GE),c(e,kn,n),c(e,bl,n),l(bl,gs),l(gs,YE),c(e,_n,n),c(e,yl,n),l(yl,h),l(h,KE),l(h,ea),l(ea,WE),l(h,VE),l(h,ta),l(ta,FE),l(h,BE),l(h,la),l(la,qE),l(h,zE),l(h,oa),l(oa,$E),l(h,jE),l(h,sa),l(sa,XE),l(h,QE),c(e,Dn,n),c(e,Cl,n),l(Cl,ZE),c(e,wn,n),c(e,_,n),l(_,rt),l(rt,aa),l(aa,JE),l(rt,gE),l(rt,ia),l(ia,em),l(_,tm),l(_,ra),l(ra,na),l(na,lm),l(_,om),l(_,ca),l(ca,fa),l(fa,sm),l(_,am),l(_,pa),l(pa,da),l(da,im),l(_,rm),l(_,ua),l(ua,Ea),l(Ea,nm),c(e,On,n),c(e,Il,n),l(Il,cm),c(e,bn,n),c(e,Pl,n),l(Pl,fm),c(e,yn,n),c(e,Rl,n),l(Rl,pm),c(e,Cn,n),c(e,Tl,n),l(Tl,dm),c(e,In,n),c(e,Ll,n),l(Ll,um),c(e,Pn,n),c(e,Nl,n),l(Nl,Em),c(e,Rn,n),c(e,j,n),l(j,mm),l(j,ma),l(ma,vm),l(j,hm),l(j,va),l(va,km),l(j,_m),c(e,Tn,n),c(e,nt,n),nt.innerHTML=z4,c(e,Ln,n),c(e,Hl,n),l(Hl,Dm),c(e,Nn,n),c(e,D,n),l(D,be),l(be,ha),l(ha,wm),l(be,Om),l(be,ka),l(ka,bm),l(be,ym),l(D,Cm),l(D,ye),l(ye,_a),l(_a,Im),l(ye,Pm),l(ye,Da),l(Da,Rm),l(ye,Tm),l(D,Lm),l(D,X),l(X,wa),l(wa,Nm),l(X,Hm),l(X,Oa),l(Oa,Am),l(X,Sm),l(X,ba),l(ba,Mm),l(X,xm),l(D,Um),l(D,I),l(I,ya),l(ya,Gm),l(I,Ym),l(I,Ca),l(Ca,Km),l(I,Wm),l(I,Ia),l(Ia,Vm),l(I,Fm),l(I,Pa),l(Pa,Bm),l(I,qm),l(D,zm),l(D,Ce),l(Ce,Ra),l(Ra,$m),l(Ce,jm),l(Ce,Ta),l(Ta,Xm),l(Ce,Qm),c(e,Hn,n),c(e,Al,n),l(Al,Zm),c(e,An,n),c(e,Sl,n),l(Sl,Jm),c(e,Sn,n),c(e,ct,n),ct.innerHTML=$4,c(e,Mn,n),c(e,Ml,n),l(Ml,gm),c(e,xn,n),c(e,xl,n),l(xl,e1),c(e,Un,n),c(e,ft,n),ft.innerHTML=j4,c(e,Gn,n),c(e,Ul,n),l(Ul,t1),c(e,Yn,n),c(e,w,n),l(w,Ie),l(Ie,La),l(La,l1),l(Ie,o1),l(Ie,Na),l(Na,s1),l(Ie,a1),l(w,i1),l(w,Q),l(Q,Ha),l(Ha,r1),l(Q,n1),l(Q,Aa),l(Aa,c1),l(Q,f1),l(Q,Sa),l(Sa,p1),l(Q,d1),l(w,u1),l(w,Gl),l(Gl,Ma),l(Ma,E1),l(Gl,m1),l(w,v1),l(w,Z),l(Z,xa),l(xa,h1),l(Z,k1),l(Z,Ua),l(Ua,_1),l(Z,D1),l(Z,Ga),l(Ga,w1),l(Z,O1),l(w,b1),l(w,O),l(O,Ya),l(Ya,y1),l(O,C1),l(O,Ka),l(Ka,I1),l(O,P1),l(O,Wa),l(Wa,R1),l(O,T1),l(O,Va),l(Va,L1),l(O,N1),l(O,pt),l(pt,Pe),l(Pe,Fa),l(Fa,H1),l(Pe,A1),l(Pe,Ba),l(Ba,S1),l(Pe,M1),l(pt,x1),l(pt,Yl),l(Yl,qa),l(qa,U1),l(Yl,G1),c(e,Kn,n),c(e,Kl,n),l(Kl,Y1),c(e,Wn,n),c(e,Wl,n),l(Wl,K1),c(e,Vn,n),c(e,dt,n),dt.innerHTML=X4,c(e,Fn,n),c(e,Vl,n),l(Vl,W1),c(e,Bn,n),c(e,P,n),l(P,Re),l(Re,za),l(za,V1),l(Re,F1),l(Re,$a),l($a,B1),l(Re,q1),l(P,z1),l(P,Fl),l(Fl,ja),l(ja,$1),l(Fl,j1),l(P,X1),l(P,Bl),l(Bl,Xa),l(Xa,Q1),l(Bl,Z1),l(P,J1),l(P,ql),l(ql,Qa),l(Qa,g1),l(ql,ev),c(e,qn,n),c(e,zn,n),c(e,$n,n),c(e,zl,n),l(zl,tv),c(e,jn,n),c(e,Xn,n),c(e,Qn,n),c(e,$l,n),l($l,lv)},p:uv,i:uv,o:uv,d(e){e&&t(se),e&&t(ri),e&&t(_t),e&&t(ni),e&&t(Dt),e&&t(ci),e&&t(wt),e&&t(fi),e&&t(Ot),e&&t(pi),e&&t(bt),e&&t(di),e&&t(yt),e&&t(ui),e&&t(ae),e&&t(Ei),e&&t(Ct),e&&t(mi),e&&t(It),e&&t(vi),e&&t(Me),e&&t(hi),e&&t(Pt),e&&t(ki),e&&t(ie),e&&t(_i),e&&t(Rt),e&&t(Di),e&&t(Tt),e&&t(wi),e&&t(Lt),e&&t(Oi),e&&t(re),e&&t(bi),e&&t(Nt),e&&t(yi),e&&t(b),e&&t(Ci),e&&t(Ht),e&&t(Ii),e&&t(ne),e&&t(Pi),e&&t(At),e&&t(Ri),e&&t(St),e&&t(Ti),e&&t(ce),e&&t(Li),e&&t(Mt),e&&t(Ni),e&&t(Hi),e&&t(Ai),e&&t(xt),e&&t(Si),e&&t(Ut),e&&t(Mi),e&&t(Gt),e&&t(xi),e&&t(fe),e&&t(Ui),e&&t(xe),e&&t(Gi),e&&t(Yt),e&&t(Yi),e&&t(Kt),e&&t(Ki),e&&t(Ue),e&&t(Wi),e&&t(Wt),e&&t(Vi),e&&t(Vt),e&&t(Fi),e&&t(Ge),e&&t(Bi),e&&t(Ft),e&&t(qi),e&&t(Bt),e&&t(zi),e&&t(Ye),e&&t($i),e&&t(qt),e&&t(ji),e&&t(zt),e&&t(Xi),e&&t(Ke),e&&t(Qi),e&&t(M),e&&t(Zi),e&&t(pe),e&&t(Ji),e&&t($t),e&&t(gi),e&&t(jt),e&&t(er),e&&t(We),e&&t(tr),e&&t(de),e&&t(lr),e&&t(x),e&&t(or),e&&t(Fe),e&&t(sr),e&&t(U),e&&t(ar),e&&t(ue),e&&t(ir),e&&t(Xt),e&&t(rr),e&&t(Qt),e&&t(nr),e&&t(Be),e&&t(cr),e&&t(Zt),e&&t(fr),e&&t(Jt),e&&t(pr),e&&t(qe),e&&t(dr),e&&t(H),e&&t(ur),e&&t(gt),e&&t(Er),e&&t(el),e&&t(mr),e&&t(ze),e&&t(vr),e&&t(Ee),e&&t(hr),e&&t(tl),e&&t(kr),e&&t(m),e&&t(_r),e&&t($e),e&&t(Dr),e&&t(me),e&&t(wr),e&&t(G),e&&t(Or),e&&t(ll),e&&t(br),e&&t(Y),e&&t(yr),e&&t(ol),e&&t(Cr),e&&t(K),e&&t(Ir),e&&t(Xe),e&&t(Pr),e&&t(A),e&&t(Rr),e&&t(sl),e&&t(Tr),e&&t(al),e&&t(Lr),e&&t(Qe),e&&t(Nr),e&&t(il),e&&t(Hr),e&&t(Ze),e&&t(Ar),e&&t(W),e&&t(Sr),e&&t(Je),e&&t(Mr),e&&t(rl),e&&t(xr),e&&t(nl),e&&t(Ur),e&&t(ge),e&&t(Gr),e&&t(V),e&&t(Yr),e&&t(fl),e&&t(Kr),e&&t(pl),e&&t(Wr),e&&t(tt),e&&t(Vr),e&&t(lt),e&&t(Fr),e&&t(y),e&&t(Br),e&&t(v),e&&t(qr),e&&t(F),e&&t(zr),e&&t(B),e&&t($r),e&&t(dl),e&&t(jr),e&&t(q),e&&t(Xr),e&&t(ot),e&&t(Qr),e&&t(ul),e&&t(Zr),e&&t(El),e&&t(Jr),e&&t(st),e&&t(gr),e&&t(ml),e&&t(en),e&&t(vl),e&&t(tn),e&&t(De),e&&t(ln),e&&t(at),e&&t(on),e&&t(hl),e&&t(sn),e&&t(we),e&&t(an),e&&t(z),e&&t(rn),e&&t(Oe),e&&t(nn),e&&t(d),e&&t(cn),e&&t(it),e&&t(fn),e&&t(kl),e&&t(pn),e&&t(C),e&&t(dn),e&&t(_l),e&&t(un),e&&t(En),e&&t(mn),e&&t(Dl),e&&t(vn),e&&t(wl),e&&t(hn),e&&t(Ol),e&&t(kn),e&&t(bl),e&&t(_n),e&&t(yl),e&&t(Dn),e&&t(Cl),e&&t(wn),e&&t(_),e&&t(On),e&&t(Il),e&&t(bn),e&&t(Pl),e&&t(yn),e&&t(Rl),e&&t(Cn),e&&t(Tl),e&&t(In),e&&t(Ll),e&&t(Pn),e&&t(Nl),e&&t(Rn),e&&t(j),e&&t(Tn),e&&t(nt),e&&t(Ln),e&&t(Hl),e&&t(Nn),e&&t(D),e&&t(Hn),e&&t(Al),e&&t(An),e&&t(Sl),e&&t(Sn),e&&t(ct),e&&t(Mn),e&&t(Ml),e&&t(xn),e&&t(xl),e&&t(Un),e&&t(ft),e&&t(Gn),e&&t(Ul),e&&t(Yn),e&&t(w),e&&t(Kn),e&&t(Kl),e&&t(Wn),e&&t(Wl),e&&t(Vn),e&&t(dt),e&&t(Fn),e&&t(Vl),e&&t(Bn),e&&t(P),e&&t(qn),e&&t(zn),e&&t($n),e&&t(zl),e&&t(jn),e&&t(Xn),e&&t(Qn),e&&t($l)}}}const bk={title:"Docker Intro",date:"2022-12-01"},{title:C4,date:Ck}=bk;class Ik extends _k{constructor(se){super(),Dk(this,se,null,Ok,wk,{})}}export{Ik as default,bk as metadata};
