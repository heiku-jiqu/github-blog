import{S as vl,i as El,s as yl,k as r,q as o,a as m,l as p,m as n,r as i,h as t,c as f,n as _l,b as s,B as l,A as zt}from"./index-01ed1eb7.js";function xl(dl){let E,We,se,d,He,A,Me,qe,N,Ie,Be,re,O,ze,pe,S,Fe,ne,x,ul=`<code class="language-undefined">.grid-container &#123;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(min(200px, 100%), 1fr))
&#125;</code>`,me,T,Le,fe,c,Re,G,Ae,Ne,j,Ge,je,J,Je,Ke,K,Qe,Ue,ce,W,Ve,he,b,Q,Xe,Ye,de,v,Ze,U,$e,ge,V,et,ue,H,tt,we,C,lt,X,ot,ve,P,Y,it,at,Ee,M,st,ye,h,rt,Z,pt,nt,$,mt,ft,g,ct,ht,_e,q,dt,xe,k,ut,ee,wt,be,I,vt,Ce,u,Et,te,yt,_t,le,xt,bt,Pe,D,Ct,oe,Pt,ke,y,kt,ie,Dt,Ot,De,B,St,Oe,z,Tt,Se,F,Wt;return{c(){E=r("h1"),We=o(hl),se=m(),d=r("p"),He=o(`There are two main ways to customise the layout of html elements / components:
`),A=r("code"),Me=o("display: grid"),qe=o(" and "),N=r("code"),Ie=o("display: flex"),Be=o("."),re=m(),O=r("p"),ze=o("This post describes how to achieve a responsive layout that will automatically populate components into a parent component such that the number of columns is dynamic. For example, when viewed on larger screens, there will be 5 columns, but when viewed on narrower screens, it will shrink to one column."),pe=m(),S=r("p"),Fe=o("TL;DR:"),ne=m(),x=r("pre"),me=m(),T=r("h2"),Le=o("display: grid"),fe=m(),c=r("p"),Re=o("By setting the "),G=r("em"),Ae=o("parent"),Ne=o(" component\u2019s CSS property to "),j=r("code"),Ge=o("display: grid"),je=o(", we are able to control how the "),J=r("em"),Je=o("child"),Ke=o(" components are arranged. This property itself does not do anything, you will need to specify "),K=r("em"),Qe=o("how"),Ue=o(" the components should be arranged."),ce=m(),W=r("h2"),Ve=o("grid-template-columns"),he=m(),b=r("p"),Q=r("code"),Xe=o("grid-template-columns"),Ye=o(" is one of the CSS property that helps you specify how child components are arranged. The simplest way is to give values corresponding to the size of each column."),de=m(),v=r("p"),Ze=o("For example: "),U=r("code"),$e=o("grid-template-columns: 1fr 1fr 1fr"),ge=o(` will arrange the child components into 3 columns taking equal widths, and if there are more than 3 child components it will flow to the next row.
`),V=r("em"),et=o("Notice that the number of values you pass in will determine the number of columns in the grid"),ue=m(),H=r("h2"),tt=o("repeat()"),we=m(),C=r("p"),lt=o("Instead of statically passing in the number of values, there is another equivalent syntax using the repeat() function: "),X=r("code"),ot=o("grid-template-columns: repeat(3, 1fr)"),ve=m(),P=r("p"),Y=r("code"),it=o("repeat()"),at=o(" takes in 2 parameters, the number of times to repeat and the size to repeat."),Ee=m(),M=r("h3"),st=o("repeat(): special #1"),ye=m(),h=r("p"),rt=o("Instead of having number of times as the first parameter, "),Z=r("code"),pt=o("repeat()"),nt=o(" can also take in either of these two keywords: "),$=r("code"),mt=o("autofit"),ft=o(" and "),g=r("code"),ct=o("autofill"),ht=o(", as its first parameter."),_e=m(),q=r("p"),dt=o("Both keywords work similarly in that they will populate the maximum number of columns until no more child components can fit, then move on to the next row."),xe=m(),k=r("p"),ut=o("Example: "),ee=r("code"),wt=o("grid-template-columns: repeat(autofill, 200px)"),be=m(),I=r("h3"),vt=o("repeat(): special #2"),Ce=m(),u=r("p"),Et=o("Above example will populate a "),te=r("em"),yt=o("fixed width"),_t=o(" child component. In order to make the child components response, repeat()\u2018s second parameter accepts a "),le=r("code"),xt=o("minmax()"),bt=o(" function."),Pe=m(),D=r("p"),Ct=o("Example: "),oe=r("code"),Pt=o("grid-template-columns: repeat(autofill, minmax(200px, 1fr))"),ke=m(),y=r("p"),kt=o("We can specify that the child components has a "),ie=r("em"),Dt=o("minimum width"),Ot=o(" of 200px."),De=m(),B=r("p"),St=o("When narrowing the view, the child component gets smaller than 200px, the grid will reduce the number of columns."),Oe=m(),z=r("p"),Tt=o("When widening the view, the child components will widen until another 200px column can fit, at which point another column will be added."),Se=m(),F=r("p"),Wt=o("We now have a grid layout with responsive number of columns."),this.h()},l(e){E=p(e,"H1",{});var a=n(E);We=i(a,hl),a.forEach(t),se=f(e),d=p(e,"P",{});var L=n(d);He=i(L,`There are two main ways to customise the layout of html elements / components:
`),A=p(L,"CODE",{});var Ft=n(A);Me=i(Ft,"display: grid"),Ft.forEach(t),qe=i(L," and "),N=p(L,"CODE",{});var Lt=n(N);Ie=i(Lt,"display: flex"),Lt.forEach(t),Be=i(L,"."),L.forEach(t),re=f(e),O=p(e,"P",{});var Rt=n(O);ze=i(Rt,"This post describes how to achieve a responsive layout that will automatically populate components into a parent component such that the number of columns is dynamic. For example, when viewed on larger screens, there will be 5 columns, but when viewed on narrower screens, it will shrink to one column."),Rt.forEach(t),pe=f(e),S=p(e,"P",{});var At=n(S);Fe=i(At,"TL;DR:"),At.forEach(t),ne=f(e),x=p(e,"PRE",{class:!0});var wl=n(x);wl.forEach(t),me=f(e),T=p(e,"H2",{});var Nt=n(T);Le=i(Nt,"display: grid"),Nt.forEach(t),fe=f(e),c=p(e,"P",{});var w=n(c);Re=i(w,"By setting the "),G=p(w,"EM",{});var Gt=n(G);Ae=i(Gt,"parent"),Gt.forEach(t),Ne=i(w," component\u2019s CSS property to "),j=p(w,"CODE",{});var jt=n(j);Ge=i(jt,"display: grid"),jt.forEach(t),je=i(w,", we are able to control how the "),J=p(w,"EM",{});var Jt=n(J);Je=i(Jt,"child"),Jt.forEach(t),Ke=i(w," components are arranged. This property itself does not do anything, you will need to specify "),K=p(w,"EM",{});var Kt=n(K);Qe=i(Kt,"how"),Kt.forEach(t),Ue=i(w," the components should be arranged."),w.forEach(t),ce=f(e),W=p(e,"H2",{});var Qt=n(W);Ve=i(Qt,"grid-template-columns"),Qt.forEach(t),he=f(e),b=p(e,"P",{});var Ht=n(b);Q=p(Ht,"CODE",{});var Ut=n(Q);Xe=i(Ut,"grid-template-columns"),Ut.forEach(t),Ye=i(Ht," is one of the CSS property that helps you specify how child components are arranged. The simplest way is to give values corresponding to the size of each column."),Ht.forEach(t),de=f(e),v=p(e,"P",{});var ae=n(v);Ze=i(ae,"For example: "),U=p(ae,"CODE",{});var Vt=n(U);$e=i(Vt,"grid-template-columns: 1fr 1fr 1fr"),Vt.forEach(t),ge=i(ae,` will arrange the child components into 3 columns taking equal widths, and if there are more than 3 child components it will flow to the next row.
`),V=p(ae,"EM",{});var Xt=n(V);et=i(Xt,"Notice that the number of values you pass in will determine the number of columns in the grid"),Xt.forEach(t),ae.forEach(t),ue=f(e),H=p(e,"H2",{});var Yt=n(H);tt=i(Yt,"repeat()"),Yt.forEach(t),we=f(e),C=p(e,"P",{});var Mt=n(C);lt=i(Mt,"Instead of statically passing in the number of values, there is another equivalent syntax using the repeat() function: "),X=p(Mt,"CODE",{});var Zt=n(X);ot=i(Zt,"grid-template-columns: repeat(3, 1fr)"),Zt.forEach(t),Mt.forEach(t),ve=f(e),P=p(e,"P",{});var qt=n(P);Y=p(qt,"CODE",{});var $t=n(Y);it=i($t,"repeat()"),$t.forEach(t),at=i(qt," takes in 2 parameters, the number of times to repeat and the size to repeat."),qt.forEach(t),Ee=f(e),M=p(e,"H3",{});var gt=n(M);st=i(gt,"repeat(): special #1"),gt.forEach(t),ye=f(e),h=p(e,"P",{});var _=n(h);rt=i(_,"Instead of having number of times as the first parameter, "),Z=p(_,"CODE",{});var el=n(Z);pt=i(el,"repeat()"),el.forEach(t),nt=i(_," can also take in either of these two keywords: "),$=p(_,"CODE",{});var tl=n($);mt=i(tl,"autofit"),tl.forEach(t),ft=i(_," and "),g=p(_,"CODE",{});var ll=n(g);ct=i(ll,"autofill"),ll.forEach(t),ht=i(_,", as its first parameter."),_.forEach(t),_e=f(e),q=p(e,"P",{});var ol=n(q);dt=i(ol,"Both keywords work similarly in that they will populate the maximum number of columns until no more child components can fit, then move on to the next row."),ol.forEach(t),xe=f(e),k=p(e,"P",{});var It=n(k);ut=i(It,"Example: "),ee=p(It,"CODE",{});var il=n(ee);wt=i(il,"grid-template-columns: repeat(autofill, 200px)"),il.forEach(t),It.forEach(t),be=f(e),I=p(e,"H3",{});var al=n(I);vt=i(al,"repeat(): special #2"),al.forEach(t),Ce=f(e),u=p(e,"P",{});var R=n(u);Et=i(R,"Above example will populate a "),te=p(R,"EM",{});var sl=n(te);yt=i(sl,"fixed width"),sl.forEach(t),_t=i(R," child component. In order to make the child components response, repeat()\u2018s second parameter accepts a "),le=p(R,"CODE",{});var rl=n(le);xt=i(rl,"minmax()"),rl.forEach(t),bt=i(R," function."),R.forEach(t),Pe=f(e),D=p(e,"P",{});var Bt=n(D);Ct=i(Bt,"Example: "),oe=p(Bt,"CODE",{});var pl=n(oe);Pt=i(pl,"grid-template-columns: repeat(autofill, minmax(200px, 1fr))"),pl.forEach(t),Bt.forEach(t),ke=f(e),y=p(e,"P",{});var Te=n(y);kt=i(Te,"We can specify that the child components has a "),ie=p(Te,"EM",{});var nl=n(ie);Dt=i(nl,"minimum width"),nl.forEach(t),Ot=i(Te," of 200px."),Te.forEach(t),De=f(e),B=p(e,"P",{});var ml=n(B);St=i(ml,"When narrowing the view, the child component gets smaller than 200px, the grid will reduce the number of columns."),ml.forEach(t),Oe=f(e),z=p(e,"P",{});var fl=n(z);Tt=i(fl,"When widening the view, the child components will widen until another 200px column can fit, at which point another column will be added."),fl.forEach(t),Se=f(e),F=p(e,"P",{});var cl=n(F);Wt=i(cl,"We now have a grid layout with responsive number of columns."),cl.forEach(t),this.h()},h(){_l(x,"class","language-undefined")},m(e,a){s(e,E,a),l(E,We),s(e,se,a),s(e,d,a),l(d,He),l(d,A),l(A,Me),l(d,qe),l(d,N),l(N,Ie),l(d,Be),s(e,re,a),s(e,O,a),l(O,ze),s(e,pe,a),s(e,S,a),l(S,Fe),s(e,ne,a),s(e,x,a),x.innerHTML=ul,s(e,me,a),s(e,T,a),l(T,Le),s(e,fe,a),s(e,c,a),l(c,Re),l(c,G),l(G,Ae),l(c,Ne),l(c,j),l(j,Ge),l(c,je),l(c,J),l(J,Je),l(c,Ke),l(c,K),l(K,Qe),l(c,Ue),s(e,ce,a),s(e,W,a),l(W,Ve),s(e,he,a),s(e,b,a),l(b,Q),l(Q,Xe),l(b,Ye),s(e,de,a),s(e,v,a),l(v,Ze),l(v,U),l(U,$e),l(v,ge),l(v,V),l(V,et),s(e,ue,a),s(e,H,a),l(H,tt),s(e,we,a),s(e,C,a),l(C,lt),l(C,X),l(X,ot),s(e,ve,a),s(e,P,a),l(P,Y),l(Y,it),l(P,at),s(e,Ee,a),s(e,M,a),l(M,st),s(e,ye,a),s(e,h,a),l(h,rt),l(h,Z),l(Z,pt),l(h,nt),l(h,$),l($,mt),l(h,ft),l(h,g),l(g,ct),l(h,ht),s(e,_e,a),s(e,q,a),l(q,dt),s(e,xe,a),s(e,k,a),l(k,ut),l(k,ee),l(ee,wt),s(e,be,a),s(e,I,a),l(I,vt),s(e,Ce,a),s(e,u,a),l(u,Et),l(u,te),l(te,yt),l(u,_t),l(u,le),l(le,xt),l(u,bt),s(e,Pe,a),s(e,D,a),l(D,Ct),l(D,oe),l(oe,Pt),s(e,ke,a),s(e,y,a),l(y,kt),l(y,ie),l(ie,Dt),l(y,Ot),s(e,De,a),s(e,B,a),l(B,St),s(e,Oe,a),s(e,z,a),l(z,Tt),s(e,Se,a),s(e,F,a),l(F,Wt)},p:zt,i:zt,o:zt,d(e){e&&t(E),e&&t(se),e&&t(d),e&&t(re),e&&t(O),e&&t(pe),e&&t(S),e&&t(ne),e&&t(x),e&&t(me),e&&t(T),e&&t(fe),e&&t(c),e&&t(ce),e&&t(W),e&&t(he),e&&t(b),e&&t(de),e&&t(v),e&&t(ue),e&&t(H),e&&t(we),e&&t(C),e&&t(ve),e&&t(P),e&&t(Ee),e&&t(M),e&&t(ye),e&&t(h),e&&t(_e),e&&t(q),e&&t(xe),e&&t(k),e&&t(be),e&&t(I),e&&t(Ce),e&&t(u),e&&t(Pe),e&&t(D),e&&t(ke),e&&t(y),e&&t(De),e&&t(B),e&&t(Oe),e&&t(z),e&&t(Se),e&&t(F)}}}const bl={title:"CSS Responsive Grid Layout",date:"2022-09-14"},{title:hl,date:Pl}=bl;class kl extends vl{constructor(E){super(),El(this,E,null,xl,yl,{})}}export{kl as default,bl as metadata};
