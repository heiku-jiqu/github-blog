import{S as ol,i as sl,s as il,L as ml,k as s,l as i,m as n,h as a,b as c,M as vl,f as xe,A as k,e as el,K as _l,q as l,a as p,r as o,c as m,B as t,G as wl,H as yl,v as El,w as bl,n as at,x as Pl,t as kl,y as Cl}from"./index-30b72abd.js";import{f as Ol}from"./index-30025b8e.js";import{f as Dl}from"./GovtBalanceData-809c4fcd.js";function tl(_,u,h){const f=_.slice();return f[2]=u[h],f[4]=h,f}function gl(_){return{c:k,l:k,m:k,p:k,i:k,o:k,d:k}}function Tl(_){let u,h=_[1],f=[];for(let d=0;d<h.length;d+=1)f[d]=al(tl(_,h,d));return{c(){for(let d=0;d<f.length;d+=1)f[d].c();u=el()},l(d){for(let w=0;w<f.length;w+=1)f[w].l(d);u=el()},m(d,w){for(let v=0;v<f.length;v+=1)f[v].m(d,w);c(d,u,w)},p(d,w){if(w&1){h=d[1];let v;for(v=0;v<h.length;v+=1){const P=tl(d,h,v);f[v]?(f[v].p(P,w),xe(f[v],1)):(f[v]=al(P),f[v].c(),xe(f[v],1),f[v].m(u.parentNode,u))}for(;v<f.length;v+=1)f[v].d(1);f.length=h.length}},i(d){for(let w=0;w<h.length;w+=1)xe(f[w])},o:k,d(d){_l(f,d),d&&a(u)}}}function al(_){let u,h,f=_[2].year_of_balance+"",d,w,v=_[2].amount+"",P,Y,$=_[2].actual_revised_estimated+"",J,L,R=_[2].item+"",x,B,M;return{c(){u=s("section"),h=l("Year: "),d=l(f),w=l(" | Balance: "),P=l(v),Y=l(" | Type: "),J=l($),L=l(` | Item:
				`),x=l(R),B=p()},l(g){u=i(g,"SECTION",{});var b=n(u);h=o(b,"Year: "),d=o(b,f),w=o(b," | Balance: "),P=o(b,v),Y=o(b," | Type: "),J=o(b,$),L=o(b,` | Item:
				`),x=o(b,R),B=m(b),b.forEach(a)},m(g,b){c(g,u,b),t(u,h),t(u,d),t(u,w),t(u,P),t(u,Y),t(u,J),t(u,L),t(u,x),t(u,B)},p:k,i(g){M||wl(()=>{M=yl(u,Ol,{delay:_[4]*50}),M.start()})},o:k,d(g){g&&a(u)}}}function xl(_){let u,h;return{c(){u=s("p"),h=l("loading..")},l(f){u=i(f,"P",{});var d=n(u);h=o(d,"loading.."),d.forEach(a)},m(f,d){c(f,u,d),t(u,h)},p:k,i:k,o:k,d(f){f&&a(u)}}}function Hl(_){let u,h={ctx:_,current:null,token:null,hasCatch:!1,pending:xl,then:Tl,catch:gl,value:1};return ml(_[0],h),{c(){u=s("div"),h.block.c()},l(f){u=i(f,"DIV",{});var d=n(u);h.block.l(d),d.forEach(a)},m(f,d){c(f,u,d),h.block.m(u,h.anchor=null),h.mount=()=>u,h.anchor=null},p(f,[d]){_=f,vl(h,_,d)},i(f){xe(h.block)},o:k,d(f){f&&a(u),h.block.d(),h.token=null,h=null}}}function Al(_){return[Dl()]}class Il extends ol{constructor(u){super(),sl(this,u,Al,Hl,il,{})}}function $l(_){let u,h,f,d,w,v,P,Y,$,J,L,R,x,B,M,g,b,He,z,lt,Ae,S,ot,le,st,it,Ie,F,nt,$e,Q,rt,Me,N,ct,oe,ut,ft,Se,G,nl=`<code class="language-undefined">const promise = new Promise((resolve, reject) =&gt; &#123;
    setTimeout(() =&gt; &#123;
        resolve(123);
    &#125;, 300);
&#125;);
promise
    .then((value_in_promise) =&gt; &#123;
        value_in_promise.json() // this is also an async method that returns Promise!
    &#125;)
    .then((value_as_json) =&gt; &#123;
        console.log(value_as_json)
    &#125;)</code>`,Ne,X,dt,je,T,ht,se,pt,mt,ie,vt,_t,ne,wt,yt,qe,y,re,Et,bt,ce,Pt,kt,ue,Ct,Ot,fe,Dt,gt,de,Tt,xt,he,Ht,At,pe,It,$t,me,Mt,St,Ye,U,rl=`<code class="language-undefined">async function runAsyncCode() &#123;
    let output = await callAsyncApi(); //
    let output_as_json = await output.json();
    console.log(output_as_json)
    return output_as_json
&#125;</code>`,Je,Z,Nt,Le,C,jt,ve,qt,Yt,_e,Jt,Lt,we,Rt,Bt,ye,Gt,Ut,Re,j,Wt,Ee,Kt,Vt,Be,O,zt,be,Ft,Qt,Pe,Xt,Zt,ke,ea,ta,Ce,aa,la,Ge,W,cl=`<code class="language-undefined">let data = null;
runAsyncCode()
    .then((inner_value) =&gt; &#123;
        data = inner_value
    &#125;)</code>`,Ue,D,oa,Oe,sa,ia,De,na,ra,ge,ca,ua,Te,fa,da,We,ee,ha,Ke,te,pa,Ve,K,ul=`<code class="language-undefined">&#123;#await runAsyncCode()&#125;
    &lt;p&gt;...loading...&lt;p&gt;
&#123;:then inner_value&#125;
    &lt;p&gt;The inner value is &#123;inner_value&#125;&lt;p&gt;
&#123;/await&#125;</code>`,ze,ae,ma,Fe,V,Qe;return V=new Il({}),{c(){u=s("h1"),h=l(ll),f=p(),d=s("h1"),w=l("async"),v=p(),P=s("p"),Y=l("Normal code is "),$=s("em"),J=l("synchronous"),L=l(", i.e. it will run sequentially line by line, waiting for code to finish executing before going to the next code."),R=p(),x=s("p"),B=l("Sometimes code has to wait for non-CPU intensive tasks (e.g. calling API), and we want to process other things whilst waiting for these tasks to finish in the background."),M=p(),g=s("p"),b=l("This is where asynchronous programming comes in to help us run things is parallel."),He=p(),z=s("h1"),lt=l("async in Javascript"),Ae=p(),S=s("p"),ot=l("Implementations of async programming defers in different programming language, but in Javascript, the most fundamental async type is the "),le=s("em"),st=l("Promise"),it=l("."),Ie=p(),F=s("p"),nt=l(`A promise short circuits the waiting time by returning a container immediately, allowing the subsequent code to run whilst it wait in the background.
This container wraps the actual value that the async task will eventually return.`),$e=p(),Q=s("p"),rt=l("How do to use the value inside the Promise then?"),Me=p(),N=s("p"),ct=l("Promises have a "),oe=s("code"),ut=l(".then()"),ft=l(` method that takes a function as an argument.
This function will be executed once the value has been successfully fulfilled by the Promise, and the value inside the promise will be passed into this function as an argument.`),Se=p(),G=s("pre"),Ne=p(),X=s("h1"),dt=l("using async/await"),je=p(),T=s("p"),ht=l("Chaining a lot of "),se=s("code"),pt=l(".then()"),mt=l(` closures looks ugly.
Instead, using the `),ie=s("code"),vt=l("async"),_t=l(" and "),ne=s("code"),wt=l("await"),yt=l(" syntax helps make it look cleaner, as it lets you write code that is more like normal synchronous code."),qe=p(),y=s("p"),re=s("code"),Et=l("async"),bt=l(" keyword is used to define an "),ce=s("code"),Pt=l("async function"),kt=l(", which will automatically make the function return a "),ue=s("code"),Ct=l("Promise"),Ot=l(`.
Within the `),fe=s("code"),Dt=l("async function"),gt=l(", use "),de=s("code"),Tt=l("await"),xt=l(" before any async expression (i.e. code that returns Promises) to force the code to wait for that expression to finish and "),he=s("strong"),Ht=l("unwrap"),At=l(` the value inside the Promise.
`),pe=s("code"),It=l("await"),$t=l(" can only be used within an "),me=s("code"),Mt=l("async"),St=l(" function."),Ye=p(),U=s("pre"),Je=p(),Z=s("h1"),Nt=l("how to assign value inside promise to a variable?"),Le=p(),C=s("p"),jt=l("Notice that "),ve=s("code"),qt=l("async"),Yt=l(` functions implicitly wraps its output in a Promise.
Notice also that you can only use `),_e=s("code"),Jt=l("await"),Lt=l(", which unwraps a Promise, "),we=s("em"),Rt=l("inside"),Bt=p(),ye=s("code"),Gt=l("async"),Ut=l(` functions.
How then, do you assign the value inside Promise into a variable?`),Re=p(),j=s("p"),Wt=l(`You will need to first instantiate a variable, and then assign the Promise\u2019s value once it has been resolved.
To do this, we can do the assignment within the `),Ee=s("code"),Kt=l(".then()"),Vt=l(" closure."),Be=p(),O=s("p"),zt=l("So at the end, "),be=s("code"),Ft=l("async"),Qt=l("/"),Pe=s("code"),Xt=l("await"),Zt=l(" is only able to abstract away all the middle "),ke=s("code"),ea=l(".then()"),ta=l(" closures, but ultimately "),Ce=s("code"),aa=l(".then()"),la=l(" is still needed in the final step to assign the value to a variable."),Ge=p(),W=s("pre"),Ue=p(),D=s("p"),oa=l("You will need to handle the state of "),Oe=s("code"),sa=l("data"),ia=l(" by yourself, and make the DOM show what you want it to show when "),De=s("code"),na=l("data"),ra=l(" is "),ge=s("code"),ca=l("null"),ua=l(" and also when "),Te=s("code"),fa=l("data"),da=l(" is the value of resolved promise."),We=p(),ee=s("h2"),ha=l("svelte way"),Ke=p(),te=s("p"),pa=l("Svelte abstracts away this complexity by using its await blocks"),Ve=p(),K=s("pre"),ze=p(),ae=s("h1"),ma=l("retrieving data from API"),Fe=p(),El(V.$$.fragment),this.h()},l(e){u=i(e,"H1",{});var r=n(u);h=o(r,ll),r.forEach(a),f=m(e),d=i(e,"H1",{});var va=n(d);w=o(va,"async"),va.forEach(a),v=m(e),P=i(e,"P",{});var Xe=n(P);Y=o(Xe,"Normal code is "),$=i(Xe,"EM",{});var _a=n($);J=o(_a,"synchronous"),_a.forEach(a),L=o(Xe,", i.e. it will run sequentially line by line, waiting for code to finish executing before going to the next code."),Xe.forEach(a),R=m(e),x=i(e,"P",{});var wa=n(x);B=o(wa,"Sometimes code has to wait for non-CPU intensive tasks (e.g. calling API), and we want to process other things whilst waiting for these tasks to finish in the background."),wa.forEach(a),M=m(e),g=i(e,"P",{});var ya=n(g);b=o(ya,"This is where asynchronous programming comes in to help us run things is parallel."),ya.forEach(a),He=m(e),z=i(e,"H1",{});var Ea=n(z);lt=o(Ea,"async in Javascript"),Ea.forEach(a),Ae=m(e),S=i(e,"P",{});var Ze=n(S);ot=o(Ze,"Implementations of async programming defers in different programming language, but in Javascript, the most fundamental async type is the "),le=i(Ze,"EM",{});var ba=n(le);st=o(ba,"Promise"),ba.forEach(a),it=o(Ze,"."),Ze.forEach(a),Ie=m(e),F=i(e,"P",{});var Pa=n(F);nt=o(Pa,`A promise short circuits the waiting time by returning a container immediately, allowing the subsequent code to run whilst it wait in the background.
This container wraps the actual value that the async task will eventually return.`),Pa.forEach(a),$e=m(e),Q=i(e,"P",{});var ka=n(Q);rt=o(ka,"How do to use the value inside the Promise then?"),ka.forEach(a),Me=m(e),N=i(e,"P",{});var et=n(N);ct=o(et,"Promises have a "),oe=i(et,"CODE",{});var Ca=n(oe);ut=o(Ca,".then()"),Ca.forEach(a),ft=o(et,` method that takes a function as an argument.
This function will be executed once the value has been successfully fulfilled by the Promise, and the value inside the promise will be passed into this function as an argument.`),et.forEach(a),Se=m(e),G=i(e,"PRE",{class:!0});var fl=n(G);fl.forEach(a),Ne=m(e),X=i(e,"H1",{});var Oa=n(X);dt=o(Oa,"using async/await"),Oa.forEach(a),je=m(e),T=i(e,"P",{});var q=n(T);ht=o(q,"Chaining a lot of "),se=i(q,"CODE",{});var Da=n(se);pt=o(Da,".then()"),Da.forEach(a),mt=o(q,` closures looks ugly.
Instead, using the `),ie=i(q,"CODE",{});var ga=n(ie);vt=o(ga,"async"),ga.forEach(a),_t=o(q," and "),ne=i(q,"CODE",{});var Ta=n(ne);wt=o(Ta,"await"),Ta.forEach(a),yt=o(q," syntax helps make it look cleaner, as it lets you write code that is more like normal synchronous code."),q.forEach(a),qe=m(e),y=i(e,"P",{});var E=n(y);re=i(E,"CODE",{});var xa=n(re);Et=o(xa,"async"),xa.forEach(a),bt=o(E," keyword is used to define an "),ce=i(E,"CODE",{});var Ha=n(ce);Pt=o(Ha,"async function"),Ha.forEach(a),kt=o(E,", which will automatically make the function return a "),ue=i(E,"CODE",{});var Aa=n(ue);Ct=o(Aa,"Promise"),Aa.forEach(a),Ot=o(E,`.
Within the `),fe=i(E,"CODE",{});var Ia=n(fe);Dt=o(Ia,"async function"),Ia.forEach(a),gt=o(E,", use "),de=i(E,"CODE",{});var $a=n(de);Tt=o($a,"await"),$a.forEach(a),xt=o(E," before any async expression (i.e. code that returns Promises) to force the code to wait for that expression to finish and "),he=i(E,"STRONG",{});var Ma=n(he);Ht=o(Ma,"unwrap"),Ma.forEach(a),At=o(E,` the value inside the Promise.
`),pe=i(E,"CODE",{});var Sa=n(pe);It=o(Sa,"await"),Sa.forEach(a),$t=o(E," can only be used within an "),me=i(E,"CODE",{});var Na=n(me);Mt=o(Na,"async"),Na.forEach(a),St=o(E," function."),E.forEach(a),Ye=m(e),U=i(e,"PRE",{class:!0});var dl=n(U);dl.forEach(a),Je=m(e),Z=i(e,"H1",{});var ja=n(Z);Nt=o(ja,"how to assign value inside promise to a variable?"),ja.forEach(a),Le=m(e),C=i(e,"P",{});var H=n(C);jt=o(H,"Notice that "),ve=i(H,"CODE",{});var qa=n(ve);qt=o(qa,"async"),qa.forEach(a),Yt=o(H,` functions implicitly wraps its output in a Promise.
Notice also that you can only use `),_e=i(H,"CODE",{});var Ya=n(_e);Jt=o(Ya,"await"),Ya.forEach(a),Lt=o(H,", which unwraps a Promise, "),we=i(H,"EM",{});var Ja=n(we);Rt=o(Ja,"inside"),Ja.forEach(a),Bt=m(H),ye=i(H,"CODE",{});var La=n(ye);Gt=o(La,"async"),La.forEach(a),Ut=o(H,` functions.
How then, do you assign the value inside Promise into a variable?`),H.forEach(a),Re=m(e),j=i(e,"P",{});var tt=n(j);Wt=o(tt,`You will need to first instantiate a variable, and then assign the Promise\u2019s value once it has been resolved.
To do this, we can do the assignment within the `),Ee=i(tt,"CODE",{});var Ra=n(Ee);Kt=o(Ra,".then()"),Ra.forEach(a),Vt=o(tt," closure."),tt.forEach(a),Be=m(e),O=i(e,"P",{});var A=n(O);zt=o(A,"So at the end, "),be=i(A,"CODE",{});var Ba=n(be);Ft=o(Ba,"async"),Ba.forEach(a),Qt=o(A,"/"),Pe=i(A,"CODE",{});var Ga=n(Pe);Xt=o(Ga,"await"),Ga.forEach(a),Zt=o(A," is only able to abstract away all the middle "),ke=i(A,"CODE",{});var Ua=n(ke);ea=o(Ua,".then()"),Ua.forEach(a),ta=o(A," closures, but ultimately "),Ce=i(A,"CODE",{});var Wa=n(Ce);aa=o(Wa,".then()"),Wa.forEach(a),la=o(A," is still needed in the final step to assign the value to a variable."),A.forEach(a),Ge=m(e),W=i(e,"PRE",{class:!0});var hl=n(W);hl.forEach(a),Ue=m(e),D=i(e,"P",{});var I=n(D);oa=o(I,"You will need to handle the state of "),Oe=i(I,"CODE",{});var Ka=n(Oe);sa=o(Ka,"data"),Ka.forEach(a),ia=o(I," by yourself, and make the DOM show what you want it to show when "),De=i(I,"CODE",{});var Va=n(De);na=o(Va,"data"),Va.forEach(a),ra=o(I," is "),ge=i(I,"CODE",{});var za=n(ge);ca=o(za,"null"),za.forEach(a),ua=o(I," and also when "),Te=i(I,"CODE",{});var Fa=n(Te);fa=o(Fa,"data"),Fa.forEach(a),da=o(I," is the value of resolved promise."),I.forEach(a),We=m(e),ee=i(e,"H2",{});var Qa=n(ee);ha=o(Qa,"svelte way"),Qa.forEach(a),Ke=m(e),te=i(e,"P",{});var Xa=n(te);pa=o(Xa,"Svelte abstracts away this complexity by using its await blocks"),Xa.forEach(a),Ve=m(e),K=i(e,"PRE",{class:!0});var pl=n(K);pl.forEach(a),ze=m(e),ae=i(e,"H1",{});var Za=n(ae);ma=o(Za,"retrieving data from API"),Za.forEach(a),Fe=m(e),bl(V.$$.fragment,e),this.h()},h(){at(G,"class","language-undefined"),at(U,"class","language-undefined"),at(W,"class","language-undefined"),at(K,"class","language-undefined")},m(e,r){c(e,u,r),t(u,h),c(e,f,r),c(e,d,r),t(d,w),c(e,v,r),c(e,P,r),t(P,Y),t(P,$),t($,J),t(P,L),c(e,R,r),c(e,x,r),t(x,B),c(e,M,r),c(e,g,r),t(g,b),c(e,He,r),c(e,z,r),t(z,lt),c(e,Ae,r),c(e,S,r),t(S,ot),t(S,le),t(le,st),t(S,it),c(e,Ie,r),c(e,F,r),t(F,nt),c(e,$e,r),c(e,Q,r),t(Q,rt),c(e,Me,r),c(e,N,r),t(N,ct),t(N,oe),t(oe,ut),t(N,ft),c(e,Se,r),c(e,G,r),G.innerHTML=nl,c(e,Ne,r),c(e,X,r),t(X,dt),c(e,je,r),c(e,T,r),t(T,ht),t(T,se),t(se,pt),t(T,mt),t(T,ie),t(ie,vt),t(T,_t),t(T,ne),t(ne,wt),t(T,yt),c(e,qe,r),c(e,y,r),t(y,re),t(re,Et),t(y,bt),t(y,ce),t(ce,Pt),t(y,kt),t(y,ue),t(ue,Ct),t(y,Ot),t(y,fe),t(fe,Dt),t(y,gt),t(y,de),t(de,Tt),t(y,xt),t(y,he),t(he,Ht),t(y,At),t(y,pe),t(pe,It),t(y,$t),t(y,me),t(me,Mt),t(y,St),c(e,Ye,r),c(e,U,r),U.innerHTML=rl,c(e,Je,r),c(e,Z,r),t(Z,Nt),c(e,Le,r),c(e,C,r),t(C,jt),t(C,ve),t(ve,qt),t(C,Yt),t(C,_e),t(_e,Jt),t(C,Lt),t(C,we),t(we,Rt),t(C,Bt),t(C,ye),t(ye,Gt),t(C,Ut),c(e,Re,r),c(e,j,r),t(j,Wt),t(j,Ee),t(Ee,Kt),t(j,Vt),c(e,Be,r),c(e,O,r),t(O,zt),t(O,be),t(be,Ft),t(O,Qt),t(O,Pe),t(Pe,Xt),t(O,Zt),t(O,ke),t(ke,ea),t(O,ta),t(O,Ce),t(Ce,aa),t(O,la),c(e,Ge,r),c(e,W,r),W.innerHTML=cl,c(e,Ue,r),c(e,D,r),t(D,oa),t(D,Oe),t(Oe,sa),t(D,ia),t(D,De),t(De,na),t(D,ra),t(D,ge),t(ge,ca),t(D,ua),t(D,Te),t(Te,fa),t(D,da),c(e,We,r),c(e,ee,r),t(ee,ha),c(e,Ke,r),c(e,te,r),t(te,pa),c(e,Ve,r),c(e,K,r),K.innerHTML=ul,c(e,ze,r),c(e,ae,r),t(ae,ma),c(e,Fe,r),Pl(V,e,r),Qe=!0},p:k,i(e){Qe||(xe(V.$$.fragment,e),Qe=!0)},o(e){kl(V.$$.fragment,e),Qe=!1},d(e){e&&a(u),e&&a(f),e&&a(d),e&&a(v),e&&a(P),e&&a(R),e&&a(x),e&&a(M),e&&a(g),e&&a(He),e&&a(z),e&&a(Ae),e&&a(S),e&&a(Ie),e&&a(F),e&&a($e),e&&a(Q),e&&a(Me),e&&a(N),e&&a(Se),e&&a(G),e&&a(Ne),e&&a(X),e&&a(je),e&&a(T),e&&a(qe),e&&a(y),e&&a(Ye),e&&a(U),e&&a(Je),e&&a(Z),e&&a(Le),e&&a(C),e&&a(Re),e&&a(j),e&&a(Be),e&&a(O),e&&a(Ge),e&&a(W),e&&a(Ue),e&&a(D),e&&a(We),e&&a(ee),e&&a(Ke),e&&a(te),e&&a(Ve),e&&a(K),e&&a(ze),e&&a(ae),e&&a(Fe),Cl(V,e)}}}const Ml={title:"Javascript Async",date:"2022-10-13"},{title:ll,date:ql}=Ml;class Yl extends ol{constructor(u){super(),sl(this,u,null,$l,il,{})}}export{Yl as default,Ml as metadata};
