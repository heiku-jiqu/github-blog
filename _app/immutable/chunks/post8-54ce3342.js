import{S as fD,i as dD,s as pD,k as a,q as l,a as f,l as i,m as r,r as s,h as o,c as d,n as p,b as c,B as t,A as L3}from"./index-4cbca6b4.js";function uD(m5){let he,kf,or,Gt,Df,lr,Kt,wf,sr,Wt,yf,ar,Vt,bf,ir,Ft,Of,rr,Bt,Cf,nr,_e,x,If,Al,Pf,Rf,Ml,Tf,Lf,xl,Nf,Hf,Sf,Qe,Af,Ul,Mf,xf,cr,zt,Uf,fr,qt,Yf,dr,Ze,Yl,Gf,Kf,pr,$t,Wf,ur,ke,Vf,Gl,Ff,Bf,Er,jt,zf,mr,Xt,qf,vr,Qt,$f,hr,De,jf,Kl,Xf,Qf,_r,Zt,Zf,kr,I,Jf,Wl,gf,ed,Vl,td,od,Fl,ld,sd,Dr,Jt,ad,wr,we,id,Bl,rd,nd,yr,gt,cd,br,eo,fd,Or,ye,dd,zl,pd,ud,Cr,to,Ed,Ir,Pr,Rr,oo,md,Tr,lo,vd,Lr,so,hd,Nr,be,_d,ql,kd,Dd,Hr,Je,v5=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">FROM</span> apache/spark</span>

<span class="token comment"># to specify a tag</span>
<span class="token instruction"><span class="token keyword">FROM</span> apache/spark:3.3.1</span></code>`,Sr,ao,wd,Ar,io,yd,Mr,ge,h5=`<code class="language-dockerfile"><span class="token comment"># Shell form (defaults to /bin/sh -c on Linux or cmd /S /C on Windows)</span>
<span class="token instruction"><span class="token keyword">RUN</span> &lt;command></span>

<span class="token comment"># Exec form</span>
<span class="token instruction"><span class="token keyword">RUN</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>]</span></code>`,xr,ro,bd,Ur,no,Od,Yr,et,_5=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # exec form</span>
<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # default parameters to ENTRYPOINT</span>
<span class="token instruction"><span class="token keyword">CMD</span> command param1 param2 # shell form</span></code>`,Gr,co,Cd,Kr,fo,Id,Wr,tt,k5=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ENTRYPOINT</span> [<span class="token string">"executable"</span>, <span class="token string">"param1"</span>, <span class="token string">"param2"</span>] # exec form</span>
<span class="token instruction"><span class="token keyword">ENTRYPOINT</span> command param1 param2 # shell form</span></code>`,Vr,po,Pd,Fr,uo,Rd,Br,ot,D5=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">COPY</span> &lt;src>... &lt;dest></span>
<span class="token instruction"><span class="token keyword">COPY</span> [<span class="token string">"&lt;src>"</span>,... <span class="token string">"&lt;dest>"</span>] # used when there are spaces in path</span></code>`,zr,V,Td,$l,Ld,Nd,jl,Hd,Sd,qr,Oe,Ad,Xl,Md,xd,$r,Eo,Ud,jr,mo,Yd,Xr,lt,w5=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ADD</span> &lt;src>... &lt;dest></span>
<span class="token instruction"><span class="token keyword">ADD</span> [<span class="token string">"&lt;src>"</span>,... <span class="token string">"&lt;dest>"</span>] # used when there are spaces in path</span></code>`,Qr,Ce,Gd,Ql,Kd,Wd,Zr,F,Zl,Vd,Fd,st,Bd,Jl,zd,qd,$d,gl,jd,Jr,at,es,Xd,Qd,gr,B,Zd,ts,Jd,gd,os,ep,tp,en,Ie,op,ls,lp,sp,tn,vo,ap,on,ho,ip,ln,it,y5='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ENV</span> &lt;key>=&lt;value></span></code>',sn,_o,rp,an,ko,np,rn,rt,b5='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">EXPOSE</span> &lt;port> [&lt;port>/&lt;protocol>]</span></code>',nn,U,ss,cp,fp,as,dp,pp,is,up,Ep,cn,Do,mp,fn,wo,vp,dn,nt,O5=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">VOLUME</span> &lt;path/to/container/dir> &lt;path/to/container/dir2> # space separated paths</span>
<span class="token instruction"><span class="token keyword">VOLUME</span> [<span class="token string">"&lt;/path/to/dir1>"</span>, <span class="token string">"&lt;/path/to/dir2>"</span>] #json array</span></code>`,pn,Pe,hp,rs,_p,kp,un,yo,Dp,En,v,wp,ns,yp,bp,cs,Op,Cp,fs,Ip,Pp,ds,Rp,Tp,ps,Lp,Np,mn,ct,C5=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">WORKDIR</span> /path/to/workdir # absolute paths, i.e. starts with /</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> path/to/child/dir # relative path, i.e. does not start with /</span></code>`,vn,Re,Hp,us,Sp,Ap,hn,z,Mp,Es,xp,Up,ms,Yp,Gp,_n,bo,ft,Kp,vs,Wp,Vp,kn,q,Fp,hs,Bp,zp,_s,qp,$p,Dn,Oo,jp,wn,$,Xp,ks,Qp,Zp,Ds,Jp,gp,yn,dt,I5='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ARG</span> &lt;name>[=&lt;default value>]</span></code>',bn,Y,ws,eu,tu,ys,ou,lu,bs,su,au,On,Co,iu,Cn,Io,ru,In,pt,P5='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">ONBUILD</span> &lt;INSTRUCTION></span></code>',Pn,Po,nu,Rn,ut,R5=`<code class="language-dockerfile"><span class="token comment"># copy host files to /contents in the container</span>
<span class="token instruction"><span class="token keyword">ONBUILD</span> <span class="token keyword">ADD</span> . /contents</span>

<span class="token comment"># tar all files in the /contents directory in the container to archive.tar in the container</span>
<span class="token instruction"><span class="token keyword">ONBUILD</span> <span class="token keyword">RUN</span> tar -cfv archive.tar /contents</span></code>`,Tn,j,cu,Os,fu,du,Cs,pu,uu,Ln,Et,Is,Eu,mu,Nn,Ro,vu,Hn,To,hu,Sn,mt,T5='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">STOPSIGNAL</span> signal</span></code>',An,X,Lo,_u,Ps,ku,Du,de,wu,Rs,yu,bu,Ts,Ou,Cu,Iu,vt,Pu,Ls,Ru,Tu,Mn,No,Lu,xn,Ho,Nu,Un,ht,L5=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">HEALTHCHECK</span> [OPTIONS] CMD command</span>
<span class="token instruction"><span class="token keyword">HEALTHCHECK</span> <span class="token keyword">NONE</span> # disable any healthcheck from base image</span></code>`,Yn,_t,Ns,Hu,Su,Gn,P,Te,Hs,Au,Mu,Ss,xu,Uu,Yu,Le,As,Gu,Ku,Ms,Wu,Vu,Fu,Ne,xs,Bu,zu,Us,qu,$u,ju,He,Ys,Xu,Qu,Gs,Zu,Ju,Kn,h,gu,Ks,eE,tE,Ws,oE,lE,Vs,sE,aE,Fs,iE,rE,Bs,nE,cE,Wn,Q,fE,zs,dE,pE,qs,uE,EE,Vn,Z,mE,$s,vE,hE,js,_E,kE,Fn,So,DE,Bn,J,wE,Xs,yE,bE,Qs,OE,CE,zn,kt,N5='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">SHELL</span> [<span class="token string">"executable"</span>, <span class="token string">"parameters"</span>]</span></code>',qn,Ao,IE,$n,Mo,PE,jn,Dt,H5=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">USER</span> &lt;user></span>
<span class="token instruction"><span class="token keyword">USER</span> &lt;UID></span></code>`,Xn,xo,RE,Qn,Uo,TE,Zn,Se,LE,Zs,NE,HE,Jn,wt,S5='<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">LABEL</span> &lt;key>=&lt;value> &lt;key>=&lt;value> ...</span></code>',gn,Yo,SE,ec,Ae,AE,Js,ME,xE,tc,g,UE,gs,YE,GE,ea,KE,WE,oc,Me,ee,ta,VE,FE,oa,BE,zE,la,qE,$E,jE,_,sa,XE,QE,aa,ZE,JE,ia,gE,em,ra,tm,om,na,lm,sm,lc,u,am,ca,im,rm,fa,nm,cm,da,fm,dm,pa,pm,um,ua,Em,mm,Ea,vm,hm,ma,_m,km,va,Dm,wm,ha,ym,bm,_a,Om,Cm,ka,Im,Pm,sc,yt,A5=`<code class="language-dockerfile"><span class="token instruction"><span class="token keyword">FROM</span> example</span>
<span class="token instruction"><span class="token keyword">ENV</span> var=/bar</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token variable">$&#123;var&#125;</span> # WORKDIR /bar</span>
<span class="token instruction"><span class="token keyword">ADD</span> . <span class="token variable">$FOO</span>     # ADD . /bar</span></code>`,ac,Go,Da,Rm,ic,R,Tm,wa,Lm,Nm,ya,Hm,Sm,ba,Am,Mm,rc,Ko,xm,nc,cc,fc,Wo,Um,dc,Vo,Ym,pc,Fo,Gm,uc,bt,M5='<code class="language-undefined">docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]</code>',Ec,te,Oa,Km,Wm,Ca,k,Ia,Vm,Fm,Pa,Bm,zm,Ra,qm,$m,Ta,jm,Xm,La,Qm,Zm,Jm,Bo,gm,Na,ev,mc,Ot,Ha,tv,ov,vc,D,Sa,lv,sv,Aa,av,iv,Ma,rv,nv,xa,cv,fv,Ua,dv,hc,zo,pv,_c,m,qo,Ya,uv,Ev,mv,G,Ga,vv,hv,Ka,_v,kv,Wa,Dv,wv,Va,yv,bv,T,Fa,Ov,Cv,Ba,Iv,Pv,za,Rv,Tv,qa,Lv,Nv,Hv,L,$a,Sv,Av,ja,Mv,xv,Xa,Uv,Yv,Qa,Gv,Kv,Wv,xe,Za,Vv,Fv,Ja,Bv,zv,qv,$o,ga,$v,jv,Xv,N,ei,Qv,Zv,ti,Jv,gv,oi,e1,t1,Ct,o1,l1,kc,Ue,li,s1,a1,pe,i1,It,r1,n1,Pt,c1,f1,Dc,jo,d1,wc,Xo,p1,yc,Qo,u1,bc,Zo,E1,Oc,Jo,m1,Cc,go,v1,Ic,oe,h1,si,_1,k1,ai,D1,w1,Pc,Rt,x5='<code class="language-undefined">docker logs [OPTIONS] CONTAINER</code>',Rc,el,y1,Tc,w,Ye,ii,b1,O1,ri,C1,I1,P1,Ge,ni,R1,T1,ci,L1,N1,H1,le,fi,S1,A1,di,M1,x1,pi,U1,Y1,G1,H,ui,K1,W1,Ei,V1,F1,mi,B1,z1,vi,q1,$1,j1,Ke,hi,X1,Q1,_i,Z1,J1,Lc,tl,g1,Nc,ol,eh,Hc,Tt,U5='<code class="language-undefined">docker inspect [OPTIONS] NAME|ID</code>',Sc,ll,th,Ac,sl,oh,Mc,Lt,Y5='<code class="language-undefined">docker ps [OPTIONS]</code>',xc,al,lh,Uc,y,We,ki,sh,ah,Di,ih,rh,nh,se,wi,ch,fh,yi,dh,ph,bi,uh,Eh,mh,il,Oi,vh,hh,_h,ae,Ci,kh,Dh,Ii,wh,yh,Pi,bh,Oh,Ch,C,Ri,Ih,Ph,Ti,Rh,Th,Li,Lh,Nh,Ni,Hh,Sh,Nt,Ve,Hi,Ah,Mh,Si,xh,Uh,Yh,rl,Ai,Gh,Kh,Yc,nl,Wh,Gc,cl,Vh,Kc,Ht,G5='<code class="language-undefined">docker stats [OPTIONS] [CONTAINER...]</code>',Wc,fl,Fh,Vc,S,Fe,Mi,Bh,zh,xi,qh,$h,jh,dl,Ui,Xh,Qh,Zh,pl,Yi,Jh,gh,e3,ul,Gi,t3,o3,Fc,Bc,zc,El,l3,qc,$c,jc,ml,s3,Xc,vl,a3,Qc,hl,i3,Zc,b,Ki,r3,n3,Wi,c3,f3,Vi,d3,p3,Fi,u3,E3,Bi,m3;return{c(){he=a("h1"),kf=l(E5),or=f(),Gt=a("p"),Df=l("Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),lr=f(),Kt=a("p"),wf=l(`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),sr=f(),Wt=a("h2"),yf=l("key concepts"),ar=f(),Vt=a("h3"),bf=l("Docker images"),ir=f(),Ft=a("p"),Of=l(`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),rr=f(),Bt=a("p"),Cf=l("Images are often build on top of one another"),nr=f(),_e=a("ul"),x=a("li"),If=l("e.g. you start with "),Al=a("code"),Pf=l("ubuntu"),Rf=l(" image, install "),Ml=a("code"),Tf=l("python"),Lf=l(" in that ubuntu image, install "),xl=a("code"),Nf=l("pytorch"),Hf=l(" package, install pretrained models."),Sf=f(),Qe=a("li"),Af=l("or you can start with a published "),Ul=a("code"),Mf=l("python"),xf=l(" image, and install your packages there."),cr=f(),zt=a("p"),Uf=l("Published images are available for download in Docker registries."),fr=f(),qt=a("h4"),Yf=l("Dockerfile"),dr=f(),Ze=a("p"),Yl=a("code"),Gf=l("Dockerfile"),Kf=l("s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),pr=f(),$t=a("h3"),Wf=l("Docker containers"),ur=f(),ke=a("p"),Vf=l(`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),Gl=a("code"),Ff=l("nodejs"),Bf=l(" image, but one exposes port 8888 and another exposes port 8899."),Er=f(),jt=a("h3"),zf=l("Docker registries"),mr=f(),Xt=a("p"),qf=l("Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),vr=f(),Qt=a("h3"),$f=l("Docker daemon"),hr=f(),De=a("p"),jf=l("This is the underlying "),Kl=a("code"),Xf=l("dockerd"),Qf=l(" process that helps you build images and run containers. It will listen for Docker API requests"),_r=f(),Zt=a("h3"),Zf=l("Docker client"),kr=f(),I=a("p"),Jf=l("The docker client "),Wl=a("code"),gf=l("docker"),ed=l(" is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),Vl=a("code"),td=l("docker"),od=l(" command sends Docker API requests to "),Fl=a("code"),ld=l("dockerd"),sd=l("."),Dr=f(),Jt=a("h3"),ad=l("Docker compose"),wr=f(),we=a("p"),id=l("Docker compose is a tool that helps with running "),Bl=a("em"),rd=l("multi-container"),nd=l(" Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),yr=f(),gt=a("p"),cd=l("For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),br=f(),eo=a("h4"),fd=l("Difference between Kubernetes"),Or=f(),ye=a("p"),dd=l("Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),zl=a("em"),pd=l("single-node"),ud=l(", whereas Kubernetes is a full multi-node container manager."),Cr=f(),to=a("p"),Ed=l("Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),Ir=f(),Pr=a("hr"),Rr=f(),oo=a("h2"),md=l("Dockerfile"),Tr=f(),lo=a("h3"),vd=l("Commands"),Lr=f(),so=a("h4"),hd=l("FROM"),Nr=f(),be=a("p"),_d=l("All dockerfile starts with the "),ql=a("code"),kd=l("FROM"),Dd=l(" command. It pulls the base image from Dockerhub to start to build your image."),Hr=f(),Je=a("pre"),Sr=f(),ao=a("h4"),wd=l("RUN"),Ar=f(),io=a("p"),yd=l("Runs a command or executable. It has two forms"),Mr=f(),ge=a("pre"),xr=f(),ro=a("h4"),bd=l("CMD"),Ur=f(),no=a("p"),Od=l("Provides defaults for an executing container. The arguments will be appended to ENTRYPOINT."),Yr=f(),et=a("pre"),Gr=f(),co=a("h4"),Cd=l("ENTRYPOINT"),Kr=f(),fo=a("p"),Id=l(`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),Wr=f(),tt=a("pre"),Vr=f(),po=a("h4"),Pd=l("COPY"),Fr=f(),uo=a("p"),Rd=l("Copies file from your native host into the container image."),Br=f(),ot=a("pre"),zr=f(),V=a("p"),Td=l("Multiple "),$l=a("code"),Ld=l("<src>"),Nd=l(" can be specified, and the last argument will be treated as the "),jl=a("code"),Hd=l("<dest>"),Sd=l("."),qr=f(),Oe=a("p"),Ad=l("All "),Xl=a("code"),Md=l("<src>"),xd=l(" relative paths must be inside context of the build!"),$r=f(),Eo=a("h4"),Ud=l("ADD"),jr=f(),mo=a("p"),Yd=l("Copies file from your native host into the container image."),Xr=f(),lt=a("pre"),Qr=f(),Ce=a("p"),Gd=l("Compared to COPY, "),Ql=a("code"),Kd=l("ADD"),Wd=l(" has added utilities like:"),Zr=f(),F=a("ul"),Zl=a("li"),Vd=l("being able to download files from URLs then copying them into the image"),Fd=f(),st=a("li"),Bd=l("extracting contents of "),Jl=a("code"),zd=l(".tar"),qd=l(" files before copying into image"),$d=f(),gl=a("li"),jd=l("adding contents from a git repo"),Jr=f(),at=a("p"),es=a("strong"),Xd=l("tip: use COPY as default, unless you need the additional features of ADD."),Qd=l(" This is to prevent unwanted side effects!"),gr=f(),B=a("p"),Zd=l("Multiple "),ts=a("code"),Jd=l("<src>"),gd=l(" can be specified, and the last argument will be treated as the "),os=a("code"),ep=l("<dest>"),tp=l("."),en=f(),Ie=a("p"),op=l("All "),ls=a("code"),lp=l("<src>"),sp=l(" relative paths must be inside context of the build!"),tn=f(),vo=a("h4"),ap=l("ENV"),on=f(),ho=a("p"),ip=l("Sets an environment variable"),ln=f(),it=a("pre"),sn=f(),_o=a("h4"),rp=l("EXPOSE"),an=f(),ko=a("p"),np=l("Instructs Docker that container should listen on specified network ports at runtime."),rn=f(),rt=a("pre"),nn=f(),U=a("p"),ss=a("strong"),cp=l("Ports are not automatically published"),fp=l(`, and this command is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),as=a("code"),dp=l("-P"),pp=l(" flag (which maps exposed ports in container to random ports in native host machine), or "),is=a("code"),up=l("-p"),Ep=l(" to explicitly map ports from containers to your localhost."),cn=f(),Do=a("h4"),mp=l("VOLUME"),fn=f(),wo=a("p"),vp=l(`Marks the directory(s) within the container as an external drive from native host or other containers.
This allows files to be accessed from outside the containers.`),dn=f(),nt=a("pre"),pn=f(),Pe=a("p"),hp=l("Note that where this (container) directory maps to in your native host is "),rs=a("strong"),_p=l("specified when you build or run the container"),kp=l("."),un=f(),yo=a("h4"),Dp=l("WORKDIR"),En=f(),v=a("p"),wp=l("Sets working directory for any "),ns=a("code"),yp=l("RUN"),bp=l(", "),cs=a("code"),Op=l("CMD"),Cp=l(", "),fs=a("code"),Ip=l("ENTRYPOINT"),Pp=l(", "),ds=a("code"),Rp=l("COPY"),Tp=l(", "),ps=a("code"),Lp=l("ADD"),Np=l(" instructions that follows."),mn=f(),ct=a("pre"),vn=f(),Re=a("p"),Hp=l("Multiple "),us=a("code"),Sp=l("WORKDIR"),Ap=l(" can be used in a dockerfile."),hn=f(),z=a("p"),Mp=l("If not specified, default directory is "),Es=a("code"),xp=l("/"),Up=l(`.
But if you are pulling from an image, chances are `),ms=a("code"),Yp=l("WORKDIR"),Gp=l(" already been set in your base image and it will be brought over."),_n=f(),bo=a("p"),ft=a("strong"),Kp=l("tip: explicitly set "),vs=a("code"),Wp=l("WORKDIR"),Vp=l(" to prevent unintended operations in unknown dirs"),kn=f(),q=a("p"),Fp=l("It is also possible to resolve env variables previously set by "),hs=a("code"),Bp=l("ENV"),zp=l(", e.g. "),_s=a("code"),qp=l("WORKDIR $DIRPATH_ENV_VAR"),$p=l("."),Dn=f(),Oo=a("h4"),jp=l("ARG"),wn=f(),$=a("p"),Xp=l("Defines a variable that users can pass values into during "),ks=a("code"),Qp=l("docker build"),Zp=l(" by using "),Ds=a("code"),Jp=l("--build-arg <argname>=<value>"),gp=l(" flag."),yn=f(),dt=a("pre"),bn=f(),Y=a("p"),ws=a("code"),eu=l("ENV"),tu=l(" variables will overwrite "),ys=a("code"),ou=l("ARG"),lu=l(" variables if they are the same name (at the point where the "),bs=a("code"),su=l("ENV"),au=l(" variable is defined)."),On=f(),Co=a("h4"),iu=l("ONBUILD"),Cn=f(),Io=a("p"),ru=l("Adds a trigger to the image that will execute dockerfile instructions when the current image is used as the base for another build."),In=f(),pt=a("pre"),Pn=f(),Po=a("p"),nu=l("This command is usful when when you are building a base image that will be distributed to other people, and instructions that depend on other people\u2019s files needs to be run. Example, you could add:"),Rn=f(),ut=a("pre"),Tn=f(),j=a("p"),cu=l("The instructions specified are triggered "),Os=a("em"),fu=l("immediately"),du=l(" after the "),Cs=a("code"),pu=l("FROM"),uu=l(" instruction in the child image."),Ln=f(),Et=a("p"),Is=a("code"),Eu=l("ONBUILD"),mu=l(" triggers are not inherited by children images."),Nn=f(),Ro=a("h4"),vu=l("STOPSIGNAL"),Hn=f(),To=a("p"),hu=l("Sets the system call signal that will cause the container to exit."),Sn=f(),mt=a("pre"),An=f(),X=a("ul"),Lo=a("li"),_u=l("Default is "),Ps=a("code"),ku=l("SIGTERM"),Du=f(),de=a("li"),wu=l("Can be in "),Rs=a("code"),yu=l("SIG<NAME>"),bu=l(" format (e.g. "),Ts=a("code"),Ou=l("SIGKILL"),Cu=l(")"),Iu=f(),vt=a("li"),Pu=l("Can be an unassigned number in kernel\u2019s syscall table (e.g. "),Ls=a("code"),Ru=l("9"),Tu=l(")"),Mn=f(),No=a("h4"),Lu=l("HEALTHCHECK"),xn=f(),Ho=a("p"),Nu=l("Specifies a command to be run inside the container to check container\u2019s health."),Un=f(),ht=a("pre"),Yn=f(),_t=a("p"),Ns=a("code"),Hu=l("OPTIONS"),Su=l(" include:"),Gn=f(),P=a("ul"),Te=a("li"),Hs=a("code"),Au=l("--interval=DURATION"),Mu=l(" (default "),Ss=a("code"),xu=l("30s"),Uu=l(")"),Yu=f(),Le=a("li"),As=a("code"),Gu=l("--timeout=DURATION"),Ku=l(" (default "),Ms=a("code"),Wu=l("30s"),Vu=l(")"),Fu=f(),Ne=a("li"),xs=a("code"),Bu=l("--retries=N"),zu=l(" (default "),Us=a("code"),qu=l("3"),$u=l(")"),ju=f(),He=a("li"),Ys=a("code"),Xu=l("--start-period=DURATION"),Qu=l(" (default "),Gs=a("code"),Zu=l("0s"),Ju=l(")"),Kn=f(),h=a("p"),gu=l("A container that has "),Ks=a("code"),eE=l("HEALTHCHECK"),tE=l(" specified will have a "),Ws=a("em"),oE=l("health status"),lE=l(" that can take 3 possible states: "),Vs=a("code"),sE=l("starting"),aE=l(" | "),Fs=a("code"),iE=l("healthy"),rE=l(" | "),Bs=a("code"),nE=l("unhealthy"),cE=l("."),Wn=f(),Q=a("p"),fE=l("Whenever a health check passes, health status changes to "),zs=a("code"),dE=l("healthy"),pE=l(". After a number of consecutive failures, health status changes to "),qs=a("code"),uE=l("unhealthy"),EE=l("."),Vn=f(),Z=a("p"),mE=l(`Health checks are run after every interval.
Health checks are considered failed when commands runs for longer than timeout.
When consecutive failures reaches max retries, or command exits with non zero status code `),$s=a("code"),vE=l("0"),hE=l(", "),js=a("em"),_E=l("health status"),kE=l(" will change to unhealthy."),Fn=f(),So=a("h4"),DE=l("SHELL"),Bn=f(),J=a("p"),wE=l("Specifies the default shell used for shell form of commands. Default is set to "),Xs=a("code"),yE=l('["/bin/sh", "-c"]'),bE=l(" for Linux containers and "),Qs=a("code"),OE=l('["cmd", "/S", "/C"]'),CE=l(" for Windows containers."),zn=f(),kt=a("pre"),qn=f(),Ao=a("h4"),IE=l("USER"),$n=f(),Mo=a("p"),PE=l("Sets the username/UID to use for the remainder of the Docker build stage."),jn=f(),Dt=a("pre"),Xn=f(),xo=a("p"),RE=l(`This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),Qn=f(),Uo=a("h4"),TE=l("LABEL"),Zn=f(),Se=a("p"),LE=l("Adds metadata to an image and are inherited by child images. You can view an image\u2019s labels using "),Zs=a("code"),NE=l("docker image inspect"),HE=l("."),Jn=f(),wt=a("pre"),gn=f(),Yo=a("h3"),SE=l("Environment Replacement"),ec=f(),Ae=a("p"),AE=l("Some Dockerfile instructions are able to read environment variables created by "),Js=a("code"),ME=l("ENV"),xE=l(" commands, and replace them with the values that those environment variables hold."),tc=f(),g=a("p"),UE=l("The syntax is "),gs=a("code"),YE=l("$variable_name"),GE=l(" or "),ea=a("code"),KE=l("${variable_name}"),WE=l(" within a Dockerfile."),oc=f(),Me=a("ul"),ee=a("li"),ta=a("code"),VE=l("${variable:-word}"),FE=l(" to set "),oa=a("code"),BE=l("word"),zE=l(" as default value when "),la=a("code"),qE=l("variable"),$E=l(" is not set"),jE=f(),_=a("li"),sa=a("code"),XE=l("${variable:+word}"),QE=l(" to set "),aa=a("code"),ZE=l("word"),JE=l(" as "),ia=a("code"),gE=l("variable"),em=l(" when "),ra=a("code"),tm=l("variable"),om=l(" has already been set, otherwise "),na=a("code"),lm=l("variable"),sm=l(" will be empty string."),lc=f(),u=a("p"),am=l("Dockerfile instructions that support environment variables are: "),ca=a("code"),im=l("ADD"),rm=l(", "),fa=a("code"),nm=l("COPY"),cm=l(", "),da=a("code"),fm=l("ENV"),dm=l(", "),pa=a("code"),pm=l("EXPOSE"),um=l(", "),ua=a("code"),Em=l("FROM"),mm=l(", "),Ea=a("code"),vm=l("LABEL"),hm=l(", "),ma=a("code"),_m=l("STOPSIGNAL"),km=l(", "),va=a("code"),Dm=l("USER"),wm=l(", "),ha=a("code"),ym=l("VOLUME"),bm=l(", "),_a=a("code"),Om=l("WORKDIR"),Cm=l(", "),ka=a("code"),Im=l("ONBUILD"),Pm=l("."),sc=f(),yt=a("pre"),ac=f(),Go=a("h3"),Da=a("code"),Rm=l(".dockerignore"),ic=f(),R=a("p"),Tm=l("Similar to "),wa=a("code"),Lm=l(".gitignore"),Nm=l(", this file contains a list of files and directories that docker should "),ya=a("strong"),Hm=l("exclude"),Sm=l(" from the "),ba=a("em"),Am=l("context"),Mm=l(" of a docker build."),rc=f(),Ko=a("p"),xm=l("This is useful for preventing sending of large or sensitive files to docker daemon."),nc=f(),cc=a("hr"),fc=f(),Wo=a("h2"),Um=l("useful docker CLI commands"),dc=f(),Vo=a("h3"),Ym=l("docker run"),pc=f(),Fo=a("p"),Gm=l("Runs your images as isolated containers."),uc=f(),bt=a("pre"),Ec=f(),te=a("details"),Oa=a("summary"),Km=l("details"),Wm=f(),Ca=a("p"),k=a("em"),Ia=a("code"),Vm=l("docker run"),Fm=l("\u2019s "),Pa=a("code"),Bm=l("[OPTIONS]"),zm=l(" are specified "),Ra=a("strong"),qm=l("before"),$m=l(" the image name, whilst arguments ("),Ta=a("code"),jm=l("[ARG...]"),Xm=l(") for the command to be executed within the container is "),La=a("strong"),Qm=l("AFTER"),Zm=l(" the image name and command."),Jm=f(),Bo=a("p"),gm=l("for example: "),Na=a("code"),ev=l("docker run -ti ubuntu-image touch /path/to/file"),mc=f(),Ot=a("p"),Ha=a("code"),tv=l("docker run"),ov=l(" is able to set many runtime options and override default settings defined by images, these include:"),vc=f(),D=a("ul"),Sa=a("li"),lv=l("running container in foreground or detached mode"),sv=f(),Aa=a("li"),av=l("name of container"),iv=f(),Ma=a("li"),rv=l("network settings"),nv=f(),xa=a("li"),cv=l("volume settings"),fv=f(),Ua=a("li"),dv=l("cpu / memory limits"),hc=f(),zo=a("p"),pv=l("Common options to specify:"),_c=f(),m=a("ul"),qo=a("li"),Ya=a("code"),uv=l("--name"),Ev=l(" : assign a name to container (defaults to randomly generated words)"),mv=f(),G=a("li"),Ga=a("code"),vv=l("--detach"),hv=l(" / "),Ka=a("code"),_v=l("-d"),kv=l(" : run in detached mode so the terminal of the machine does not continouously stream container\u2019s "),Wa=a("code"),Dv=l("STDOUT"),wv=l(" / "),Va=a("code"),yv=l("STDERR"),bv=f(),T=a("li"),Fa=a("code"),Ov=l("--interactive"),Cv=l(" / "),Ba=a("code"),Iv=l("-i"),Pv=l(" : keep "),za=a("code"),Rv=l("STDIN"),Tv=l(" open even if not attached (usually used with "),qa=a("code"),Lv=l("-t"),Nv=l(")"),Hv=f(),L=a("li"),$a=a("code"),Sv=l("--tty"),Av=l(" / "),ja=a("code"),Mv=l("-t"),xv=l(" : allocate pseudo-TTY to connect to container\u2019s "),Xa=a("code"),Uv=l("STDIN"),Yv=l(" (usually used with "),Qa=a("code"),Gv=l("-i"),Kv=l(")"),Wv=f(),xe=a("li"),Za=a("code"),Vv=l("--expose"),Fv=l(" / "),Ja=a("code"),Bv=l("-p"),zv=l(" : expose container\u2019s ports to other containers and/or the host machine."),qv=f(),$o=a("li"),ga=a("code"),$v=l("--mount"),jv=l(" : mount volumes or directories to container"),Xv=f(),N=a("li"),ei=a("code"),Qv=l("--volume"),Zv=l(" / "),ti=a("code"),Jv=l("-v"),gv=l(" : mount volumes or directories to container (use of "),oi=a("code"),e1=l("--mount"),t1=l(" is recommended, "),Ct=a("a"),o1=l("see differences here"),l1=l(")"),kc=f(),Ue=a("details"),li=a("summary"),s1=l("note on docker run documentation"),a1=f(),pe=a("p"),i1=l("there are two pages for docker run, a "),It=a("a"),r1=l("generic one"),n1=l(" that lists all commands and "),Pt=a("a"),c1=l("another one"),f1=l(" that provides more explanation"),Dc=f(),jo=a("h3"),d1=l("docker build"),wc=f(),Xo=a("h3"),p1=l("docker image"),yc=f(),Qo=a("h3"),u1=l("docker container"),bc=f(),Zo=a("h3"),E1=l("docker network"),Oc=f(),Jo=a("h3"),m1=l("docker volume"),Cc=f(),go=a("h3"),v1=l("docker logs"),Ic=f(),oe=a("p"),h1=l("Retrieves container\u2019s logs (to "),si=a("code"),_1=l("STDOUT"),k1=l(" and "),ai=a("code"),D1=l("STDERR"),w1=l(") to your CLI."),Pc=f(),Rt=a("pre"),Rc=f(),el=a("p"),y1=l("Common options to specify:"),Tc=f(),w=a("ul"),Ye=a("li"),ii=a("code"),b1=l("--follow"),O1=l(" / "),ri=a("code"),C1=l("-f"),I1=l(" : continuously streams the log output"),P1=f(),Ge=a("li"),ni=a("code"),R1=l("--timestamps"),T1=l(" / "),ci=a("code"),L1=l("-t"),N1=l(" : show timestamps of logs"),H1=f(),le=a("li"),fi=a("code"),S1=l("--tail"),A1=l(" / "),di=a("code"),M1=l("-n"),x1=l(" : number of lines to show from end of the log (defaults to "),pi=a("code"),U1=l("all"),Y1=l(")"),G1=f(),H=a("li"),ui=a("code"),K1=l("--since"),W1=l(" : show logs "),Ei=a("em"),V1=l("since"),F1=l(" timestamp ("),mi=a("code"),B1=l("2013-01-02T13:37:00Z"),z1=l(") or relative ("),vi=a("code"),q1=l("42m"),$1=l(")"),j1=f(),Ke=a("li"),hi=a("code"),X1=l("--until"),Q1=l(" : show logs "),_i=a("em"),Z1=l("before"),J1=l(" timestamp or relative"),Lc=f(),tl=a("h3"),g1=l("docker inspect"),Nc=f(),ol=a("p"),eh=l(`Returns detailed information about docker objects.
Objects can be images, containers, networks, volumes, etc.`),Hc=f(),Tt=a("pre"),Sc=f(),ll=a("h3"),th=l("docker ps"),Ac=f(),sl=a("p"),oh=l(`List all containers and information about them (such as ID, image name, ports etc.)
Defaults to listing running containers only.`),Mc=f(),Lt=a("pre"),xc=f(),al=a("p"),lh=l("Useful options:"),Uc=f(),y=a("ul"),We=a("li"),ki=a("code"),sh=l("--all"),ah=l(" / "),Di=a("code"),ih=l("-a"),rh=l(" : lists all containers, including those that are not running"),nh=f(),se=a("li"),wi=a("code"),ch=l("--size"),fh=l(" / "),yi=a("code"),dh=l("-s"),ph=l(" : include size of the container in output. Shows both size of container (i.e. writable layer), and "),bi=a("code"),uh=l("virtual"),Eh=l(" size of total disk-space used, i.e. container + image."),mh=f(),il=a("li"),Oi=a("code"),vh=l("--no-trunc"),hh=l(" : prevent truncation in table output"),_h=f(),ae=a("li"),Ci=a("code"),kh=l("--filter"),Dh=l(" / "),Ii=a("code"),wh=l("-f"),yh=l(" : filters the output with key-value pairs. E.g. "),Pi=a("code"),bh=l('docker ps -f "name=mysparkcontainer"'),Oh=l("."),Ch=f(),C=a("li"),Ri=a("code"),Ih=l("--format"),Ph=l(" : formats the output using Go template. Placeholder information include "),Ti=a("code"),Rh=l(".ID"),Th=l(", "),Li=a("code"),Lh=l(".Image"),Nh=l(", "),Ni=a("code"),Hh=l(".Names"),Sh=l(" etc."),Nt=a("ul"),Ve=a("li"),Hi=a("code"),Ah=l('docker ps --format "{{.ID}}: {{.Name}}"'),Mh=l(" will print out "),Si=a("code"),xh=l("abcdef: name1"),Uh=l(" etc."),Yh=f(),rl=a("li"),Ai=a("code"),Gh=l('docker ps --format "table {{.ID}}\\t{{.Name}}"'),Kh=l(" will print the output in a table with header row."),Yc=f(),nl=a("h3"),Wh=l("docker stats"),Gc=f(),cl=a("p"),Vh=l(`Display live info about containers\u2019 resource usage (kind of like Window\u2019s task manager).
Defaults to only showing running containers.`),Kc=f(),Ht=a("pre"),Wc=f(),fl=a("p"),Fh=l("Useful options:"),Vc=f(),S=a("ul"),Fe=a("li"),Mi=a("code"),Bh=l("--all"),zh=l(" / "),xi=a("code"),qh=l("-a"),$h=l(" : lists all containers, including those that are not running"),jh=f(),dl=a("li"),Ui=a("code"),Xh=l("--no-trunc"),Qh=l(" : Prevent truncation in table output"),Zh=f(),pl=a("li"),Yi=a("code"),Jh=l("--no-stream"),gh=l(" : get only a \u2018snapshot\u2019 of the current stats"),e3=f(),ul=a("li"),Gi=a("code"),t3=l("--format"),o3=l(" : formats the output using Go template."),Fc=f(),Bc=a("hr"),zc=f(),El=a("h2"),l3=l("networking"),qc=f(),$c=a("hr"),jc=f(),ml=a("h2"),s3=l("storage"),Xc=f(),vl=a("p"),a3=l("By default, Docker containers store data in the container\u2019s writable layer, using a storage driver, and is not persisted."),Qc=f(),hl=a("p"),i3=l("5 types of storage in Docker to put container\u2019s data"),Zc=f(),b=a("ul"),Ki=a("li"),r3=l("default container\u2019s writable layer : does not persist. optimized for space efficiency, so write speeds are lower than native."),n3=f(),Wi=a("li"),c3=l("volumes : isolated, Docker managed, can store in remote drives, can share volumes with multiple containers"),f3=f(),Vi=a("li"),d3=l("bind mount : directly mount a specific directory on host machine to the container"),p3=f(),Fi=a("li"),u3=l("tmpfs mount (linux only) : store container data in memory, not persistent, but faster performance since its using RAM"),E3=f(),Bi=a("li"),m3=l("npipe mount (named pipes) (Windows only) : used to store data in memory for Windows"),this.h()},l(e){he=i(e,"H1",{});var n=r(he);kf=s(n,E5),n.forEach(o),or=d(e),Gt=i(e,"P",{});var N3=r(Gt);Df=s(N3,"Docker is a platform that containerizes applications, and runs those containers. This allows developers to decouple applications from infrastructure."),N3.forEach(o),lr=d(e),Kt=i(e,"P",{});var H3=r(Kt);wf=s(H3,`For example, if you were building an app that requires a specific OS and/or external dependencies that are required to run your app (e.g. PostgreSQL, nginx, etc.), you can bundle it all up into a container.
This allows different people/environments to run the app (container) with just Docker as its dependency, instead of having to deal with having the correct OS, correct external dependencies, etc.`),H3.forEach(o),sr=d(e),Wt=i(e,"H2",{});var S3=r(Wt);yf=s(S3,"key concepts"),S3.forEach(o),ar=d(e),Vt=i(e,"H3",{});var A3=r(Vt);bf=s(A3,"Docker images"),A3.forEach(o),ir=d(e),Ft=i(e,"P",{});var M3=r(Ft);Of=s(M3,`Images are templates with instructions for creating containers.
These instructions include what dependencies to install, setting environment and config variables, running any setup scripts, etc.`),M3.forEach(o),rr=d(e),Bt=i(e,"P",{});var x3=r(Bt);Cf=s(x3,"Images are often build on top of one another"),x3.forEach(o),nr=d(e),_e=i(e,"UL",{});var Jc=r(_e);x=i(Jc,"LI",{});var Be=r(x);If=s(Be,"e.g. you start with "),Al=i(Be,"CODE",{});var U3=r(Al);Pf=s(U3,"ubuntu"),U3.forEach(o),Rf=s(Be," image, install "),Ml=i(Be,"CODE",{});var Y3=r(Ml);Tf=s(Y3,"python"),Y3.forEach(o),Lf=s(Be," in that ubuntu image, install "),xl=i(Be,"CODE",{});var G3=r(xl);Nf=s(G3,"pytorch"),G3.forEach(o),Hf=s(Be," package, install pretrained models."),Be.forEach(o),Sf=d(Jc),Qe=i(Jc,"LI",{});var gc=r(Qe);Af=s(gc,"or you can start with a published "),Ul=i(gc,"CODE",{});var K3=r(Ul);Mf=s(K3,"python"),K3.forEach(o),xf=s(gc," image, and install your packages there."),gc.forEach(o),Jc.forEach(o),cr=d(e),zt=i(e,"P",{});var W3=r(zt);Uf=s(W3,"Published images are available for download in Docker registries."),W3.forEach(o),fr=d(e),qt=i(e,"H4",{});var V3=r(qt);Yf=s(V3,"Dockerfile"),V3.forEach(o),dr=d(e),Ze=i(e,"P",{});var v3=r(Ze);Yl=i(v3,"CODE",{});var F3=r(Yl);Gf=s(F3,"Dockerfile"),F3.forEach(o),Kf=s(v3,"s are text files that describe the instructions needed to build the image. It uses its own syntax to define every instruction to be executed to build the image."),v3.forEach(o),pr=d(e),$t=i(e,"H3",{});var B3=r($t);Wf=s(B3,"Docker containers"),B3.forEach(o),ur=d(e),ke=i(e,"P",{});var ef=r(ke);Vf=s(ef,`Containers are runnable instance of an image, and are created from an image. You can then start/stop/delete or manage the container however you like.
You can run multiple containers using the same image, and you can specify different configurations when running containers (on top of what is already specified in your image!).
For example, you can run two different node web server containers from the same `),Gl=i(ef,"CODE",{});var z3=r(Gl);Ff=s(z3,"nodejs"),z3.forEach(o),Bf=s(ef," image, but one exposes port 8888 and another exposes port 8899."),ef.forEach(o),Er=d(e),jt=i(e,"H3",{});var q3=r(jt);zf=s(q3,"Docker registries"),q3.forEach(o),mr=d(e),Xt=i(e,"P",{});var $3=r(Xt);qf=s($3,"Docker registries are where you find published docker images, akin to pypi / CRAN / crates.io."),$3.forEach(o),vr=d(e),Qt=i(e,"H3",{});var j3=r(Qt);$f=s(j3,"Docker daemon"),j3.forEach(o),hr=d(e),De=i(e,"P",{});var tf=r(De);jf=s(tf,"This is the underlying "),Kl=i(tf,"CODE",{});var X3=r(Kl);Xf=s(X3,"dockerd"),X3.forEach(o),Qf=s(tf," process that helps you build images and run containers. It will listen for Docker API requests"),tf.forEach(o),_r=d(e),Zt=i(e,"H3",{});var Q3=r(Zt);Zf=s(Q3,"Docker client"),Q3.forEach(o),kr=d(e),I=i(e,"P",{});var ze=r(I);Jf=s(ze,"The docker client "),Wl=i(ze,"CODE",{});var Z3=r(Wl);gf=s(Z3,"docker"),Z3.forEach(o),ed=s(ze," is a \u201Cfront-end\u201D CLI that the user uses to interact with the Docker daemon. Running a "),Vl=i(ze,"CODE",{});var J3=r(Vl);td=s(J3,"docker"),J3.forEach(o),od=s(ze," command sends Docker API requests to "),Fl=i(ze,"CODE",{});var g3=r(Fl);ld=s(g3,"dockerd"),g3.forEach(o),sd=s(ze,"."),ze.forEach(o),Dr=d(e),Jt=i(e,"H3",{});var e2=r(Jt);ad=s(e2,"Docker compose"),e2.forEach(o),wr=d(e),we=i(e,"P",{});var of=r(we);id=s(of,"Docker compose is a tool that helps with running "),Bl=i(of,"EM",{});var t2=r(Bl);rd=s(t2,"multi-container"),t2.forEach(o),nd=s(of," Docker applications. You can specify how your multi-container app will need to be setup in a YAML file."),of.forEach(o),yr=d(e),gt=i(e,"P",{});var o2=r(gt);cd=s(o2,"For example, your app requires a web server container, postgres container and mongodb container. Instead of installing all of those dependencies into one giant container, you split them up and scaffold them in your YAML file. This allows you to isolate your environments, and independently scale each service."),o2.forEach(o),br=d(e),eo=i(e,"H4",{});var l2=r(eo);fd=s(l2,"Difference between Kubernetes"),l2.forEach(o),Or=d(e),ye=i(e,"P",{});var lf=r(ye);dd=s(lf,"Both docker compose and kubernetes \u2018bundles\u2019 multi-container applications. However, the key difference is docker compose is run on a "),zl=i(lf,"EM",{});var s2=r(zl);pd=s(s2,"single-node"),s2.forEach(o),ud=s(lf,", whereas Kubernetes is a full multi-node container manager."),lf.forEach(o),Cr=d(e),to=i(e,"P",{});var a2=r(to);Ed=s(a2,"Think of docker compose as a tool for Proof-of-concepts as it does not help you solve the engineering and operational challenges of running a multi-container application in production environments. For example, what happens when one of your container goes down? Or if your entire node goes down? Kubernetes will automatically spin up a new one for you whilst docker compose will not."),a2.forEach(o),Ir=d(e),Pr=i(e,"HR",{}),Rr=d(e),oo=i(e,"H2",{});var i2=r(oo);md=s(i2,"Dockerfile"),i2.forEach(o),Tr=d(e),lo=i(e,"H3",{});var r2=r(lo);vd=s(r2,"Commands"),r2.forEach(o),Lr=d(e),so=i(e,"H4",{});var n2=r(so);hd=s(n2,"FROM"),n2.forEach(o),Nr=d(e),be=i(e,"P",{});var sf=r(be);_d=s(sf,"All dockerfile starts with the "),ql=i(sf,"CODE",{});var c2=r(ql);kd=s(c2,"FROM"),c2.forEach(o),Dd=s(sf," command. It pulls the base image from Dockerhub to start to build your image."),sf.forEach(o),Hr=d(e),Je=i(e,"PRE",{class:!0});var K5=r(Je);K5.forEach(o),Sr=d(e),ao=i(e,"H4",{});var f2=r(ao);wd=s(f2,"RUN"),f2.forEach(o),Ar=d(e),io=i(e,"P",{});var d2=r(io);yd=s(d2,"Runs a command or executable. It has two forms"),d2.forEach(o),Mr=d(e),ge=i(e,"PRE",{class:!0});var W5=r(ge);W5.forEach(o),xr=d(e),ro=i(e,"H4",{});var p2=r(ro);bd=s(p2,"CMD"),p2.forEach(o),Ur=d(e),no=i(e,"P",{});var u2=r(no);Od=s(u2,"Provides defaults for an executing container. The arguments will be appended to ENTRYPOINT."),u2.forEach(o),Yr=d(e),et=i(e,"PRE",{class:!0});var V5=r(et);V5.forEach(o),Gr=d(e),co=i(e,"H4",{});var E2=r(co);Cd=s(E2,"ENTRYPOINT"),E2.forEach(o),Kr=d(e),fo=i(e,"P",{});var m2=r(fo);Id=s(m2,`Configures a container that will run as an executable.
CMD will append its commands after ENTRYPOINT.
Setting ENTRYPOINT in your image will reset CMD from base image, so you need to redefine the CMD again.`),m2.forEach(o),Wr=d(e),tt=i(e,"PRE",{class:!0});var F5=r(tt);F5.forEach(o),Vr=d(e),po=i(e,"H4",{});var v2=r(po);Pd=s(v2,"COPY"),v2.forEach(o),Fr=d(e),uo=i(e,"P",{});var h2=r(uo);Rd=s(h2,"Copies file from your native host into the container image."),h2.forEach(o),Br=d(e),ot=i(e,"PRE",{class:!0});var B5=r(ot);B5.forEach(o),zr=d(e),V=i(e,"P",{});var _l=r(V);Td=s(_l,"Multiple "),$l=i(_l,"CODE",{});var _2=r($l);Ld=s(_2,"<src>"),_2.forEach(o),Nd=s(_l," can be specified, and the last argument will be treated as the "),jl=i(_l,"CODE",{});var k2=r(jl);Hd=s(k2,"<dest>"),k2.forEach(o),Sd=s(_l,"."),_l.forEach(o),qr=d(e),Oe=i(e,"P",{});var af=r(Oe);Ad=s(af,"All "),Xl=i(af,"CODE",{});var D2=r(Xl);Md=s(D2,"<src>"),D2.forEach(o),xd=s(af," relative paths must be inside context of the build!"),af.forEach(o),$r=d(e),Eo=i(e,"H4",{});var w2=r(Eo);Ud=s(w2,"ADD"),w2.forEach(o),jr=d(e),mo=i(e,"P",{});var y2=r(mo);Yd=s(y2,"Copies file from your native host into the container image."),y2.forEach(o),Xr=d(e),lt=i(e,"PRE",{class:!0});var z5=r(lt);z5.forEach(o),Qr=d(e),Ce=i(e,"P",{});var rf=r(Ce);Gd=s(rf,"Compared to COPY, "),Ql=i(rf,"CODE",{});var b2=r(Ql);Kd=s(b2,"ADD"),b2.forEach(o),Wd=s(rf," has added utilities like:"),rf.forEach(o),Zr=d(e),F=i(e,"UL",{});var kl=r(F);Zl=i(kl,"LI",{});var O2=r(Zl);Vd=s(O2,"being able to download files from URLs then copying them into the image"),O2.forEach(o),Fd=d(kl),st=i(kl,"LI",{});var nf=r(st);Bd=s(nf,"extracting contents of "),Jl=i(nf,"CODE",{});var C2=r(Jl);zd=s(C2,".tar"),C2.forEach(o),qd=s(nf," files before copying into image"),nf.forEach(o),$d=d(kl),gl=i(kl,"LI",{});var I2=r(gl);jd=s(I2,"adding contents from a git repo"),I2.forEach(o),kl.forEach(o),Jr=d(e),at=i(e,"P",{});var h3=r(at);es=i(h3,"STRONG",{});var P2=r(es);Xd=s(P2,"tip: use COPY as default, unless you need the additional features of ADD."),P2.forEach(o),Qd=s(h3," This is to prevent unwanted side effects!"),h3.forEach(o),gr=d(e),B=i(e,"P",{});var Dl=r(B);Zd=s(Dl,"Multiple "),ts=i(Dl,"CODE",{});var R2=r(ts);Jd=s(R2,"<src>"),R2.forEach(o),gd=s(Dl," can be specified, and the last argument will be treated as the "),os=i(Dl,"CODE",{});var T2=r(os);ep=s(T2,"<dest>"),T2.forEach(o),tp=s(Dl,"."),Dl.forEach(o),en=d(e),Ie=i(e,"P",{});var cf=r(Ie);op=s(cf,"All "),ls=i(cf,"CODE",{});var L2=r(ls);lp=s(L2,"<src>"),L2.forEach(o),sp=s(cf," relative paths must be inside context of the build!"),cf.forEach(o),tn=d(e),vo=i(e,"H4",{});var N2=r(vo);ap=s(N2,"ENV"),N2.forEach(o),on=d(e),ho=i(e,"P",{});var H2=r(ho);ip=s(H2,"Sets an environment variable"),H2.forEach(o),ln=d(e),it=i(e,"PRE",{class:!0});var q5=r(it);q5.forEach(o),sn=d(e),_o=i(e,"H4",{});var S2=r(_o);rp=s(S2,"EXPOSE"),S2.forEach(o),an=d(e),ko=i(e,"P",{});var A2=r(ko);np=s(A2,"Instructs Docker that container should listen on specified network ports at runtime."),A2.forEach(o),rn=d(e),rt=i(e,"PRE",{class:!0});var $5=r(rt);$5.forEach(o),nn=d(e),U=i(e,"P",{});var St=r(U);ss=i(St,"STRONG",{});var M2=r(ss);cp=s(M2,"Ports are not automatically published"),M2.forEach(o),fp=s(St,`, and this command is intended to serve as a type of documentation between image builder and image runner.
To publish port on run time, use `),as=i(St,"CODE",{});var x2=r(as);dp=s(x2,"-P"),x2.forEach(o),pp=s(St," flag (which maps exposed ports in container to random ports in native host machine), or "),is=i(St,"CODE",{});var U2=r(is);up=s(U2,"-p"),U2.forEach(o),Ep=s(St," to explicitly map ports from containers to your localhost."),St.forEach(o),cn=d(e),Do=i(e,"H4",{});var Y2=r(Do);mp=s(Y2,"VOLUME"),Y2.forEach(o),fn=d(e),wo=i(e,"P",{});var G2=r(wo);vp=s(G2,`Marks the directory(s) within the container as an external drive from native host or other containers.
This allows files to be accessed from outside the containers.`),G2.forEach(o),dn=d(e),nt=i(e,"PRE",{class:!0});var j5=r(nt);j5.forEach(o),pn=d(e),Pe=i(e,"P",{});var ff=r(Pe);hp=s(ff,"Note that where this (container) directory maps to in your native host is "),rs=i(ff,"STRONG",{});var K2=r(rs);_p=s(K2,"specified when you build or run the container"),K2.forEach(o),kp=s(ff,"."),ff.forEach(o),un=d(e),yo=i(e,"H4",{});var W2=r(yo);Dp=s(W2,"WORKDIR"),W2.forEach(o),En=d(e),v=i(e,"P",{});var A=r(v);wp=s(A,"Sets working directory for any "),ns=i(A,"CODE",{});var V2=r(ns);yp=s(V2,"RUN"),V2.forEach(o),bp=s(A,", "),cs=i(A,"CODE",{});var F2=r(cs);Op=s(F2,"CMD"),F2.forEach(o),Cp=s(A,", "),fs=i(A,"CODE",{});var B2=r(fs);Ip=s(B2,"ENTRYPOINT"),B2.forEach(o),Pp=s(A,", "),ds=i(A,"CODE",{});var z2=r(ds);Rp=s(z2,"COPY"),z2.forEach(o),Tp=s(A,", "),ps=i(A,"CODE",{});var q2=r(ps);Lp=s(q2,"ADD"),q2.forEach(o),Np=s(A," instructions that follows."),A.forEach(o),mn=d(e),ct=i(e,"PRE",{class:!0});var X5=r(ct);X5.forEach(o),vn=d(e),Re=i(e,"P",{});var df=r(Re);Hp=s(df,"Multiple "),us=i(df,"CODE",{});var $2=r(us);Sp=s($2,"WORKDIR"),$2.forEach(o),Ap=s(df," can be used in a dockerfile."),df.forEach(o),hn=d(e),z=i(e,"P",{});var wl=r(z);Mp=s(wl,"If not specified, default directory is "),Es=i(wl,"CODE",{});var j2=r(Es);xp=s(j2,"/"),j2.forEach(o),Up=s(wl,`.
But if you are pulling from an image, chances are `),ms=i(wl,"CODE",{});var X2=r(ms);Yp=s(X2,"WORKDIR"),X2.forEach(o),Gp=s(wl," already been set in your base image and it will be brought over."),wl.forEach(o),_n=d(e),bo=i(e,"P",{});var Q2=r(bo);ft=i(Q2,"STRONG",{});var pf=r(ft);Kp=s(pf,"tip: explicitly set "),vs=i(pf,"CODE",{});var Z2=r(vs);Wp=s(Z2,"WORKDIR"),Z2.forEach(o),Vp=s(pf," to prevent unintended operations in unknown dirs"),pf.forEach(o),Q2.forEach(o),kn=d(e),q=i(e,"P",{});var yl=r(q);Fp=s(yl,"It is also possible to resolve env variables previously set by "),hs=i(yl,"CODE",{});var J2=r(hs);Bp=s(J2,"ENV"),J2.forEach(o),zp=s(yl,", e.g. "),_s=i(yl,"CODE",{});var g2=r(_s);qp=s(g2,"WORKDIR $DIRPATH_ENV_VAR"),g2.forEach(o),$p=s(yl,"."),yl.forEach(o),Dn=d(e),Oo=i(e,"H4",{});var e4=r(Oo);jp=s(e4,"ARG"),e4.forEach(o),wn=d(e),$=i(e,"P",{});var bl=r($);Xp=s(bl,"Defines a variable that users can pass values into during "),ks=i(bl,"CODE",{});var t4=r(ks);Qp=s(t4,"docker build"),t4.forEach(o),Zp=s(bl," by using "),Ds=i(bl,"CODE",{});var o4=r(Ds);Jp=s(o4,"--build-arg <argname>=<value>"),o4.forEach(o),gp=s(bl," flag."),bl.forEach(o),yn=d(e),dt=i(e,"PRE",{class:!0});var Q5=r(dt);Q5.forEach(o),bn=d(e),Y=i(e,"P",{});var At=r(Y);ws=i(At,"CODE",{});var l4=r(ws);eu=s(l4,"ENV"),l4.forEach(o),tu=s(At," variables will overwrite "),ys=i(At,"CODE",{});var s4=r(ys);ou=s(s4,"ARG"),s4.forEach(o),lu=s(At," variables if they are the same name (at the point where the "),bs=i(At,"CODE",{});var a4=r(bs);su=s(a4,"ENV"),a4.forEach(o),au=s(At," variable is defined)."),At.forEach(o),On=d(e),Co=i(e,"H4",{});var i4=r(Co);iu=s(i4,"ONBUILD"),i4.forEach(o),Cn=d(e),Io=i(e,"P",{});var r4=r(Io);ru=s(r4,"Adds a trigger to the image that will execute dockerfile instructions when the current image is used as the base for another build."),r4.forEach(o),In=d(e),pt=i(e,"PRE",{class:!0});var Z5=r(pt);Z5.forEach(o),Pn=d(e),Po=i(e,"P",{});var n4=r(Po);nu=s(n4,"This command is usful when when you are building a base image that will be distributed to other people, and instructions that depend on other people\u2019s files needs to be run. Example, you could add:"),n4.forEach(o),Rn=d(e),ut=i(e,"PRE",{class:!0});var J5=r(ut);J5.forEach(o),Tn=d(e),j=i(e,"P",{});var Ol=r(j);cu=s(Ol,"The instructions specified are triggered "),Os=i(Ol,"EM",{});var c4=r(Os);fu=s(c4,"immediately"),c4.forEach(o),du=s(Ol," after the "),Cs=i(Ol,"CODE",{});var f4=r(Cs);pu=s(f4,"FROM"),f4.forEach(o),uu=s(Ol," instruction in the child image."),Ol.forEach(o),Ln=d(e),Et=i(e,"P",{});var _3=r(Et);Is=i(_3,"CODE",{});var d4=r(Is);Eu=s(d4,"ONBUILD"),d4.forEach(o),mu=s(_3," triggers are not inherited by children images."),_3.forEach(o),Nn=d(e),Ro=i(e,"H4",{});var p4=r(Ro);vu=s(p4,"STOPSIGNAL"),p4.forEach(o),Hn=d(e),To=i(e,"P",{});var u4=r(To);hu=s(u4,"Sets the system call signal that will cause the container to exit."),u4.forEach(o),Sn=d(e),mt=i(e,"PRE",{class:!0});var g5=r(mt);g5.forEach(o),An=d(e),X=i(e,"UL",{});var Cl=r(X);Lo=i(Cl,"LI",{});var k3=r(Lo);_u=s(k3,"Default is "),Ps=i(k3,"CODE",{});var E4=r(Ps);ku=s(E4,"SIGTERM"),E4.forEach(o),k3.forEach(o),Du=d(Cl),de=i(Cl,"LI",{});var Il=r(de);wu=s(Il,"Can be in "),Rs=i(Il,"CODE",{});var m4=r(Rs);yu=s(m4,"SIG<NAME>"),m4.forEach(o),bu=s(Il," format (e.g. "),Ts=i(Il,"CODE",{});var v4=r(Ts);Ou=s(v4,"SIGKILL"),v4.forEach(o),Cu=s(Il,")"),Il.forEach(o),Iu=d(Cl),vt=i(Cl,"LI",{});var uf=r(vt);Pu=s(uf,"Can be an unassigned number in kernel\u2019s syscall table (e.g. "),Ls=i(uf,"CODE",{});var h4=r(Ls);Ru=s(h4,"9"),h4.forEach(o),Tu=s(uf,")"),uf.forEach(o),Cl.forEach(o),Mn=d(e),No=i(e,"H4",{});var _4=r(No);Lu=s(_4,"HEALTHCHECK"),_4.forEach(o),xn=d(e),Ho=i(e,"P",{});var k4=r(Ho);Nu=s(k4,"Specifies a command to be run inside the container to check container\u2019s health."),k4.forEach(o),Un=d(e),ht=i(e,"PRE",{class:!0});var eD=r(ht);eD.forEach(o),Yn=d(e),_t=i(e,"P",{});var D3=r(_t);Ns=i(D3,"CODE",{});var D4=r(Ns);Hu=s(D4,"OPTIONS"),D4.forEach(o),Su=s(D3," include:"),D3.forEach(o),Gn=d(e),P=i(e,"UL",{});var qe=r(P);Te=i(qe,"LI",{});var zi=r(Te);Hs=i(zi,"CODE",{});var w4=r(Hs);Au=s(w4,"--interval=DURATION"),w4.forEach(o),Mu=s(zi," (default "),Ss=i(zi,"CODE",{});var y4=r(Ss);xu=s(y4,"30s"),y4.forEach(o),Uu=s(zi,")"),zi.forEach(o),Yu=d(qe),Le=i(qe,"LI",{});var qi=r(Le);As=i(qi,"CODE",{});var b4=r(As);Gu=s(b4,"--timeout=DURATION"),b4.forEach(o),Ku=s(qi," (default "),Ms=i(qi,"CODE",{});var O4=r(Ms);Wu=s(O4,"30s"),O4.forEach(o),Vu=s(qi,")"),qi.forEach(o),Fu=d(qe),Ne=i(qe,"LI",{});var $i=r(Ne);xs=i($i,"CODE",{});var C4=r(xs);Bu=s(C4,"--retries=N"),C4.forEach(o),zu=s($i," (default "),Us=i($i,"CODE",{});var I4=r(Us);qu=s(I4,"3"),I4.forEach(o),$u=s($i,")"),$i.forEach(o),ju=d(qe),He=i(qe,"LI",{});var ji=r(He);Ys=i(ji,"CODE",{});var P4=r(Ys);Xu=s(P4,"--start-period=DURATION"),P4.forEach(o),Qu=s(ji," (default "),Gs=i(ji,"CODE",{});var R4=r(Gs);Zu=s(R4,"0s"),R4.forEach(o),Ju=s(ji,")"),ji.forEach(o),qe.forEach(o),Kn=d(e),h=i(e,"P",{});var M=r(h);gu=s(M,"A container that has "),Ks=i(M,"CODE",{});var T4=r(Ks);eE=s(T4,"HEALTHCHECK"),T4.forEach(o),tE=s(M," specified will have a "),Ws=i(M,"EM",{});var L4=r(Ws);oE=s(L4,"health status"),L4.forEach(o),lE=s(M," that can take 3 possible states: "),Vs=i(M,"CODE",{});var N4=r(Vs);sE=s(N4,"starting"),N4.forEach(o),aE=s(M," | "),Fs=i(M,"CODE",{});var H4=r(Fs);iE=s(H4,"healthy"),H4.forEach(o),rE=s(M," | "),Bs=i(M,"CODE",{});var S4=r(Bs);nE=s(S4,"unhealthy"),S4.forEach(o),cE=s(M,"."),M.forEach(o),Wn=d(e),Q=i(e,"P",{});var Pl=r(Q);fE=s(Pl,"Whenever a health check passes, health status changes to "),zs=i(Pl,"CODE",{});var A4=r(zs);dE=s(A4,"healthy"),A4.forEach(o),pE=s(Pl,". After a number of consecutive failures, health status changes to "),qs=i(Pl,"CODE",{});var M4=r(qs);uE=s(M4,"unhealthy"),M4.forEach(o),EE=s(Pl,"."),Pl.forEach(o),Vn=d(e),Z=i(e,"P",{});var Rl=r(Z);mE=s(Rl,`Health checks are run after every interval.
Health checks are considered failed when commands runs for longer than timeout.
When consecutive failures reaches max retries, or command exits with non zero status code `),$s=i(Rl,"CODE",{});var x4=r($s);vE=s(x4,"0"),x4.forEach(o),hE=s(Rl,", "),js=i(Rl,"EM",{});var U4=r(js);_E=s(U4,"health status"),U4.forEach(o),kE=s(Rl," will change to unhealthy."),Rl.forEach(o),Fn=d(e),So=i(e,"H4",{});var Y4=r(So);DE=s(Y4,"SHELL"),Y4.forEach(o),Bn=d(e),J=i(e,"P",{});var Tl=r(J);wE=s(Tl,"Specifies the default shell used for shell form of commands. Default is set to "),Xs=i(Tl,"CODE",{});var G4=r(Xs);yE=s(G4,'["/bin/sh", "-c"]'),G4.forEach(o),bE=s(Tl," for Linux containers and "),Qs=i(Tl,"CODE",{});var K4=r(Qs);OE=s(K4,'["cmd", "/S", "/C"]'),K4.forEach(o),CE=s(Tl," for Windows containers."),Tl.forEach(o),zn=d(e),kt=i(e,"PRE",{class:!0});var tD=r(kt);tD.forEach(o),qn=d(e),Ao=i(e,"H4",{});var W4=r(Ao);IE=s(W4,"USER"),W4.forEach(o),$n=d(e),Mo=i(e,"P",{});var V4=r(Mo);PE=s(V4,"Sets the username/UID to use for the remainder of the Docker build stage."),V4.forEach(o),jn=d(e),Dt=i(e,"PRE",{class:!0});var oD=r(Dt);oD.forEach(o),Xn=d(e),xo=i(e,"P",{});var F4=r(xo);RE=s(F4,`This is important for security as Docker by default runs the container in root user if not specified by your image nor parent image.
Root user has UID=0.`),F4.forEach(o),Qn=d(e),Uo=i(e,"H4",{});var B4=r(Uo);TE=s(B4,"LABEL"),B4.forEach(o),Zn=d(e),Se=i(e,"P",{});var Ef=r(Se);LE=s(Ef,"Adds metadata to an image and are inherited by child images. You can view an image\u2019s labels using "),Zs=i(Ef,"CODE",{});var z4=r(Zs);NE=s(z4,"docker image inspect"),z4.forEach(o),HE=s(Ef,"."),Ef.forEach(o),Jn=d(e),wt=i(e,"PRE",{class:!0});var lD=r(wt);lD.forEach(o),gn=d(e),Yo=i(e,"H3",{});var q4=r(Yo);SE=s(q4,"Environment Replacement"),q4.forEach(o),ec=d(e),Ae=i(e,"P",{});var mf=r(Ae);AE=s(mf,"Some Dockerfile instructions are able to read environment variables created by "),Js=i(mf,"CODE",{});var $4=r(Js);ME=s($4,"ENV"),$4.forEach(o),xE=s(mf," commands, and replace them with the values that those environment variables hold."),mf.forEach(o),tc=d(e),g=i(e,"P",{});var Ll=r(g);UE=s(Ll,"The syntax is "),gs=i(Ll,"CODE",{});var j4=r(gs);YE=s(j4,"$variable_name"),j4.forEach(o),GE=s(Ll," or "),ea=i(Ll,"CODE",{});var X4=r(ea);KE=s(X4,"${variable_name}"),X4.forEach(o),WE=s(Ll," within a Dockerfile."),Ll.forEach(o),oc=d(e),Me=i(e,"UL",{});var vf=r(Me);ee=i(vf,"LI",{});var Mt=r(ee);ta=i(Mt,"CODE",{});var Q4=r(ta);VE=s(Q4,"${variable:-word}"),Q4.forEach(o),FE=s(Mt," to set "),oa=i(Mt,"CODE",{});var Z4=r(oa);BE=s(Z4,"word"),Z4.forEach(o),zE=s(Mt," as default value when "),la=i(Mt,"CODE",{});var J4=r(la);qE=s(J4,"variable"),J4.forEach(o),$E=s(Mt," is not set"),Mt.forEach(o),jE=d(vf),_=i(vf,"LI",{});var K=r(_);sa=i(K,"CODE",{});var g4=r(sa);XE=s(g4,"${variable:+word}"),g4.forEach(o),QE=s(K," to set "),aa=i(K,"CODE",{});var e_=r(aa);ZE=s(e_,"word"),e_.forEach(o),JE=s(K," as "),ia=i(K,"CODE",{});var t_=r(ia);gE=s(t_,"variable"),t_.forEach(o),em=s(K," when "),ra=i(K,"CODE",{});var o_=r(ra);tm=s(o_,"variable"),o_.forEach(o),om=s(K," has already been set, otherwise "),na=i(K,"CODE",{});var l_=r(na);lm=s(l_,"variable"),l_.forEach(o),sm=s(K," will be empty string."),K.forEach(o),vf.forEach(o),lc=d(e),u=i(e,"P",{});var E=r(u);am=s(E,"Dockerfile instructions that support environment variables are: "),ca=i(E,"CODE",{});var s_=r(ca);im=s(s_,"ADD"),s_.forEach(o),rm=s(E,", "),fa=i(E,"CODE",{});var a_=r(fa);nm=s(a_,"COPY"),a_.forEach(o),cm=s(E,", "),da=i(E,"CODE",{});var i_=r(da);fm=s(i_,"ENV"),i_.forEach(o),dm=s(E,", "),pa=i(E,"CODE",{});var r_=r(pa);pm=s(r_,"EXPOSE"),r_.forEach(o),um=s(E,", "),ua=i(E,"CODE",{});var n_=r(ua);Em=s(n_,"FROM"),n_.forEach(o),mm=s(E,", "),Ea=i(E,"CODE",{});var c_=r(Ea);vm=s(c_,"LABEL"),c_.forEach(o),hm=s(E,", "),ma=i(E,"CODE",{});var f_=r(ma);_m=s(f_,"STOPSIGNAL"),f_.forEach(o),km=s(E,", "),va=i(E,"CODE",{});var d_=r(va);Dm=s(d_,"USER"),d_.forEach(o),wm=s(E,", "),ha=i(E,"CODE",{});var p_=r(ha);ym=s(p_,"VOLUME"),p_.forEach(o),bm=s(E,", "),_a=i(E,"CODE",{});var u_=r(_a);Om=s(u_,"WORKDIR"),u_.forEach(o),Cm=s(E,", "),ka=i(E,"CODE",{});var E_=r(ka);Im=s(E_,"ONBUILD"),E_.forEach(o),Pm=s(E,"."),E.forEach(o),sc=d(e),yt=i(e,"PRE",{class:!0});var sD=r(yt);sD.forEach(o),ac=d(e),Go=i(e,"H3",{});var m_=r(Go);Da=i(m_,"CODE",{});var v_=r(Da);Rm=s(v_,".dockerignore"),v_.forEach(o),m_.forEach(o),ic=d(e),R=i(e,"P",{});var $e=r(R);Tm=s($e,"Similar to "),wa=i($e,"CODE",{});var h_=r(wa);Lm=s(h_,".gitignore"),h_.forEach(o),Nm=s($e,", this file contains a list of files and directories that docker should "),ya=i($e,"STRONG",{});var __=r(ya);Hm=s(__,"exclude"),__.forEach(o),Sm=s($e," from the "),ba=i($e,"EM",{});var k_=r(ba);Am=s(k_,"context"),k_.forEach(o),Mm=s($e," of a docker build."),$e.forEach(o),rc=d(e),Ko=i(e,"P",{});var D_=r(Ko);xm=s(D_,"This is useful for preventing sending of large or sensitive files to docker daemon."),D_.forEach(o),nc=d(e),cc=i(e,"HR",{}),fc=d(e),Wo=i(e,"H2",{});var w_=r(Wo);Um=s(w_,"useful docker CLI commands"),w_.forEach(o),dc=d(e),Vo=i(e,"H3",{});var y_=r(Vo);Ym=s(y_,"docker run"),y_.forEach(o),pc=d(e),Fo=i(e,"P",{});var b_=r(Fo);Gm=s(b_,"Runs your images as isolated containers."),b_.forEach(o),uc=d(e),bt=i(e,"PRE",{class:!0});var aD=r(bt);aD.forEach(o),Ec=d(e),te=i(e,"DETAILS",{});var Nl=r(te);Oa=i(Nl,"SUMMARY",{});var O_=r(Oa);Km=s(O_,"details"),O_.forEach(o),Wm=d(Nl),Ca=i(Nl,"P",{});var C_=r(Ca);k=i(C_,"EM",{});var W=r(k);Ia=i(W,"CODE",{});var I_=r(Ia);Vm=s(I_,"docker run"),I_.forEach(o),Fm=s(W,"\u2019s "),Pa=i(W,"CODE",{});var P_=r(Pa);Bm=s(P_,"[OPTIONS]"),P_.forEach(o),zm=s(W," are specified "),Ra=i(W,"STRONG",{});var R_=r(Ra);qm=s(R_,"before"),R_.forEach(o),$m=s(W," the image name, whilst arguments ("),Ta=i(W,"CODE",{});var T_=r(Ta);jm=s(T_,"[ARG...]"),T_.forEach(o),Xm=s(W,") for the command to be executed within the container is "),La=i(W,"STRONG",{});var L_=r(La);Qm=s(L_,"AFTER"),L_.forEach(o),Zm=s(W," the image name and command."),W.forEach(o),C_.forEach(o),Jm=d(Nl),Bo=i(Nl,"P",{});var w3=r(Bo);gm=s(w3,"for example: "),Na=i(w3,"CODE",{});var N_=r(Na);ev=s(N_,"docker run -ti ubuntu-image touch /path/to/file"),N_.forEach(o),w3.forEach(o),Nl.forEach(o),mc=d(e),Ot=i(e,"P",{});var y3=r(Ot);Ha=i(y3,"CODE",{});var H_=r(Ha);tv=s(H_,"docker run"),H_.forEach(o),ov=s(y3," is able to set many runtime options and override default settings defined by images, these include:"),y3.forEach(o),vc=d(e),D=i(e,"UL",{});var ie=r(D);Sa=i(ie,"LI",{});var S_=r(Sa);lv=s(S_,"running container in foreground or detached mode"),S_.forEach(o),sv=d(ie),Aa=i(ie,"LI",{});var A_=r(Aa);av=s(A_,"name of container"),A_.forEach(o),iv=d(ie),Ma=i(ie,"LI",{});var M_=r(Ma);rv=s(M_,"network settings"),M_.forEach(o),nv=d(ie),xa=i(ie,"LI",{});var x_=r(xa);cv=s(x_,"volume settings"),x_.forEach(o),fv=d(ie),Ua=i(ie,"LI",{});var U_=r(Ua);dv=s(U_,"cpu / memory limits"),U_.forEach(o),ie.forEach(o),hc=d(e),zo=i(e,"P",{});var Y_=r(zo);pv=s(Y_,"Common options to specify:"),Y_.forEach(o),_c=d(e),m=i(e,"UL",{});var O=r(m);qo=i(O,"LI",{});var b3=r(qo);Ya=i(b3,"CODE",{});var G_=r(Ya);uv=s(G_,"--name"),G_.forEach(o),Ev=s(b3," : assign a name to container (defaults to randomly generated words)"),b3.forEach(o),mv=d(O),G=i(O,"LI",{});var je=r(G);Ga=i(je,"CODE",{});var K_=r(Ga);vv=s(K_,"--detach"),K_.forEach(o),hv=s(je," / "),Ka=i(je,"CODE",{});var W_=r(Ka);_v=s(W_,"-d"),W_.forEach(o),kv=s(je," : run in detached mode so the terminal of the machine does not continouously stream container\u2019s "),Wa=i(je,"CODE",{});var V_=r(Wa);Dv=s(V_,"STDOUT"),V_.forEach(o),wv=s(je," / "),Va=i(je,"CODE",{});var F_=r(Va);yv=s(F_,"STDERR"),F_.forEach(o),je.forEach(o),bv=d(O),T=i(O,"LI",{});var ue=r(T);Fa=i(ue,"CODE",{});var B_=r(Fa);Ov=s(B_,"--interactive"),B_.forEach(o),Cv=s(ue," / "),Ba=i(ue,"CODE",{});var z_=r(Ba);Iv=s(z_,"-i"),z_.forEach(o),Pv=s(ue," : keep "),za=i(ue,"CODE",{});var q_=r(za);Rv=s(q_,"STDIN"),q_.forEach(o),Tv=s(ue," open even if not attached (usually used with "),qa=i(ue,"CODE",{});var $_=r(qa);Lv=s($_,"-t"),$_.forEach(o),Nv=s(ue,")"),ue.forEach(o),Hv=d(O),L=i(O,"LI",{});var Ee=r(L);$a=i(Ee,"CODE",{});var j_=r($a);Sv=s(j_,"--tty"),j_.forEach(o),Av=s(Ee," / "),ja=i(Ee,"CODE",{});var X_=r(ja);Mv=s(X_,"-t"),X_.forEach(o),xv=s(Ee," : allocate pseudo-TTY to connect to container\u2019s "),Xa=i(Ee,"CODE",{});var Q_=r(Xa);Uv=s(Q_,"STDIN"),Q_.forEach(o),Yv=s(Ee," (usually used with "),Qa=i(Ee,"CODE",{});var Z_=r(Qa);Gv=s(Z_,"-i"),Z_.forEach(o),Kv=s(Ee,")"),Ee.forEach(o),Wv=d(O),xe=i(O,"LI",{});var Xi=r(xe);Za=i(Xi,"CODE",{});var J_=r(Za);Vv=s(J_,"--expose"),J_.forEach(o),Fv=s(Xi," / "),Ja=i(Xi,"CODE",{});var g_=r(Ja);Bv=s(g_,"-p"),g_.forEach(o),zv=s(Xi," : expose container\u2019s ports to other containers and/or the host machine."),Xi.forEach(o),qv=d(O),$o=i(O,"LI",{});var O3=r($o);ga=i(O3,"CODE",{});var ek=r(ga);$v=s(ek,"--mount"),ek.forEach(o),jv=s(O3," : mount volumes or directories to container"),O3.forEach(o),Xv=d(O),N=i(O,"LI",{});var me=r(N);ei=i(me,"CODE",{});var tk=r(ei);Qv=s(tk,"--volume"),tk.forEach(o),Zv=s(me," / "),ti=i(me,"CODE",{});var ok=r(ti);Jv=s(ok,"-v"),ok.forEach(o),gv=s(me," : mount volumes or directories to container (use of "),oi=i(me,"CODE",{});var lk=r(oi);e1=s(lk,"--mount"),lk.forEach(o),t1=s(me," is recommended, "),Ct=i(me,"A",{href:!0,rel:!0});var sk=r(Ct);o1=s(sk,"see differences here"),sk.forEach(o),l1=s(me,")"),me.forEach(o),O.forEach(o),kc=d(e),Ue=i(e,"DETAILS",{});var hf=r(Ue);li=i(hf,"SUMMARY",{});var ak=r(li);s1=s(ak,"note on docker run documentation"),ak.forEach(o),a1=d(hf),pe=i(hf,"P",{});var Hl=r(pe);i1=s(Hl,"there are two pages for docker run, a "),It=i(Hl,"A",{href:!0,rel:!0});var ik=r(It);r1=s(ik,"generic one"),ik.forEach(o),n1=s(Hl," that lists all commands and "),Pt=i(Hl,"A",{href:!0,rel:!0});var rk=r(Pt);c1=s(rk,"another one"),rk.forEach(o),f1=s(Hl," that provides more explanation"),Hl.forEach(o),hf.forEach(o),Dc=d(e),jo=i(e,"H3",{});var nk=r(jo);d1=s(nk,"docker build"),nk.forEach(o),wc=d(e),Xo=i(e,"H3",{});var ck=r(Xo);p1=s(ck,"docker image"),ck.forEach(o),yc=d(e),Qo=i(e,"H3",{});var fk=r(Qo);u1=s(fk,"docker container"),fk.forEach(o),bc=d(e),Zo=i(e,"H3",{});var dk=r(Zo);E1=s(dk,"docker network"),dk.forEach(o),Oc=d(e),Jo=i(e,"H3",{});var pk=r(Jo);m1=s(pk,"docker volume"),pk.forEach(o),Cc=d(e),go=i(e,"H3",{});var uk=r(go);v1=s(uk,"docker logs"),uk.forEach(o),Ic=d(e),oe=i(e,"P",{});var Sl=r(oe);h1=s(Sl,"Retrieves container\u2019s logs (to "),si=i(Sl,"CODE",{});var Ek=r(si);_1=s(Ek,"STDOUT"),Ek.forEach(o),k1=s(Sl," and "),ai=i(Sl,"CODE",{});var mk=r(ai);D1=s(mk,"STDERR"),mk.forEach(o),w1=s(Sl,") to your CLI."),Sl.forEach(o),Pc=d(e),Rt=i(e,"PRE",{class:!0});var iD=r(Rt);iD.forEach(o),Rc=d(e),el=i(e,"P",{});var vk=r(el);y1=s(vk,"Common options to specify:"),vk.forEach(o),Tc=d(e),w=i(e,"UL",{});var re=r(w);Ye=i(re,"LI",{});var Qi=r(Ye);ii=i(Qi,"CODE",{});var hk=r(ii);b1=s(hk,"--follow"),hk.forEach(o),O1=s(Qi," / "),ri=i(Qi,"CODE",{});var _k=r(ri);C1=s(_k,"-f"),_k.forEach(o),I1=s(Qi," : continuously streams the log output"),Qi.forEach(o),P1=d(re),Ge=i(re,"LI",{});var Zi=r(Ge);ni=i(Zi,"CODE",{});var kk=r(ni);R1=s(kk,"--timestamps"),kk.forEach(o),T1=s(Zi," / "),ci=i(Zi,"CODE",{});var Dk=r(ci);L1=s(Dk,"-t"),Dk.forEach(o),N1=s(Zi," : show timestamps of logs"),Zi.forEach(o),H1=d(re),le=i(re,"LI",{});var xt=r(le);fi=i(xt,"CODE",{});var wk=r(fi);S1=s(wk,"--tail"),wk.forEach(o),A1=s(xt," / "),di=i(xt,"CODE",{});var yk=r(di);M1=s(yk,"-n"),yk.forEach(o),x1=s(xt," : number of lines to show from end of the log (defaults to "),pi=i(xt,"CODE",{});var bk=r(pi);U1=s(bk,"all"),bk.forEach(o),Y1=s(xt,")"),xt.forEach(o),G1=d(re),H=i(re,"LI",{});var ve=r(H);ui=i(ve,"CODE",{});var Ok=r(ui);K1=s(Ok,"--since"),Ok.forEach(o),W1=s(ve," : show logs "),Ei=i(ve,"EM",{});var Ck=r(Ei);V1=s(Ck,"since"),Ck.forEach(o),F1=s(ve," timestamp ("),mi=i(ve,"CODE",{});var Ik=r(mi);B1=s(Ik,"2013-01-02T13:37:00Z"),Ik.forEach(o),z1=s(ve,") or relative ("),vi=i(ve,"CODE",{});var Pk=r(vi);q1=s(Pk,"42m"),Pk.forEach(o),$1=s(ve,")"),ve.forEach(o),j1=d(re),Ke=i(re,"LI",{});var Ji=r(Ke);hi=i(Ji,"CODE",{});var Rk=r(hi);X1=s(Rk,"--until"),Rk.forEach(o),Q1=s(Ji," : show logs "),_i=i(Ji,"EM",{});var Tk=r(_i);Z1=s(Tk,"before"),Tk.forEach(o),J1=s(Ji," timestamp or relative"),Ji.forEach(o),re.forEach(o),Lc=d(e),tl=i(e,"H3",{});var Lk=r(tl);g1=s(Lk,"docker inspect"),Lk.forEach(o),Nc=d(e),ol=i(e,"P",{});var Nk=r(ol);eh=s(Nk,`Returns detailed information about docker objects.
Objects can be images, containers, networks, volumes, etc.`),Nk.forEach(o),Hc=d(e),Tt=i(e,"PRE",{class:!0});var rD=r(Tt);rD.forEach(o),Sc=d(e),ll=i(e,"H3",{});var Hk=r(ll);th=s(Hk,"docker ps"),Hk.forEach(o),Ac=d(e),sl=i(e,"P",{});var Sk=r(sl);oh=s(Sk,`List all containers and information about them (such as ID, image name, ports etc.)
Defaults to listing running containers only.`),Sk.forEach(o),Mc=d(e),Lt=i(e,"PRE",{class:!0});var nD=r(Lt);nD.forEach(o),xc=d(e),al=i(e,"P",{});var Ak=r(al);lh=s(Ak,"Useful options:"),Ak.forEach(o),Uc=d(e),y=i(e,"UL",{});var ne=r(y);We=i(ne,"LI",{});var gi=r(We);ki=i(gi,"CODE",{});var Mk=r(ki);sh=s(Mk,"--all"),Mk.forEach(o),ah=s(gi," / "),Di=i(gi,"CODE",{});var xk=r(Di);ih=s(xk,"-a"),xk.forEach(o),rh=s(gi," : lists all containers, including those that are not running"),gi.forEach(o),nh=d(ne),se=i(ne,"LI",{});var Ut=r(se);wi=i(Ut,"CODE",{});var Uk=r(wi);ch=s(Uk,"--size"),Uk.forEach(o),fh=s(Ut," / "),yi=i(Ut,"CODE",{});var Yk=r(yi);dh=s(Yk,"-s"),Yk.forEach(o),ph=s(Ut," : include size of the container in output. Shows both size of container (i.e. writable layer), and "),bi=i(Ut,"CODE",{});var Gk=r(bi);uh=s(Gk,"virtual"),Gk.forEach(o),Eh=s(Ut," size of total disk-space used, i.e. container + image."),Ut.forEach(o),mh=d(ne),il=i(ne,"LI",{});var C3=r(il);Oi=i(C3,"CODE",{});var Kk=r(Oi);vh=s(Kk,"--no-trunc"),Kk.forEach(o),hh=s(C3," : prevent truncation in table output"),C3.forEach(o),_h=d(ne),ae=i(ne,"LI",{});var Yt=r(ae);Ci=i(Yt,"CODE",{});var Wk=r(Ci);kh=s(Wk,"--filter"),Wk.forEach(o),Dh=s(Yt," / "),Ii=i(Yt,"CODE",{});var Vk=r(Ii);wh=s(Vk,"-f"),Vk.forEach(o),yh=s(Yt," : filters the output with key-value pairs. E.g. "),Pi=i(Yt,"CODE",{});var Fk=r(Pi);bh=s(Fk,'docker ps -f "name=mysparkcontainer"'),Fk.forEach(o),Oh=s(Yt,"."),Yt.forEach(o),Ch=d(ne),C=i(ne,"LI",{});var ce=r(C);Ri=i(ce,"CODE",{});var Bk=r(Ri);Ih=s(Bk,"--format"),Bk.forEach(o),Ph=s(ce," : formats the output using Go template. Placeholder information include "),Ti=i(ce,"CODE",{});var zk=r(Ti);Rh=s(zk,".ID"),zk.forEach(o),Th=s(ce,", "),Li=i(ce,"CODE",{});var qk=r(Li);Lh=s(qk,".Image"),qk.forEach(o),Nh=s(ce,", "),Ni=i(ce,"CODE",{});var $k=r(Ni);Hh=s($k,".Names"),$k.forEach(o),Sh=s(ce," etc."),Nt=i(ce,"UL",{});var _f=r(Nt);Ve=i(_f,"LI",{});var er=r(Ve);Hi=i(er,"CODE",{});var jk=r(Hi);Ah=s(jk,'docker ps --format "{{.ID}}: {{.Name}}"'),jk.forEach(o),Mh=s(er," will print out "),Si=i(er,"CODE",{});var Xk=r(Si);xh=s(Xk,"abcdef: name1"),Xk.forEach(o),Uh=s(er," etc."),er.forEach(o),Yh=d(_f),rl=i(_f,"LI",{});var I3=r(rl);Ai=i(I3,"CODE",{});var Qk=r(Ai);Gh=s(Qk,'docker ps --format "table {{.ID}}\\t{{.Name}}"'),Qk.forEach(o),Kh=s(I3," will print the output in a table with header row."),I3.forEach(o),_f.forEach(o),ce.forEach(o),ne.forEach(o),Yc=d(e),nl=i(e,"H3",{});var Zk=r(nl);Wh=s(Zk,"docker stats"),Zk.forEach(o),Gc=d(e),cl=i(e,"P",{});var Jk=r(cl);Vh=s(Jk,`Display live info about containers\u2019 resource usage (kind of like Window\u2019s task manager).
Defaults to only showing running containers.`),Jk.forEach(o),Kc=d(e),Ht=i(e,"PRE",{class:!0});var cD=r(Ht);cD.forEach(o),Wc=d(e),fl=i(e,"P",{});var gk=r(fl);Fh=s(gk,"Useful options:"),gk.forEach(o),Vc=d(e),S=i(e,"UL",{});var Xe=r(S);Fe=i(Xe,"LI",{});var tr=r(Fe);Mi=i(tr,"CODE",{});var e5=r(Mi);Bh=s(e5,"--all"),e5.forEach(o),zh=s(tr," / "),xi=i(tr,"CODE",{});var t5=r(xi);qh=s(t5,"-a"),t5.forEach(o),$h=s(tr," : lists all containers, including those that are not running"),tr.forEach(o),jh=d(Xe),dl=i(Xe,"LI",{});var P3=r(dl);Ui=i(P3,"CODE",{});var o5=r(Ui);Xh=s(o5,"--no-trunc"),o5.forEach(o),Qh=s(P3," : Prevent truncation in table output"),P3.forEach(o),Zh=d(Xe),pl=i(Xe,"LI",{});var R3=r(pl);Yi=i(R3,"CODE",{});var l5=r(Yi);Jh=s(l5,"--no-stream"),l5.forEach(o),gh=s(R3," : get only a \u2018snapshot\u2019 of the current stats"),R3.forEach(o),e3=d(Xe),ul=i(Xe,"LI",{});var T3=r(ul);Gi=i(T3,"CODE",{});var s5=r(Gi);t3=s(s5,"--format"),s5.forEach(o),o3=s(T3," : formats the output using Go template."),T3.forEach(o),Xe.forEach(o),Fc=d(e),Bc=i(e,"HR",{}),zc=d(e),El=i(e,"H2",{});var a5=r(El);l3=s(a5,"networking"),a5.forEach(o),qc=d(e),$c=i(e,"HR",{}),jc=d(e),ml=i(e,"H2",{});var i5=r(ml);s3=s(i5,"storage"),i5.forEach(o),Xc=d(e),vl=i(e,"P",{});var r5=r(vl);a3=s(r5,"By default, Docker containers store data in the container\u2019s writable layer, using a storage driver, and is not persisted."),r5.forEach(o),Qc=d(e),hl=i(e,"P",{});var n5=r(hl);i3=s(n5,"5 types of storage in Docker to put container\u2019s data"),n5.forEach(o),Zc=d(e),b=i(e,"UL",{});var fe=r(b);Ki=i(fe,"LI",{});var c5=r(Ki);r3=s(c5,"default container\u2019s writable layer : does not persist. optimized for space efficiency, so write speeds are lower than native."),c5.forEach(o),n3=d(fe),Wi=i(fe,"LI",{});var f5=r(Wi);c3=s(f5,"volumes : isolated, Docker managed, can store in remote drives, can share volumes with multiple containers"),f5.forEach(o),f3=d(fe),Vi=i(fe,"LI",{});var d5=r(Vi);d3=s(d5,"bind mount : directly mount a specific directory on host machine to the container"),d5.forEach(o),p3=d(fe),Fi=i(fe,"LI",{});var p5=r(Fi);u3=s(p5,"tmpfs mount (linux only) : store container data in memory, not persistent, but faster performance since its using RAM"),p5.forEach(o),E3=d(fe),Bi=i(fe,"LI",{});var u5=r(Bi);m3=s(u5,"npipe mount (named pipes) (Windows only) : used to store data in memory for Windows"),u5.forEach(o),fe.forEach(o),this.h()},h(){p(Je,"class","language-dockerfile"),p(ge,"class","language-dockerfile"),p(et,"class","language-dockerfile"),p(tt,"class","language-dockerfile"),p(ot,"class","language-dockerfile"),p(lt,"class","language-dockerfile"),p(it,"class","language-dockerfile"),p(rt,"class","language-dockerfile"),p(nt,"class","language-dockerfile"),p(ct,"class","language-dockerfile"),p(dt,"class","language-dockerfile"),p(pt,"class","language-dockerfile"),p(ut,"class","language-dockerfile"),p(mt,"class","language-dockerfile"),p(ht,"class","language-dockerfile"),p(kt,"class","language-dockerfile"),p(Dt,"class","language-dockerfile"),p(wt,"class","language-dockerfile"),p(yt,"class","language-dockerfile"),p(bt,"class","language-undefined"),p(Ct,"href","https://docs.docker.com/engine/reference/commandline/service_create/#differences-between---mount-and---volume"),p(Ct,"rel","nofollow"),p(It,"href","https://docs.docker.com/engine/reference/commandline/run/"),p(It,"rel","nofollow"),p(Pt,"href","https://docs.docker.com/engine/reference/run/"),p(Pt,"rel","nofollow"),p(Rt,"class","language-undefined"),p(Tt,"class","language-undefined"),p(Lt,"class","language-undefined"),p(Ht,"class","language-undefined")},m(e,n){c(e,he,n),t(he,kf),c(e,or,n),c(e,Gt,n),t(Gt,Df),c(e,lr,n),c(e,Kt,n),t(Kt,wf),c(e,sr,n),c(e,Wt,n),t(Wt,yf),c(e,ar,n),c(e,Vt,n),t(Vt,bf),c(e,ir,n),c(e,Ft,n),t(Ft,Of),c(e,rr,n),c(e,Bt,n),t(Bt,Cf),c(e,nr,n),c(e,_e,n),t(_e,x),t(x,If),t(x,Al),t(Al,Pf),t(x,Rf),t(x,Ml),t(Ml,Tf),t(x,Lf),t(x,xl),t(xl,Nf),t(x,Hf),t(_e,Sf),t(_e,Qe),t(Qe,Af),t(Qe,Ul),t(Ul,Mf),t(Qe,xf),c(e,cr,n),c(e,zt,n),t(zt,Uf),c(e,fr,n),c(e,qt,n),t(qt,Yf),c(e,dr,n),c(e,Ze,n),t(Ze,Yl),t(Yl,Gf),t(Ze,Kf),c(e,pr,n),c(e,$t,n),t($t,Wf),c(e,ur,n),c(e,ke,n),t(ke,Vf),t(ke,Gl),t(Gl,Ff),t(ke,Bf),c(e,Er,n),c(e,jt,n),t(jt,zf),c(e,mr,n),c(e,Xt,n),t(Xt,qf),c(e,vr,n),c(e,Qt,n),t(Qt,$f),c(e,hr,n),c(e,De,n),t(De,jf),t(De,Kl),t(Kl,Xf),t(De,Qf),c(e,_r,n),c(e,Zt,n),t(Zt,Zf),c(e,kr,n),c(e,I,n),t(I,Jf),t(I,Wl),t(Wl,gf),t(I,ed),t(I,Vl),t(Vl,td),t(I,od),t(I,Fl),t(Fl,ld),t(I,sd),c(e,Dr,n),c(e,Jt,n),t(Jt,ad),c(e,wr,n),c(e,we,n),t(we,id),t(we,Bl),t(Bl,rd),t(we,nd),c(e,yr,n),c(e,gt,n),t(gt,cd),c(e,br,n),c(e,eo,n),t(eo,fd),c(e,Or,n),c(e,ye,n),t(ye,dd),t(ye,zl),t(zl,pd),t(ye,ud),c(e,Cr,n),c(e,to,n),t(to,Ed),c(e,Ir,n),c(e,Pr,n),c(e,Rr,n),c(e,oo,n),t(oo,md),c(e,Tr,n),c(e,lo,n),t(lo,vd),c(e,Lr,n),c(e,so,n),t(so,hd),c(e,Nr,n),c(e,be,n),t(be,_d),t(be,ql),t(ql,kd),t(be,Dd),c(e,Hr,n),c(e,Je,n),Je.innerHTML=v5,c(e,Sr,n),c(e,ao,n),t(ao,wd),c(e,Ar,n),c(e,io,n),t(io,yd),c(e,Mr,n),c(e,ge,n),ge.innerHTML=h5,c(e,xr,n),c(e,ro,n),t(ro,bd),c(e,Ur,n),c(e,no,n),t(no,Od),c(e,Yr,n),c(e,et,n),et.innerHTML=_5,c(e,Gr,n),c(e,co,n),t(co,Cd),c(e,Kr,n),c(e,fo,n),t(fo,Id),c(e,Wr,n),c(e,tt,n),tt.innerHTML=k5,c(e,Vr,n),c(e,po,n),t(po,Pd),c(e,Fr,n),c(e,uo,n),t(uo,Rd),c(e,Br,n),c(e,ot,n),ot.innerHTML=D5,c(e,zr,n),c(e,V,n),t(V,Td),t(V,$l),t($l,Ld),t(V,Nd),t(V,jl),t(jl,Hd),t(V,Sd),c(e,qr,n),c(e,Oe,n),t(Oe,Ad),t(Oe,Xl),t(Xl,Md),t(Oe,xd),c(e,$r,n),c(e,Eo,n),t(Eo,Ud),c(e,jr,n),c(e,mo,n),t(mo,Yd),c(e,Xr,n),c(e,lt,n),lt.innerHTML=w5,c(e,Qr,n),c(e,Ce,n),t(Ce,Gd),t(Ce,Ql),t(Ql,Kd),t(Ce,Wd),c(e,Zr,n),c(e,F,n),t(F,Zl),t(Zl,Vd),t(F,Fd),t(F,st),t(st,Bd),t(st,Jl),t(Jl,zd),t(st,qd),t(F,$d),t(F,gl),t(gl,jd),c(e,Jr,n),c(e,at,n),t(at,es),t(es,Xd),t(at,Qd),c(e,gr,n),c(e,B,n),t(B,Zd),t(B,ts),t(ts,Jd),t(B,gd),t(B,os),t(os,ep),t(B,tp),c(e,en,n),c(e,Ie,n),t(Ie,op),t(Ie,ls),t(ls,lp),t(Ie,sp),c(e,tn,n),c(e,vo,n),t(vo,ap),c(e,on,n),c(e,ho,n),t(ho,ip),c(e,ln,n),c(e,it,n),it.innerHTML=y5,c(e,sn,n),c(e,_o,n),t(_o,rp),c(e,an,n),c(e,ko,n),t(ko,np),c(e,rn,n),c(e,rt,n),rt.innerHTML=b5,c(e,nn,n),c(e,U,n),t(U,ss),t(ss,cp),t(U,fp),t(U,as),t(as,dp),t(U,pp),t(U,is),t(is,up),t(U,Ep),c(e,cn,n),c(e,Do,n),t(Do,mp),c(e,fn,n),c(e,wo,n),t(wo,vp),c(e,dn,n),c(e,nt,n),nt.innerHTML=O5,c(e,pn,n),c(e,Pe,n),t(Pe,hp),t(Pe,rs),t(rs,_p),t(Pe,kp),c(e,un,n),c(e,yo,n),t(yo,Dp),c(e,En,n),c(e,v,n),t(v,wp),t(v,ns),t(ns,yp),t(v,bp),t(v,cs),t(cs,Op),t(v,Cp),t(v,fs),t(fs,Ip),t(v,Pp),t(v,ds),t(ds,Rp),t(v,Tp),t(v,ps),t(ps,Lp),t(v,Np),c(e,mn,n),c(e,ct,n),ct.innerHTML=C5,c(e,vn,n),c(e,Re,n),t(Re,Hp),t(Re,us),t(us,Sp),t(Re,Ap),c(e,hn,n),c(e,z,n),t(z,Mp),t(z,Es),t(Es,xp),t(z,Up),t(z,ms),t(ms,Yp),t(z,Gp),c(e,_n,n),c(e,bo,n),t(bo,ft),t(ft,Kp),t(ft,vs),t(vs,Wp),t(ft,Vp),c(e,kn,n),c(e,q,n),t(q,Fp),t(q,hs),t(hs,Bp),t(q,zp),t(q,_s),t(_s,qp),t(q,$p),c(e,Dn,n),c(e,Oo,n),t(Oo,jp),c(e,wn,n),c(e,$,n),t($,Xp),t($,ks),t(ks,Qp),t($,Zp),t($,Ds),t(Ds,Jp),t($,gp),c(e,yn,n),c(e,dt,n),dt.innerHTML=I5,c(e,bn,n),c(e,Y,n),t(Y,ws),t(ws,eu),t(Y,tu),t(Y,ys),t(ys,ou),t(Y,lu),t(Y,bs),t(bs,su),t(Y,au),c(e,On,n),c(e,Co,n),t(Co,iu),c(e,Cn,n),c(e,Io,n),t(Io,ru),c(e,In,n),c(e,pt,n),pt.innerHTML=P5,c(e,Pn,n),c(e,Po,n),t(Po,nu),c(e,Rn,n),c(e,ut,n),ut.innerHTML=R5,c(e,Tn,n),c(e,j,n),t(j,cu),t(j,Os),t(Os,fu),t(j,du),t(j,Cs),t(Cs,pu),t(j,uu),c(e,Ln,n),c(e,Et,n),t(Et,Is),t(Is,Eu),t(Et,mu),c(e,Nn,n),c(e,Ro,n),t(Ro,vu),c(e,Hn,n),c(e,To,n),t(To,hu),c(e,Sn,n),c(e,mt,n),mt.innerHTML=T5,c(e,An,n),c(e,X,n),t(X,Lo),t(Lo,_u),t(Lo,Ps),t(Ps,ku),t(X,Du),t(X,de),t(de,wu),t(de,Rs),t(Rs,yu),t(de,bu),t(de,Ts),t(Ts,Ou),t(de,Cu),t(X,Iu),t(X,vt),t(vt,Pu),t(vt,Ls),t(Ls,Ru),t(vt,Tu),c(e,Mn,n),c(e,No,n),t(No,Lu),c(e,xn,n),c(e,Ho,n),t(Ho,Nu),c(e,Un,n),c(e,ht,n),ht.innerHTML=L5,c(e,Yn,n),c(e,_t,n),t(_t,Ns),t(Ns,Hu),t(_t,Su),c(e,Gn,n),c(e,P,n),t(P,Te),t(Te,Hs),t(Hs,Au),t(Te,Mu),t(Te,Ss),t(Ss,xu),t(Te,Uu),t(P,Yu),t(P,Le),t(Le,As),t(As,Gu),t(Le,Ku),t(Le,Ms),t(Ms,Wu),t(Le,Vu),t(P,Fu),t(P,Ne),t(Ne,xs),t(xs,Bu),t(Ne,zu),t(Ne,Us),t(Us,qu),t(Ne,$u),t(P,ju),t(P,He),t(He,Ys),t(Ys,Xu),t(He,Qu),t(He,Gs),t(Gs,Zu),t(He,Ju),c(e,Kn,n),c(e,h,n),t(h,gu),t(h,Ks),t(Ks,eE),t(h,tE),t(h,Ws),t(Ws,oE),t(h,lE),t(h,Vs),t(Vs,sE),t(h,aE),t(h,Fs),t(Fs,iE),t(h,rE),t(h,Bs),t(Bs,nE),t(h,cE),c(e,Wn,n),c(e,Q,n),t(Q,fE),t(Q,zs),t(zs,dE),t(Q,pE),t(Q,qs),t(qs,uE),t(Q,EE),c(e,Vn,n),c(e,Z,n),t(Z,mE),t(Z,$s),t($s,vE),t(Z,hE),t(Z,js),t(js,_E),t(Z,kE),c(e,Fn,n),c(e,So,n),t(So,DE),c(e,Bn,n),c(e,J,n),t(J,wE),t(J,Xs),t(Xs,yE),t(J,bE),t(J,Qs),t(Qs,OE),t(J,CE),c(e,zn,n),c(e,kt,n),kt.innerHTML=N5,c(e,qn,n),c(e,Ao,n),t(Ao,IE),c(e,$n,n),c(e,Mo,n),t(Mo,PE),c(e,jn,n),c(e,Dt,n),Dt.innerHTML=H5,c(e,Xn,n),c(e,xo,n),t(xo,RE),c(e,Qn,n),c(e,Uo,n),t(Uo,TE),c(e,Zn,n),c(e,Se,n),t(Se,LE),t(Se,Zs),t(Zs,NE),t(Se,HE),c(e,Jn,n),c(e,wt,n),wt.innerHTML=S5,c(e,gn,n),c(e,Yo,n),t(Yo,SE),c(e,ec,n),c(e,Ae,n),t(Ae,AE),t(Ae,Js),t(Js,ME),t(Ae,xE),c(e,tc,n),c(e,g,n),t(g,UE),t(g,gs),t(gs,YE),t(g,GE),t(g,ea),t(ea,KE),t(g,WE),c(e,oc,n),c(e,Me,n),t(Me,ee),t(ee,ta),t(ta,VE),t(ee,FE),t(ee,oa),t(oa,BE),t(ee,zE),t(ee,la),t(la,qE),t(ee,$E),t(Me,jE),t(Me,_),t(_,sa),t(sa,XE),t(_,QE),t(_,aa),t(aa,ZE),t(_,JE),t(_,ia),t(ia,gE),t(_,em),t(_,ra),t(ra,tm),t(_,om),t(_,na),t(na,lm),t(_,sm),c(e,lc,n),c(e,u,n),t(u,am),t(u,ca),t(ca,im),t(u,rm),t(u,fa),t(fa,nm),t(u,cm),t(u,da),t(da,fm),t(u,dm),t(u,pa),t(pa,pm),t(u,um),t(u,ua),t(ua,Em),t(u,mm),t(u,Ea),t(Ea,vm),t(u,hm),t(u,ma),t(ma,_m),t(u,km),t(u,va),t(va,Dm),t(u,wm),t(u,ha),t(ha,ym),t(u,bm),t(u,_a),t(_a,Om),t(u,Cm),t(u,ka),t(ka,Im),t(u,Pm),c(e,sc,n),c(e,yt,n),yt.innerHTML=A5,c(e,ac,n),c(e,Go,n),t(Go,Da),t(Da,Rm),c(e,ic,n),c(e,R,n),t(R,Tm),t(R,wa),t(wa,Lm),t(R,Nm),t(R,ya),t(ya,Hm),t(R,Sm),t(R,ba),t(ba,Am),t(R,Mm),c(e,rc,n),c(e,Ko,n),t(Ko,xm),c(e,nc,n),c(e,cc,n),c(e,fc,n),c(e,Wo,n),t(Wo,Um),c(e,dc,n),c(e,Vo,n),t(Vo,Ym),c(e,pc,n),c(e,Fo,n),t(Fo,Gm),c(e,uc,n),c(e,bt,n),bt.innerHTML=M5,c(e,Ec,n),c(e,te,n),t(te,Oa),t(Oa,Km),t(te,Wm),t(te,Ca),t(Ca,k),t(k,Ia),t(Ia,Vm),t(k,Fm),t(k,Pa),t(Pa,Bm),t(k,zm),t(k,Ra),t(Ra,qm),t(k,$m),t(k,Ta),t(Ta,jm),t(k,Xm),t(k,La),t(La,Qm),t(k,Zm),t(te,Jm),t(te,Bo),t(Bo,gm),t(Bo,Na),t(Na,ev),c(e,mc,n),c(e,Ot,n),t(Ot,Ha),t(Ha,tv),t(Ot,ov),c(e,vc,n),c(e,D,n),t(D,Sa),t(Sa,lv),t(D,sv),t(D,Aa),t(Aa,av),t(D,iv),t(D,Ma),t(Ma,rv),t(D,nv),t(D,xa),t(xa,cv),t(D,fv),t(D,Ua),t(Ua,dv),c(e,hc,n),c(e,zo,n),t(zo,pv),c(e,_c,n),c(e,m,n),t(m,qo),t(qo,Ya),t(Ya,uv),t(qo,Ev),t(m,mv),t(m,G),t(G,Ga),t(Ga,vv),t(G,hv),t(G,Ka),t(Ka,_v),t(G,kv),t(G,Wa),t(Wa,Dv),t(G,wv),t(G,Va),t(Va,yv),t(m,bv),t(m,T),t(T,Fa),t(Fa,Ov),t(T,Cv),t(T,Ba),t(Ba,Iv),t(T,Pv),t(T,za),t(za,Rv),t(T,Tv),t(T,qa),t(qa,Lv),t(T,Nv),t(m,Hv),t(m,L),t(L,$a),t($a,Sv),t(L,Av),t(L,ja),t(ja,Mv),t(L,xv),t(L,Xa),t(Xa,Uv),t(L,Yv),t(L,Qa),t(Qa,Gv),t(L,Kv),t(m,Wv),t(m,xe),t(xe,Za),t(Za,Vv),t(xe,Fv),t(xe,Ja),t(Ja,Bv),t(xe,zv),t(m,qv),t(m,$o),t($o,ga),t(ga,$v),t($o,jv),t(m,Xv),t(m,N),t(N,ei),t(ei,Qv),t(N,Zv),t(N,ti),t(ti,Jv),t(N,gv),t(N,oi),t(oi,e1),t(N,t1),t(N,Ct),t(Ct,o1),t(N,l1),c(e,kc,n),c(e,Ue,n),t(Ue,li),t(li,s1),t(Ue,a1),t(Ue,pe),t(pe,i1),t(pe,It),t(It,r1),t(pe,n1),t(pe,Pt),t(Pt,c1),t(pe,f1),c(e,Dc,n),c(e,jo,n),t(jo,d1),c(e,wc,n),c(e,Xo,n),t(Xo,p1),c(e,yc,n),c(e,Qo,n),t(Qo,u1),c(e,bc,n),c(e,Zo,n),t(Zo,E1),c(e,Oc,n),c(e,Jo,n),t(Jo,m1),c(e,Cc,n),c(e,go,n),t(go,v1),c(e,Ic,n),c(e,oe,n),t(oe,h1),t(oe,si),t(si,_1),t(oe,k1),t(oe,ai),t(ai,D1),t(oe,w1),c(e,Pc,n),c(e,Rt,n),Rt.innerHTML=x5,c(e,Rc,n),c(e,el,n),t(el,y1),c(e,Tc,n),c(e,w,n),t(w,Ye),t(Ye,ii),t(ii,b1),t(Ye,O1),t(Ye,ri),t(ri,C1),t(Ye,I1),t(w,P1),t(w,Ge),t(Ge,ni),t(ni,R1),t(Ge,T1),t(Ge,ci),t(ci,L1),t(Ge,N1),t(w,H1),t(w,le),t(le,fi),t(fi,S1),t(le,A1),t(le,di),t(di,M1),t(le,x1),t(le,pi),t(pi,U1),t(le,Y1),t(w,G1),t(w,H),t(H,ui),t(ui,K1),t(H,W1),t(H,Ei),t(Ei,V1),t(H,F1),t(H,mi),t(mi,B1),t(H,z1),t(H,vi),t(vi,q1),t(H,$1),t(w,j1),t(w,Ke),t(Ke,hi),t(hi,X1),t(Ke,Q1),t(Ke,_i),t(_i,Z1),t(Ke,J1),c(e,Lc,n),c(e,tl,n),t(tl,g1),c(e,Nc,n),c(e,ol,n),t(ol,eh),c(e,Hc,n),c(e,Tt,n),Tt.innerHTML=U5,c(e,Sc,n),c(e,ll,n),t(ll,th),c(e,Ac,n),c(e,sl,n),t(sl,oh),c(e,Mc,n),c(e,Lt,n),Lt.innerHTML=Y5,c(e,xc,n),c(e,al,n),t(al,lh),c(e,Uc,n),c(e,y,n),t(y,We),t(We,ki),t(ki,sh),t(We,ah),t(We,Di),t(Di,ih),t(We,rh),t(y,nh),t(y,se),t(se,wi),t(wi,ch),t(se,fh),t(se,yi),t(yi,dh),t(se,ph),t(se,bi),t(bi,uh),t(se,Eh),t(y,mh),t(y,il),t(il,Oi),t(Oi,vh),t(il,hh),t(y,_h),t(y,ae),t(ae,Ci),t(Ci,kh),t(ae,Dh),t(ae,Ii),t(Ii,wh),t(ae,yh),t(ae,Pi),t(Pi,bh),t(ae,Oh),t(y,Ch),t(y,C),t(C,Ri),t(Ri,Ih),t(C,Ph),t(C,Ti),t(Ti,Rh),t(C,Th),t(C,Li),t(Li,Lh),t(C,Nh),t(C,Ni),t(Ni,Hh),t(C,Sh),t(C,Nt),t(Nt,Ve),t(Ve,Hi),t(Hi,Ah),t(Ve,Mh),t(Ve,Si),t(Si,xh),t(Ve,Uh),t(Nt,Yh),t(Nt,rl),t(rl,Ai),t(Ai,Gh),t(rl,Kh),c(e,Yc,n),c(e,nl,n),t(nl,Wh),c(e,Gc,n),c(e,cl,n),t(cl,Vh),c(e,Kc,n),c(e,Ht,n),Ht.innerHTML=G5,c(e,Wc,n),c(e,fl,n),t(fl,Fh),c(e,Vc,n),c(e,S,n),t(S,Fe),t(Fe,Mi),t(Mi,Bh),t(Fe,zh),t(Fe,xi),t(xi,qh),t(Fe,$h),t(S,jh),t(S,dl),t(dl,Ui),t(Ui,Xh),t(dl,Qh),t(S,Zh),t(S,pl),t(pl,Yi),t(Yi,Jh),t(pl,gh),t(S,e3),t(S,ul),t(ul,Gi),t(Gi,t3),t(ul,o3),c(e,Fc,n),c(e,Bc,n),c(e,zc,n),c(e,El,n),t(El,l3),c(e,qc,n),c(e,$c,n),c(e,jc,n),c(e,ml,n),t(ml,s3),c(e,Xc,n),c(e,vl,n),t(vl,a3),c(e,Qc,n),c(e,hl,n),t(hl,i3),c(e,Zc,n),c(e,b,n),t(b,Ki),t(Ki,r3),t(b,n3),t(b,Wi),t(Wi,c3),t(b,f3),t(b,Vi),t(Vi,d3),t(b,p3),t(b,Fi),t(Fi,u3),t(b,E3),t(b,Bi),t(Bi,m3)},p:L3,i:L3,o:L3,d(e){e&&o(he),e&&o(or),e&&o(Gt),e&&o(lr),e&&o(Kt),e&&o(sr),e&&o(Wt),e&&o(ar),e&&o(Vt),e&&o(ir),e&&o(Ft),e&&o(rr),e&&o(Bt),e&&o(nr),e&&o(_e),e&&o(cr),e&&o(zt),e&&o(fr),e&&o(qt),e&&o(dr),e&&o(Ze),e&&o(pr),e&&o($t),e&&o(ur),e&&o(ke),e&&o(Er),e&&o(jt),e&&o(mr),e&&o(Xt),e&&o(vr),e&&o(Qt),e&&o(hr),e&&o(De),e&&o(_r),e&&o(Zt),e&&o(kr),e&&o(I),e&&o(Dr),e&&o(Jt),e&&o(wr),e&&o(we),e&&o(yr),e&&o(gt),e&&o(br),e&&o(eo),e&&o(Or),e&&o(ye),e&&o(Cr),e&&o(to),e&&o(Ir),e&&o(Pr),e&&o(Rr),e&&o(oo),e&&o(Tr),e&&o(lo),e&&o(Lr),e&&o(so),e&&o(Nr),e&&o(be),e&&o(Hr),e&&o(Je),e&&o(Sr),e&&o(ao),e&&o(Ar),e&&o(io),e&&o(Mr),e&&o(ge),e&&o(xr),e&&o(ro),e&&o(Ur),e&&o(no),e&&o(Yr),e&&o(et),e&&o(Gr),e&&o(co),e&&o(Kr),e&&o(fo),e&&o(Wr),e&&o(tt),e&&o(Vr),e&&o(po),e&&o(Fr),e&&o(uo),e&&o(Br),e&&o(ot),e&&o(zr),e&&o(V),e&&o(qr),e&&o(Oe),e&&o($r),e&&o(Eo),e&&o(jr),e&&o(mo),e&&o(Xr),e&&o(lt),e&&o(Qr),e&&o(Ce),e&&o(Zr),e&&o(F),e&&o(Jr),e&&o(at),e&&o(gr),e&&o(B),e&&o(en),e&&o(Ie),e&&o(tn),e&&o(vo),e&&o(on),e&&o(ho),e&&o(ln),e&&o(it),e&&o(sn),e&&o(_o),e&&o(an),e&&o(ko),e&&o(rn),e&&o(rt),e&&o(nn),e&&o(U),e&&o(cn),e&&o(Do),e&&o(fn),e&&o(wo),e&&o(dn),e&&o(nt),e&&o(pn),e&&o(Pe),e&&o(un),e&&o(yo),e&&o(En),e&&o(v),e&&o(mn),e&&o(ct),e&&o(vn),e&&o(Re),e&&o(hn),e&&o(z),e&&o(_n),e&&o(bo),e&&o(kn),e&&o(q),e&&o(Dn),e&&o(Oo),e&&o(wn),e&&o($),e&&o(yn),e&&o(dt),e&&o(bn),e&&o(Y),e&&o(On),e&&o(Co),e&&o(Cn),e&&o(Io),e&&o(In),e&&o(pt),e&&o(Pn),e&&o(Po),e&&o(Rn),e&&o(ut),e&&o(Tn),e&&o(j),e&&o(Ln),e&&o(Et),e&&o(Nn),e&&o(Ro),e&&o(Hn),e&&o(To),e&&o(Sn),e&&o(mt),e&&o(An),e&&o(X),e&&o(Mn),e&&o(No),e&&o(xn),e&&o(Ho),e&&o(Un),e&&o(ht),e&&o(Yn),e&&o(_t),e&&o(Gn),e&&o(P),e&&o(Kn),e&&o(h),e&&o(Wn),e&&o(Q),e&&o(Vn),e&&o(Z),e&&o(Fn),e&&o(So),e&&o(Bn),e&&o(J),e&&o(zn),e&&o(kt),e&&o(qn),e&&o(Ao),e&&o($n),e&&o(Mo),e&&o(jn),e&&o(Dt),e&&o(Xn),e&&o(xo),e&&o(Qn),e&&o(Uo),e&&o(Zn),e&&o(Se),e&&o(Jn),e&&o(wt),e&&o(gn),e&&o(Yo),e&&o(ec),e&&o(Ae),e&&o(tc),e&&o(g),e&&o(oc),e&&o(Me),e&&o(lc),e&&o(u),e&&o(sc),e&&o(yt),e&&o(ac),e&&o(Go),e&&o(ic),e&&o(R),e&&o(rc),e&&o(Ko),e&&o(nc),e&&o(cc),e&&o(fc),e&&o(Wo),e&&o(dc),e&&o(Vo),e&&o(pc),e&&o(Fo),e&&o(uc),e&&o(bt),e&&o(Ec),e&&o(te),e&&o(mc),e&&o(Ot),e&&o(vc),e&&o(D),e&&o(hc),e&&o(zo),e&&o(_c),e&&o(m),e&&o(kc),e&&o(Ue),e&&o(Dc),e&&o(jo),e&&o(wc),e&&o(Xo),e&&o(yc),e&&o(Qo),e&&o(bc),e&&o(Zo),e&&o(Oc),e&&o(Jo),e&&o(Cc),e&&o(go),e&&o(Ic),e&&o(oe),e&&o(Pc),e&&o(Rt),e&&o(Rc),e&&o(el),e&&o(Tc),e&&o(w),e&&o(Lc),e&&o(tl),e&&o(Nc),e&&o(ol),e&&o(Hc),e&&o(Tt),e&&o(Sc),e&&o(ll),e&&o(Ac),e&&o(sl),e&&o(Mc),e&&o(Lt),e&&o(xc),e&&o(al),e&&o(Uc),e&&o(y),e&&o(Yc),e&&o(nl),e&&o(Gc),e&&o(cl),e&&o(Kc),e&&o(Ht),e&&o(Wc),e&&o(fl),e&&o(Vc),e&&o(S),e&&o(Fc),e&&o(Bc),e&&o(zc),e&&o(El),e&&o(qc),e&&o($c),e&&o(jc),e&&o(ml),e&&o(Xc),e&&o(vl),e&&o(Qc),e&&o(hl),e&&o(Zc),e&&o(b)}}}const ED={title:"Docker Intro",date:"2022-12-01"},{title:E5,date:vD}=ED;class hD extends fD{constructor(he){super(),dD(this,he,null,uD,pD,{})}}export{hD as default,ED as metadata};
