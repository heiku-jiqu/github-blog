import{S as qa,i as La,s as Ra,L as Va,k as r,l as c,m as u,h as t,b as i,M as za,f as ke,A as P,e as Aa,K as Qa,q as l,a as m,r as o,c as _,B as a,G as Xa,H as Za,v as el,w as tl,n as Ke,x as al,t as ll,y as ol}from"./index-174477ec.js";import{f as nl}from"./index-cd54725b.js";function Ia(y,n,h){const f=y.slice();return f[2]=n[h],f[4]=h,f}function sl(y){return{c:P,l:P,m:P,p:P,i:P,o:P,d:P}}function il(y){let n,h=y[1],f=[];for(let d=0;d<h.length;d+=1)f[d]=Na(Ia(y,h,d));return{c(){for(let d=0;d<f.length;d+=1)f[d].c();n=Aa()},l(d){for(let v=0;v<f.length;v+=1)f[v].l(d);n=Aa()},m(d,v){for(let p=0;p<f.length;p+=1)f[p].m(d,v);i(d,n,v)},p(d,v){if(v&1){h=d[1];let p;for(p=0;p<h.length;p+=1){const D=Ia(d,h,p);f[p]?(f[p].p(D,v),ke(f[p],1)):(f[p]=Na(D),f[p].c(),ke(f[p],1),f[p].m(n.parentNode,n))}for(;p<f.length;p+=1)f[p].d(1);f.length=h.length}},i(d){for(let v=0;v<h.length;v+=1)ke(f[v])},o:P,d(d){Qa(f,d),d&&t(n)}}}function Na(y){let n,h,f=y[2].year_of_balance+"",d,v,p=y[2].amount+"",D,j,O=y[2].actual_revised_estimated+"",L,$,U=y[2].item+"",R,A,H;return{c(){n=r("section"),h=l("Year: "),d=l(f),v=l(" | Balance: "),D=l(p),j=l(" | Type: "),L=l(O),$=l(` | Item:
				`),R=l(U),A=m()},l(T){n=c(T,"SECTION",{});var E=u(n);h=o(E,"Year: "),d=o(E,f),v=o(E," | Balance: "),D=o(E,p),j=o(E," | Type: "),L=o(E,O),$=o(E,` | Item:
				`),R=o(E,U),A=_(E),E.forEach(t)},m(T,E){i(T,n,E),a(n,h),a(n,d),a(n,v),a(n,D),a(n,j),a(n,L),a(n,$),a(n,R),a(n,A)},p:P,i(T){H||Xa(()=>{H=Za(n,nl,{delay:y[4]*50}),H.start()})},o:P,d(T){T&&t(n)}}}function rl(y){let n,h;return{c(){n=r("p"),h=l("loading..")},l(f){n=c(f,"P",{});var d=u(n);h=o(d,"loading.."),d.forEach(t)},m(f,d){i(f,n,d),a(n,h)},p:P,i:P,o:P,d(f){f&&t(n)}}}function cl(y){let n,h={ctx:y,current:null,token:null,hasCatch:!1,pending:rl,then:il,catch:sl,value:1};return Va(y[0],h),{c(){n=r("div"),h.block.c()},l(f){n=c(f,"DIV",{});var d=u(n);h.block.l(d),d.forEach(t)},m(f,d){i(f,n,d),h.block.m(n,h.anchor=null),h.mount=()=>n,h.anchor=null},p(f,[d]){y=f,za(h,y,d)},i(f){ke(h.block)},o:P,d(f){f&&t(n),h.block.d(),h.token=null,h=null}}}async function ul(){const y="https://data.gov.sg/api/action/datastore_search",h={resource_id:"98856a60-33cd-482a-9dc4-1ed52e562d5d",q:"balance"};let f=new URLSearchParams(h);const v=await(await fetch(`${y}?${f}`)).json();return console.log(v),v.result.records}function fl(y){return[ul()]}class dl extends qa{constructor(n){super(),La(this,n,fl,cl,Ra,{})}}function hl(y){let n,h,f,d,v,p,D,j,O,L,$,U,R,A,H,T,E,W,Ve,ge,F,ze,Ce,I,Qe,te,Xe,Ze,Oe,K,et,De,V,tt,He,N,at,ae,lt,ot,Te,B,Ba=`<code class="language-undefined">const promise = new Promise((resolve, reject) =&gt; &#123;
    setTimeout(() =&gt; &#123;
        resolve(123);
    &#125;, 300);
&#125;);
promise
    .then((value_in_promise) =&gt; &#123;
        value_in_promise.json() // this is also an async method that returns Promise!
    &#125;)
    .then((value_as_json) =&gt; &#123;
        console.log(value_as_json)
    &#125;)</code>`,xe,z,nt,Se,C,st,le,it,rt,oe,ct,ut,ne,ft,dt,$e,w,se,ht,pt,ie,mt,_t,re,vt,yt,ce,wt,Et,ue,bt,Pt,fe,kt,gt,de,Ct,Ot,he,Dt,Ht,je,G,Ga=`<code class="language-undefined">async function runAsyncCode() &#123;
    let output = await callAsyncApi(); //
    let output_as_json = await output.json();
    console.log(output_as_json)
    return output_as_json
&#125;</code>`,Ae,Q,Tt,Ie,k,xt,pe,St,$t,me,jt,At,_e,It,Nt,ve,Mt,qt,Ne,M,Lt,ye,Rt,Bt,Me,g,Gt,we,Jt,Yt,Ee,Ut,Wt,be,Ft,Kt,Pe,Vt,zt,qe,J,Ja=`<code class="language-undefined">let data = null;
runAsyncCode()
    .then((inner_value) =&gt; &#123;
        data = inner_value
    &#125;)</code>`,Le,X,Qt,Re,Z,Xt,Be,Y,Ya=`<code class="language-undefined">&#123;#await runAsyncCode()&#125;
    &lt;p&gt;...loading...&lt;p&gt;
&#123;:then inner_value&#125;
    &lt;p&gt;The inner value is &#123;inner_value&#125;&lt;p&gt;
&#123;/await&#125;</code>`,Ge,ee,Zt,Je;return d=new dl({}),{c(){n=r("h1"),h=l(Ma),f=m(),el(d.$$.fragment),v=m(),p=r("h1"),D=l("async"),j=m(),O=r("p"),L=l("Normal code is "),$=r("em"),U=l("synchronous"),R=l(", i.e. it will run sequentially line by line, waiting for code to finish executing before going to the next code."),A=m(),H=r("p"),T=l("Sometimes code has to wait for non-CPU intensive tasks (e.g. calling API), and we want to process other things whilst waiting for these tasks to finish in the background."),E=m(),W=r("p"),Ve=l("This is where asynchronous programming comes in to help us run things is parallel."),ge=m(),F=r("h1"),ze=l("async in Javascript"),Ce=m(),I=r("p"),Qe=l("Implementations of async programming defers in different programming language, but in Javascript, the most fundamental async type is the "),te=r("em"),Xe=l("Promise"),Ze=l("."),Oe=m(),K=r("p"),et=l(`A promise short circuits the waiting time by returning a container immediately, allowing the subsequent code to run whilst it wait in the background.
This container wraps the actual value that the async task will eventually return.`),De=m(),V=r("p"),tt=l("How do to use the value inside the Promise then?"),He=m(),N=r("p"),at=l("Promises have a "),ae=r("code"),lt=l(".then()"),ot=l(` method that takes a function as an argument.
This function will be executed once the value has been successfully fulfilled by the Promise, and the value inside the promise will be passed into this function as an argument.`),Te=m(),B=r("pre"),xe=m(),z=r("h1"),nt=l("using async/await"),Se=m(),C=r("p"),st=l("Chaining a lot of "),le=r("code"),it=l(".then()"),rt=l(` closures looks ugly.
Instead, using the `),oe=r("code"),ct=l("async"),ut=l(" and "),ne=r("code"),ft=l("await"),dt=l(" syntax helps make it look cleaner, as it lets you write code that is more like normal synchronous code."),$e=m(),w=r("p"),se=r("code"),ht=l("async"),pt=l(" keyword is used to define an "),ie=r("code"),mt=l("async function"),_t=l(", which will automatically make the function return a "),re=r("code"),vt=l("Promise"),yt=l(`.
Within the `),ce=r("code"),wt=l("async function"),Et=l(", use "),ue=r("code"),bt=l("await"),Pt=l(" before any async expression (i.e. code that returns Promises) to force the code to wait for that expression to finish and "),fe=r("strong"),kt=l("unwrap"),gt=l(` the value inside the Promise.
`),de=r("code"),Ct=l("await"),Ot=l(" can only be used within an "),he=r("code"),Dt=l("async"),Ht=l(" function."),je=m(),G=r("pre"),Ae=m(),Q=r("h1"),Tt=l("How to assign value inside promise to a variable?"),Ie=m(),k=r("p"),xt=l("Notice that "),pe=r("code"),St=l("async"),$t=l(` functions implicitly wraps its output in a Promise.
Notice also that you can only use `),me=r("code"),jt=l("await"),At=l(", which unwraps a Promise, "),_e=r("em"),It=l("inside"),Nt=m(),ve=r("code"),Mt=l("async"),qt=l(` functions.
How then, do you assign the value inside Promise into a variable?`),Ne=m(),M=r("p"),Lt=l(`You will need to first instantiate a variable, and then assign the Promise\u2019s value once it has been resolved.
To do this, we can do the assignment within the `),ye=r("code"),Rt=l(".then()"),Bt=l(" closure."),Me=m(),g=r("p"),Gt=l("So at the end, "),we=r("code"),Jt=l("async"),Yt=l("/"),Ee=r("code"),Ut=l("await"),Wt=l(" is only able to abstract away all the middle "),be=r("code"),Ft=l(".then()"),Kt=l(" closures, but ultimately "),Pe=r("code"),Vt=l(".then()"),zt=l(" is still needed in the final step to assign the value to a variable."),qe=m(),J=r("pre"),Le=m(),X=r("h2"),Qt=l("Svelte way"),Re=m(),Z=r("p"),Xt=l("Svelte abstracts away this complexity by using its await blocks"),Be=m(),Y=r("pre"),Ge=m(),ee=r("h1"),Zt=l("Error handling"),this.h()},l(e){n=c(e,"H1",{});var s=u(n);h=o(s,Ma),s.forEach(t),f=_(e),tl(d.$$.fragment,e),v=_(e),p=c(e,"H1",{});var ea=u(p);D=o(ea,"async"),ea.forEach(t),j=_(e),O=c(e,"P",{});var Ye=u(O);L=o(Ye,"Normal code is "),$=c(Ye,"EM",{});var ta=u($);U=o(ta,"synchronous"),ta.forEach(t),R=o(Ye,", i.e. it will run sequentially line by line, waiting for code to finish executing before going to the next code."),Ye.forEach(t),A=_(e),H=c(e,"P",{});var aa=u(H);T=o(aa,"Sometimes code has to wait for non-CPU intensive tasks (e.g. calling API), and we want to process other things whilst waiting for these tasks to finish in the background."),aa.forEach(t),E=_(e),W=c(e,"P",{});var la=u(W);Ve=o(la,"This is where asynchronous programming comes in to help us run things is parallel."),la.forEach(t),ge=_(e),F=c(e,"H1",{});var oa=u(F);ze=o(oa,"async in Javascript"),oa.forEach(t),Ce=_(e),I=c(e,"P",{});var Ue=u(I);Qe=o(Ue,"Implementations of async programming defers in different programming language, but in Javascript, the most fundamental async type is the "),te=c(Ue,"EM",{});var na=u(te);Xe=o(na,"Promise"),na.forEach(t),Ze=o(Ue,"."),Ue.forEach(t),Oe=_(e),K=c(e,"P",{});var sa=u(K);et=o(sa,`A promise short circuits the waiting time by returning a container immediately, allowing the subsequent code to run whilst it wait in the background.
This container wraps the actual value that the async task will eventually return.`),sa.forEach(t),De=_(e),V=c(e,"P",{});var ia=u(V);tt=o(ia,"How do to use the value inside the Promise then?"),ia.forEach(t),He=_(e),N=c(e,"P",{});var We=u(N);at=o(We,"Promises have a "),ae=c(We,"CODE",{});var ra=u(ae);lt=o(ra,".then()"),ra.forEach(t),ot=o(We,` method that takes a function as an argument.
This function will be executed once the value has been successfully fulfilled by the Promise, and the value inside the promise will be passed into this function as an argument.`),We.forEach(t),Te=_(e),B=c(e,"PRE",{class:!0});var Ua=u(B);Ua.forEach(t),xe=_(e),z=c(e,"H1",{});var ca=u(z);nt=o(ca,"using async/await"),ca.forEach(t),Se=_(e),C=c(e,"P",{});var q=u(C);st=o(q,"Chaining a lot of "),le=c(q,"CODE",{});var ua=u(le);it=o(ua,".then()"),ua.forEach(t),rt=o(q,` closures looks ugly.
Instead, using the `),oe=c(q,"CODE",{});var fa=u(oe);ct=o(fa,"async"),fa.forEach(t),ut=o(q," and "),ne=c(q,"CODE",{});var da=u(ne);ft=o(da,"await"),da.forEach(t),dt=o(q," syntax helps make it look cleaner, as it lets you write code that is more like normal synchronous code."),q.forEach(t),$e=_(e),w=c(e,"P",{});var b=u(w);se=c(b,"CODE",{});var ha=u(se);ht=o(ha,"async"),ha.forEach(t),pt=o(b," keyword is used to define an "),ie=c(b,"CODE",{});var pa=u(ie);mt=o(pa,"async function"),pa.forEach(t),_t=o(b,", which will automatically make the function return a "),re=c(b,"CODE",{});var ma=u(re);vt=o(ma,"Promise"),ma.forEach(t),yt=o(b,`.
Within the `),ce=c(b,"CODE",{});var _a=u(ce);wt=o(_a,"async function"),_a.forEach(t),Et=o(b,", use "),ue=c(b,"CODE",{});var va=u(ue);bt=o(va,"await"),va.forEach(t),Pt=o(b," before any async expression (i.e. code that returns Promises) to force the code to wait for that expression to finish and "),fe=c(b,"STRONG",{});var ya=u(fe);kt=o(ya,"unwrap"),ya.forEach(t),gt=o(b,` the value inside the Promise.
`),de=c(b,"CODE",{});var wa=u(de);Ct=o(wa,"await"),wa.forEach(t),Ot=o(b," can only be used within an "),he=c(b,"CODE",{});var Ea=u(he);Dt=o(Ea,"async"),Ea.forEach(t),Ht=o(b," function."),b.forEach(t),je=_(e),G=c(e,"PRE",{class:!0});var Wa=u(G);Wa.forEach(t),Ae=_(e),Q=c(e,"H1",{});var ba=u(Q);Tt=o(ba,"How to assign value inside promise to a variable?"),ba.forEach(t),Ie=_(e),k=c(e,"P",{});var x=u(k);xt=o(x,"Notice that "),pe=c(x,"CODE",{});var Pa=u(pe);St=o(Pa,"async"),Pa.forEach(t),$t=o(x,` functions implicitly wraps its output in a Promise.
Notice also that you can only use `),me=c(x,"CODE",{});var ka=u(me);jt=o(ka,"await"),ka.forEach(t),At=o(x,", which unwraps a Promise, "),_e=c(x,"EM",{});var ga=u(_e);It=o(ga,"inside"),ga.forEach(t),Nt=_(x),ve=c(x,"CODE",{});var Ca=u(ve);Mt=o(Ca,"async"),Ca.forEach(t),qt=o(x,` functions.
How then, do you assign the value inside Promise into a variable?`),x.forEach(t),Ne=_(e),M=c(e,"P",{});var Fe=u(M);Lt=o(Fe,`You will need to first instantiate a variable, and then assign the Promise\u2019s value once it has been resolved.
To do this, we can do the assignment within the `),ye=c(Fe,"CODE",{});var Oa=u(ye);Rt=o(Oa,".then()"),Oa.forEach(t),Bt=o(Fe," closure."),Fe.forEach(t),Me=_(e),g=c(e,"P",{});var S=u(g);Gt=o(S,"So at the end, "),we=c(S,"CODE",{});var Da=u(we);Jt=o(Da,"async"),Da.forEach(t),Yt=o(S,"/"),Ee=c(S,"CODE",{});var Ha=u(Ee);Ut=o(Ha,"await"),Ha.forEach(t),Wt=o(S," is only able to abstract away all the middle "),be=c(S,"CODE",{});var Ta=u(be);Ft=o(Ta,".then()"),Ta.forEach(t),Kt=o(S," closures, but ultimately "),Pe=c(S,"CODE",{});var xa=u(Pe);Vt=o(xa,".then()"),xa.forEach(t),zt=o(S," is still needed in the final step to assign the value to a variable."),S.forEach(t),qe=_(e),J=c(e,"PRE",{class:!0});var Fa=u(J);Fa.forEach(t),Le=_(e),X=c(e,"H2",{});var Sa=u(X);Qt=o(Sa,"Svelte way"),Sa.forEach(t),Re=_(e),Z=c(e,"P",{});var $a=u(Z);Xt=o($a,"Svelte abstracts away this complexity by using its await blocks"),$a.forEach(t),Be=_(e),Y=c(e,"PRE",{class:!0});var Ka=u(Y);Ka.forEach(t),Ge=_(e),ee=c(e,"H1",{});var ja=u(ee);Zt=o(ja,"Error handling"),ja.forEach(t),this.h()},h(){Ke(B,"class","language-undefined"),Ke(G,"class","language-undefined"),Ke(J,"class","language-undefined"),Ke(Y,"class","language-undefined")},m(e,s){i(e,n,s),a(n,h),i(e,f,s),al(d,e,s),i(e,v,s),i(e,p,s),a(p,D),i(e,j,s),i(e,O,s),a(O,L),a(O,$),a($,U),a(O,R),i(e,A,s),i(e,H,s),a(H,T),i(e,E,s),i(e,W,s),a(W,Ve),i(e,ge,s),i(e,F,s),a(F,ze),i(e,Ce,s),i(e,I,s),a(I,Qe),a(I,te),a(te,Xe),a(I,Ze),i(e,Oe,s),i(e,K,s),a(K,et),i(e,De,s),i(e,V,s),a(V,tt),i(e,He,s),i(e,N,s),a(N,at),a(N,ae),a(ae,lt),a(N,ot),i(e,Te,s),i(e,B,s),B.innerHTML=Ba,i(e,xe,s),i(e,z,s),a(z,nt),i(e,Se,s),i(e,C,s),a(C,st),a(C,le),a(le,it),a(C,rt),a(C,oe),a(oe,ct),a(C,ut),a(C,ne),a(ne,ft),a(C,dt),i(e,$e,s),i(e,w,s),a(w,se),a(se,ht),a(w,pt),a(w,ie),a(ie,mt),a(w,_t),a(w,re),a(re,vt),a(w,yt),a(w,ce),a(ce,wt),a(w,Et),a(w,ue),a(ue,bt),a(w,Pt),a(w,fe),a(fe,kt),a(w,gt),a(w,de),a(de,Ct),a(w,Ot),a(w,he),a(he,Dt),a(w,Ht),i(e,je,s),i(e,G,s),G.innerHTML=Ga,i(e,Ae,s),i(e,Q,s),a(Q,Tt),i(e,Ie,s),i(e,k,s),a(k,xt),a(k,pe),a(pe,St),a(k,$t),a(k,me),a(me,jt),a(k,At),a(k,_e),a(_e,It),a(k,Nt),a(k,ve),a(ve,Mt),a(k,qt),i(e,Ne,s),i(e,M,s),a(M,Lt),a(M,ye),a(ye,Rt),a(M,Bt),i(e,Me,s),i(e,g,s),a(g,Gt),a(g,we),a(we,Jt),a(g,Yt),a(g,Ee),a(Ee,Ut),a(g,Wt),a(g,be),a(be,Ft),a(g,Kt),a(g,Pe),a(Pe,Vt),a(g,zt),i(e,qe,s),i(e,J,s),J.innerHTML=Ja,i(e,Le,s),i(e,X,s),a(X,Qt),i(e,Re,s),i(e,Z,s),a(Z,Xt),i(e,Be,s),i(e,Y,s),Y.innerHTML=Ya,i(e,Ge,s),i(e,ee,s),a(ee,Zt),Je=!0},p:P,i(e){Je||(ke(d.$$.fragment,e),Je=!0)},o(e){ll(d.$$.fragment,e),Je=!1},d(e){e&&t(n),e&&t(f),ol(d,e),e&&t(v),e&&t(p),e&&t(j),e&&t(O),e&&t(A),e&&t(H),e&&t(E),e&&t(W),e&&t(ge),e&&t(F),e&&t(Ce),e&&t(I),e&&t(Oe),e&&t(K),e&&t(De),e&&t(V),e&&t(He),e&&t(N),e&&t(Te),e&&t(B),e&&t(xe),e&&t(z),e&&t(Se),e&&t(C),e&&t($e),e&&t(w),e&&t(je),e&&t(G),e&&t(Ae),e&&t(Q),e&&t(Ie),e&&t(k),e&&t(Ne),e&&t(M),e&&t(Me),e&&t(g),e&&t(qe),e&&t(J),e&&t(Le),e&&t(X),e&&t(Re),e&&t(Z),e&&t(Be),e&&t(Y),e&&t(Ge),e&&t(ee)}}}const pl={title:"Govt Fiscal Position",date:"2022-10-13"},{title:Ma,date:vl}=pl;class yl extends qa{constructor(n){super(),La(this,n,null,hl,Ra,{})}}export{yl as default,pl as metadata};
